[
    {
        "instruction": "Simulate the diffusion process of a single-component gas molecule using LAMMPS.",
        "input": "",
        "output": "#Initialize Simulation#\nunits lj                # units\ndimension 2             # dimension\nboundary p p p          # boundary conditions\natom_style atomic       # atom style\n\n#Create Atoms Initial Conditions#\nlattice hex 1.0                        # lattice type\nregion box block 0 20 0 10 -0.1 0.1    # simulation region\ncreate_box 1 box                       # create simulation box\nregion 2 block 5 15 0 10 -0.1 0.1\ncreate_atoms 1 region 2                # create atoms based on lattice points\nmass 1 1.0                             # mass\nvelocity all create 2.5 87287          # velocity\n\n#Define Interatomic Potential#\npair_style lj/cut 2.5                  # interatomic potential style\npair_coeff 1 1 1.0 1.0 2.5             # potential parameters\nneighbor 0.3 bin                       # neighbor list\nneigh_modify every 20 delay 0 check no # neighbor algorithm\nfix 1 all nvt temp 0.5 0.5 0.01        # time step operation\nfix 2 all enforce2d\n\n#Run MD Simulation#\ndump 1 all custom 100 toEquil.lammpstrj id type x y z vx vy vz    # output molecular dynamics simulation information\nthermo 500                                                        # output thermodynamic information interval\nrun 10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the diffusion process of a multi-component gas molecule using LAMMPS.",
        "input": "",
        "output": "#Initialize Simulation#\nunits lj\ndimension 2\nboundary p p p\natom_style atomic\nvariable t equal 0.5             # Define system temperature\n\n#Create Atoms Initial Conditions#\nlattice sq 1.0\nregion box block 0 100 0 100 -0.5 0.5\ncreate_box 2 box\ncreate_atoms 1 random 2500 12345 box\ncreate_atoms 2 random 2500 54321 box        # Randomly create atoms\nmass 1 1.0\nmass 2 1.0\n\n#Define Interatomic Potential#\npair_style hybrid lj/cut 2.5 soft 5.0\npair_coeff 1 1 lj/cut 1.0 1.0 2.5\npair_coeff 2 2 lj/cut 1.0 1.0 2.5\npair_coeff 1 2 soft 5.0\n\n#Run MD Simulation#\ncompute eng all pe/atom                                        # Calculate potential energy per atom\ncompute eatoms all reduce sum c_eng                            # Calculate the sum of potential energies of all atoms\nthermo_style custom step temp epair etotal press c_eatoms      # Define the thermodynamic quantities to be output\nthermo 1000\ndump id all atom 100 dump.lammpstrj\nminimize 1e-4 1e-6 1000 10000                                  # Prevent atoms from being too close\nvelocity all create $t 87287\nfix nvt all nvt temp $t $t 0.01\nrun 50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the equilibrium lattice constant of FCC-Al using LAMMPS.",
        "input": "",
        "output": "units metal\ndimension 3\nboundary p p p\natom_style atomic\n\nlattice fcc 4.00\nregion box block 0 1 0 1 0 1 units lattice\ncreate_box 1 box\ncreate_atoms 1 box\n\npair_style eam/fs\npair_coeff * * Al_mm.eam.fs Al\n\nneighbor 2.0 bin\nneigh_modify delay 10 check yes\n\ncompute eng all pe/atom\ncompute eatoms all reduce sum c_eng\ndump 1 all atom 1 relax.lammpstrj\n\n#Run minimization#\nreset_timestep 0\nfix 1 all box/relax iso 0.0 vmax 0.001\nthermo 10\nthermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms\n\nmin_style cg\nminimize 1e-25 1e-25 5000 10000\n\nvariable natoms equal count(all)\nvariable teng equal \"c_eatoms\"\nvariable a equal lx\nvariable ecoh equal \"v_teng/v_natomsâ€œ\n\nprint \"Total energy (eV)= ${teng};\" \nprint \"Number of atoms = ${natoms};\"\nprint \"Lattice constant (Angstroms) = ${a};\" \nprint \"Cohesive energy (eV/atom) = ${ecoh};\" ",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the specific heat capacity of Cu using LAMMPS.",
        "input": "use the NVT ensemble, keep the volume constant during the simulation, consider the change of system energy with temperature.",
        "output": "units metal \nboundary p p p\natom_style atomic\n\nvariable Tstart equal 10.0\nvariable Tstop equal 1000\nvariable Tdamp equal 0.2\n\nlattice fcc 3.62\nregion simbox block 0 8 0 8 0 8\ncreate_box 1 simbox\ncreate_atoms 1 box\n\npair_style eam\npair_coeff 1 1 Cu_u3.eam\n\nvelocity all create ${Tstart} 825577 dist gaussian\n\n#Equilibrium step\nfix 1 all nvt temp ${Tstart} ${Tstart} ${Tdamp}\nthermo 100\nrun 5000\nunfix 1\nreset_timestep 0\nthermo 1000\nthermo_style custom step temp pe etotal\n\n#Heating step\nprint \"Production steps started!\"\nfix 2 all nvt temp ${Tstart} ${Tstop} ${Tdamp}\nrun 120000 \nprint \"Simulation complete!\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process using LAMMPS.",
        "input": "",
        "output": "units lj\nboundary p p p\natom_style atomic\n\nlattice fcc 1.073\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\nmass 1 1.0\n\npair_style lj/cut 5.0\npair_coeff 1 1 1.0 1.0 5.0\nvelocity all create 0.01 87287\n\ntimestep 0.005\n\n#Equilibrium step\nfix 1 all nvt temp 0.01 0.01 0.2\nrun 50000\nunfix 1\n\n#Heating step\nreset_timestep 0\nthermo 1000\nthermo_style custom step temp pe etotal press vol\nfix 1 all npt temp 0.01 0.85 1.0 iso 0 0 1.0\ndump 1 all atom 10000 fusion.lammpstrj\nrun 1000000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the solidification process using LAMMPS.",
        "input": "",
        "output": "units lj\nboundary p p p\natom_style atomic\n\nlattice fcc 1.073\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\nmass 1 1.0\n\npair_style lj/cut 5.0\npair_coeff 1 1 1.0 1.0 5.0\nvelocity all create 0.01 87287\n\ntimestep 0.005\n\n#Equilibrium step\nfix 1 all nvt temp 0.85 0.85 0.2\nrun 50000\nunfix 1\n\n#Heating step\nreset_timestep 0\nthermo 1000\nthermo_style custom step temp pe etotal press vol\nfix 1 all npt temp 0.85 0.01 1.0 iso 0 0 1.0\ndump 1 all atom 10000 quench.lammpstrj\nrun 1000000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of CuNi nanoparticles using LAMMPS.",
        "input": "",
        "output": "# Initialization\nunits metal\nboundary p p p\natom_style atomic\n\n# Generate NiCu nanoparticles\nvariable A0 equal 3.589\nlattice fcc ${A0}\nregion mybox block 0 40 0 40 0 40\ncreate_box 2 mybox                         # 2 types of atoms\nregion CuNi_nano sphere 20 20 20 2\ncreate_atoms 1 region CuNi_nano\nset type 1 type/fraction 2 0.5 7777\nmass 1 63.54600000                         # Cu\nmass 2 58.69340000                         # Ni\n\n# Using EAM potential\npair_style eam/alloy\npair_coeff * * CuNi.eam.alloy Cu Ni\nwrite_data nanoparticle.cif\nrun 0\n\n# Thermal equilibrium step\nthermo 1000\nvariable j loop 0 20\nlabel loop_j\nvariable temperature equal 900+10*$j\nvariable T equal temp\nvariable Eatom equal etotal/atoms\nfix 1 all nvt temp ${temperature} ${temperature} 0.1\nrun 50000\nunfix 1\n\n# Statistical step\nfix 2 all ave/time 100 5 1000 v_T v_Eatom file data_ave${temperature}.txt\ndump 1 all atom 5000 fusion_${temperature}.atom\nfix 1 all nvt temp ${temperature} ${temperature} 0.1\nrun 500000\n\nunfix 1\nundump 1\nnext j\njump SELF loop_j",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the sintering process of Pt nanoparticles using LAMMPS.",
        "input": "",
        "output": "# Initialization\nunits metal\nboundary p p p\natom_style atomic\ntimestep 0.001\n\n# Get three Pt nanoparticles \nvariable A0 equal 3.9239\nlattice fcc ${A0}\nregion mybox block 0 20 0 20 0 20\nregion sphere_pt1 sphere 7 10 8 3\nregion sphere_pt2 sphere 10 10 13.4 3\nregion sphere_pt3 sphere 13 10 8 3\ncreate_box 1 mybox\ncreate_atoms 1 region sphere_pt1\ncreate_atoms 1 region sphere_pt2\ncreate_atoms 1 region sphere_pt3\n\n# Using EAM potential\npair_style eam\npair_coeff 1 1 Pt_u3.eam\n\n# Output initial structure\ndump 1 all cfg 1 coord.*.cfg mass type xs ys zs\nrun 0\nundump 1\n\n# Define triple_neck region\nregion triple_neck block 7.5 12.5 5 15 9 13\ngroup 1 dynamic all region triple_neck every 1000\n\n# Output number of atoms in triple neck region\nvariable N equal step\nvariable T equal temp\nvariable Natom equal count(all)\nvariable V equal vol/v_Natom\nvariable sinter_atom equal count(1)\ndump 1 all xyz 1000 melt.xyz\nthermo 1000\nfix extra all print 1000 \"${N} ${T} ${sinter_atom}\" file data.txt\n\n# Run in 500k, 1000k, 1400k, respectively\nfix 1 all npt temp 500 500 0.1 iso 1 1 1\nrun 10000\nunfix 1\nfix 1 all npt temp 1000 1000 0.1 iso 1 1 1\nrun 20000\nunfix 1\nfix 1 all npt temp 1400 1400 0.1 iso 1 1 1\nrun 30000\nunfix 1",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the volume expansion of Li-S batteries using LAMMPS.",
        "input": "The Li2S.dat is considered known.",
        "output": "units real\nboundary p p p\natom_style charge\n\nread_data Li2S.dat\n\npair_style reax/c NULL checkqeq no\npair_coeff * * ffield.reax.LiS S Li\n\n# Fix 1 all qeq/reax 1 0.0 10.0 1e-6 reax/c\nneighbor 3.0 bin\nmin_style cg\nminimize 1e-4 1e-6 100 1000\n\n# Stablize at room Temp\nvelocity all create 300 96588\nthermo 1000\nthermo_style custom step temp press density vol\ncompute myRDF all rdf 50 1 1 1 2 2 1 2 2\nfix 2 all ave/time 100 10 10000 c_myRDF[*] file initial.rdf mode vector\nfix 3 all nvt temp 300 300 10\nrun 10000\nunfix 2\nunfix 3\n\n# Heating slowly\nfix 4 all npt temp 300.0 1800.0 100 iso 1.0 1.0 1000 drag 1.0\nrun 50000\nunfix 4\n\n# Keep melting\nfix 5 all npt temp 1800.0 1800.0 100 iso 1.0 1.0 1000 drag 1.0\nfix 6 all ave/time 100 10 5000 c_myRDF[*] file melted.rdf mode vector\nrun 5000\nunfix 5\nunfix 6\n\n# Rapidly quenching\nfix 7 all npt temp 1800.0 300.0 1 iso 1.0 1.0 1000 drag 0.1\nthermo 10\nrun 100\nunfix 7\n\n# Stablize the amorphous LixS at RT\nfix 8 all ave/time 100 10 5000 c_myRDF[*] file amorphous.rdf mode vector\nfix 9 all npt temp 300 300 100 iso 1.0 1.0 1000 drag 1.0\nthermo 1000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the hydrogen storage mechanism of Mg and the effect of different temperatures using LAMMPS.",
        "input": "The MgH.data is considered known.",
        "output": "units metal\ndimension 3\natom_style atomic\nboundary p p p\nread_data MgH.data\nneighbor 0.5 bin\nneigh_modify every 1 delay 0 check yes\n\nregion Mg block INF INF INF INF -0.01 5 units box\ngroup Mg region Mg\nvelocity Mg set 0 0 0\nfix 01 Mg setforce 0 0 0\nregion H2 block INF INF INF INF 6 INF units box\ngroup H2 region H2\n\nmass 1 24.3050\nmass 2 1\n\npair_style adp\npair_coeff * * Mg_H.adp.alloy.txt Mg H\n\nregion 1H block INF INF INF 9 INF units box\ngroup mobile1 dynamic all region 1H every 100\nvariable number1 equal count(mobile1)\n\nregion 2H block INF INF INF 5 9 units box\ngroup mobile2 dynamic all region 2H every 100\nvariable number2 equal count(mobile2)\n\nregion 3H block INF INF INF -0.001 5 units box\ngroup mobile3 dynamic all region 3H every 100\nvariable number3 equal count(mobile3)\n\n# compute 1 Mg temp\ncompute 2 H2 temp\ntimestep 0.001\n\nvariable T equal TEMP\nthermo 1000\nthermo_style custom step temp pe etotal press vol c_2\n\nmin_style cg\nminimize 1e-5 1e-5 10000 10000\nrun 0\n\nvelocity H2 create ${T} 71717\ndump 1 all atom 100 dump.xyz\nfix 1 H2 nvt temp ${T} ${T} 0.1\nthermo_modify lost ignore\nfix extra all print 100 \"${N} ${P} ${number1} ${number2} ${number3}\" file energy.data\nrun 200000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of graphene automatically curling onto iron nanowires using LAMMPS.",
        "input": "",
        "output": "# Initial Parameter Settings\nunits                 metal                          # units\ndimension             3                              # dimension\nboundary              s s s                          # boundary conditions, s non-periodic shrink\natom_style            atomic                         # atom style\nneighbor              0.3 bin                        # neighbor list\nneigh_modify          delay 0\ntimestep              0.001                          # time step\n\n# Model Construction\nregion                box block 0 200 0 60 -5 70 units box          # Define box region\ncreate_box            2 box                                         # Set box region for 1 type of atom\nlattice               bcc 2.8665                        # Fe lattice\nregion                Fe cylinder y 15 15 10 0 60 units box        \n# Define Fe region, axis is the y-axis, coordinates (15,15), radius 10, boundary range 0-60\ncreate_atoms          1 region Fe                                  # Generate type 1 atoms in Fe region\n\nlattice               custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\n                           basis 0.0 0.33333 0.0 &\n                           basis 0.0 0.66667 0.0 &\n                           basis 0.5 0.16667 0.0 &\n                           basis 0.5 0.83333 0.0                # Custom graphene lattice\nregion                graphene block 5 75 10 50 -1 3 units box       # Define graphene region\ncreate_atoms          2 region graphene                              # Generate type 2 atoms in graphene region\n\n# Set relative atomic masses\nmass                  1 55.845     # Fe\nmass                  2 12.011     # C\n\n# Atom Grouping\ngroup                 Fe region Fe                       # Fe atom group\ngroup                 graphene region graphene           # Graphene group\n\nwrite_data            Fe_gp.data               # Save model\n\n# Force Field Settings \npair_style            hybrid eam/fs airebo 3.0 lj/cut 10      # Hybrid potential\npair_coeff            * * eam/fs Fe.eam.fs Fe NULL            # Fe-Fe\npair_coeff            * * airebo CH.airebo NULL C             # C-C\npair_coeff            1 2 lj/cut 0.048955 2.9897              # C-Fe\n\nthermo                50                  # Output every 50 steps\ndump                  1 all atom 50 mini.xyz                # Save atom information every 50 steps\nvelocity              graphene create 300 878743            # Set initial temperature of graphene to 300K\nfix                   1 Fe setforce 0 0 0                   # Fe atom group is not subjected to force\nfix                   2 all nve                             # NVE ensemble\nrun                   13000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the composite crystallization process of aluminum and graphene using LAMMPS.",
        "input": "",
        "output": "# Initial Parameter Settings\nunits              metal             # units\ndimension          3                 # dimension\nboundary           p p p             # boundary conditions\natom_style         atomic            # atom style\nneighbor           0.3 bin           # neighbor list\nneigh_modify       delay 0  \ntimestep           0.002             # time step\n\n# Model Construction\nregion             box block 0 50 0 50 0 50 units box            # Define box region\ncreate_box         2 box                                         # Set box region for 2 types of atoms\nlattice            fcc 4.0495                                    # Al lattice\nregion             Al block 0 50 0 50 0 50 units box             # Define Al region\ncreate_atoms       1 region Al                                   # Generate type 1 atoms in Al region \n\nregion             del block 5 45 5 45 23 26 units box           # Define region to delete\ndelete_atoms       region del compress yes                       # Delete atoms, compress yes and renumber atoms\nlattice            custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\n                      basis 0.0 0.33333 0.0 &\n                      basis 0.0 0.66667 0.0 &\n                      basis 0.5 0.16667 0.0 &\n                      basis 0.5 0.83333 0.0\nregion             graphene block 5 45 5 45 23 27 units box          # Define graphene region\ncreate_atoms       2 region graphene                                 # Generate type 2 atoms in graphene region\n\n# Atom Grouping\ngroup              graphene type 2                              # Graphene atom group\ngroup              Al type 1                                    # Al atom group\n\n# Set Atom Masses\nmass               1 26.9815385                   # Al\nmass               2 12.011                       # C\n\nwrite_data         Al_gp.data                     # Save model\n\n# Force Field Settings\npair_style         hybrid lj/cut 8.5 eam/fs airebo 3.0                  # Hybrid potential\npair_coeff         1 2 lj/cut 0.04216 3.1764                            # Al-C\npair_coeff         * * eam/fs Al1.eam.fs Al NULL                        # Al-Al\npair_coeff         * * airebo CH.airebo NULL C                          # C-C\n\n# Energy Minimization\nthermo             100                                             # Output every 100 steps\ndump               1 all atom 10 mini.lammpstrj                    # Save atom information every 10 steps\nmin_style          cg                                              # Use conjugate gradient method for energy minimization\nminimize           1e-15 1e-15 10000 10000                         # Energy tolerance, force tolerance, maximum iterations, maximum evaluations\nundump             1                                               # Cancel\nreset_timestep     0                                               # Set current step to step 0\n\n# Temperature Initialization\nvelocity           Al create 1200 8877423                           # Initial temperature of Al atoms at 1200K\n\n# NPT Ensemble Relaxation\ndump               1 all atom 1000 npt.lammpstrj                      # Save atom information every 1000 steps\nfix                1 graphene setforce 0 0 0                          # Set graphene atoms to be force-free\nfix                2 all npt temp 1200 1200 0.2 iso 0 0 2            # All atoms, constant temperature and pressure\nrun                25000\nundump             1                                                # Cancel\nunfix              2\nreset_timestep     0                                                # Set current step to step 0 \n\n# NPT Ensemble Cooling and Crystallization\nthermo             1000                                        # Output every 1000 steps\nthermo_style       custom step temp ke pe press                # Custom output\ndump               1 all atom 1000 cold.lammpstrj              # Save atom information every 1000 steps\nfix                2 all npt temp 1200 300 0.2 iso 0 0 2       # All atoms, cooling from 1200K to 300K, constant pressure\nrun                450000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the Cu/Al welding process using LAMMPS.",
        "input": "",
        "output": "# Basic Parameter Settings\nunits               metal                 # Unit system\ndimension           3                     # Dimension\nboundary            p p p                 # Boundary conditions\natom_style          atomic                # Atom style\nneighbor            2.0 bin               # Neighbor list\nneigh_modify        delay 0 every 5 check yes\ntimestep            0.001                 # Time step\n\n# Model Construction\nregion              Al cylinder y 0 0 20 0 50 units box\n# Aluminum rod region, cylindrical, y-axis as the axis, center (0,0), radius 20, boundary 0-50\nregion              Cu cylinder y 0 0 20 65 115  units box\n# Copper rod region, cylindrical, y-axis as the axis, center (0,0), radius 20, boundary 65-115\nregion              box union 2 Al Cu                        # Union of Al and Cu rod regions into box region\ncreate_box          2 box                                    # Create box region with 2 types of atoms\n\nlattice             fcc 4.0495                                   # Al lattice\ncreate_atoms        1 region Al                                  # Fill Al region with type 1 atoms\nlattice             fcc 3.6149                                   # Cu lattice\ncreate_atoms        2 region Cu                                  # Fill Cu region with type 2 atoms\n\n# Set Masses\nmass                1 26.9815385          # Al\nmass                2 63.546           # Cu\n\n# Define Boundary Regions\nregion              left block INF INF INF 10 INF INF units box         # Left boundary region\nregion              right block INF INF 105 INF INF INF units box       # Right boundary region\n\n# Force Field Settings\npair_style          eam/alloy                          # Embedded atom method alloy potential\npair_coeff          * * al-cu-set.eam.alloy Al Cu # EAM potential for Al-Cu alloy\n\n# Atom Grouping\ngroup               left region left                  # Atom group for the left boundary\ngroup               right region right                # Atom group for the right boundary\ngroup               boundary union left right             # Union of left and right boundary atom groups\ngroup               mobile subtract all boundary          # Mobile atom group, subtracting boundary atoms\n\nwrite_data          Al_Cu.data                            # Save file\n\n# Set Thermodynamic Output\nthermo             100                                     # Output every 100 steps\nthermo_style       custom step temp ke pe                  # Custom output style\nthermo_modify      lost ignore                             # Ignore warnings about lost atoms\n\n# Fix Left and Right Boundaries\nfix                01 boundary setforce 0 0 0               # Boundary atoms are not subjected to force\n\n# Energy Minimization\ndump               1 all atom 10 mini.xyz                     # Save atom information every 10 steps\nmin_style          cg                                         # Use conjugate gradient method for energy minimization\nminimize           1e-15 1e-15 5000 5000                      # Energy tolerance, force tolerance, maximum iterations, maximum evaluations\nundump             1                                          # Cancel dump\nreset_timestep     0                                         # Set current step to step 0\n\n# Temperature Initialization\nvelocity           mobile create 300 789877                    # Initial temperature of mobile atoms at 300K\n\n# NVT Ensemble Relaxation\ndump               1 all atom 100 equ.xyz                        # Save atom information every 100 steps\nfix                1 all nvt temp 300 300 0.1                    # All atoms at constant temperature\nrun                10000\nundump             1                                             # Cancel dump\nunfix              1\nreset_timestep     0                                             # Set current step to step 0\n\n# Begin Welding, NVE Ensemble, No Temperature Control Needed During Welding\ndump                1 all atom 100 weld_1.xyz                     # Save atom information every 100 steps\nfix                 1 all nve                                     # NVE ensemble\nvelocity            left set 0 2.5 0 units box                    # Set velocity of left boundary atoms\nrun                 10000\nundump              1                                             # Cancel dump\nunfix               1\nreset_timestep      0                                              # Set current step to step 0\nvelocity            left set 0 0 0 units box                       # Set velocity of left boundary atoms to zero\n\n# Atom Diffusion\ndump                1 all atom 100 weld_2.xyz                      # Save atom information every 100 steps\nfix                 1 all nve                                      # NVE ensemble\nrun                 100000 ",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Model a CuZr alloy using LAMMPS and simulate their melting, solid solution, and crystallization processes.",
        "input": "",
        "output": "# Initial Simulation System Settings\nunits                      metal                      # Unit system\ndimension                  3                          # Dimension\nboundary                   p p p                      # Boundary conditions\natom_style                 atomic                     # Atom style\nneighbor                   2.0 bin                    # Neighbor list\nneigh_modify               delay 0 every 5 check yes\ntimestep                   0.001                      # Time step\n\n# Create Box\nregion                     box block 0 20 0 20 0 38 units box            # Define box region\ncreate_box                 2 box                                         # Box region with 2 types of atoms\n\n# Generate Cu Block\nlattice                    fcc 3.6149                     # Cu lattice\nregion                     Cu block 0 20 0 20 0 9 units box              # Define Cu region\ncreate_atoms               1 region Cu                                   # Generate type 1 atoms in Cu region\n\n# Generate Zr Block\nlattice                    hcp 3.232                      # Zr lattice\nregion                     Zr block 0 20 0 20 9 38 units box             # Define Zr region\ncreate_atoms               2 region Zr                                   # Generate type 2 atoms in Zr region\n\n# Set Atom Masses\nmass                       1 63.546                      # Cu\nmass                       2 91.224                      # Zr\n\n# Set EAM Potential Function\npair_style                 eam/fs\npair_coeff                 * * Cu-Zr_4.eam.fs Cu Zr\n\n# Energy Minimization\nthermo                     1000                                  # Output every 1000 steps\ndump                       1 all atom 5 1mini.xyz                # Save atom information every 5 steps\nmin_style                  cg                                    # Use conjugate gradient method for energy minimization\nminimize                   1e-15 1e-15 10000 10000               # Energy tolerance, force tolerance, maximum iterations, maximum evaluations\nundump                     1                                 # Cancel dump\nreset_timestep             0                                 # Set current step to step 0\n\n# Velocity Initialization\nvelocity                   all create 298 87955 rot yes dist gaussian               \n# Initial temperature 298K, rot yes zero angular momentum, dist gaussian Gaussian distribution\n\n# NPT Ensemble Heating and Melting\nfix                        1 all npt temp 298 3000 0.1 iso 0 0 1           # Constant pressure, heating from 298K to 3000K\ndump                       1 all atom 5000 2npt_hot.xyz                    # Save atom information every 5000 steps\nrun                        100000\nunfix                      1                             # Cancel fix\nundump                     1\nreset_timestep             0                             # Set current step to step 0\n\n# NVT Ensemble Holding and Solidification\nfix                        1 all nvt temp 3000 3000 0.1                     # Constant temperature at 3000K\ndump                       1 all atom 5000 3nvt_equ.xyz                     # Save atom information every 5000 steps\nrun                        10000\nunfix                      1                             # Cancel fix\nundump                     1\nreset_timestep             0                             # Set current step to step 0\n\n# NPT Ensemble Cooling\nfix                        1 all npt temp 3000 298 0.1 iso 0 0 1           # Constant pressure, cooling from 3000K to 298K\ndump                       1 all atom 5000 4npt_cool.xyz                   # Save atom information every 5000 steps\nrun                        100000\nunfix                      1                             # Cancel fix\nundump                     1\nreset_timestep             0                             # Set current step to step 0\n\n# NVT Ensemble Relaxation\nfix                        1 all nvt temp 298 298 0.1                          # Constant temperature at 298K\ndump                       1 all atom 5000 5nvt_equ.xyz                        # Save atom information every 5000 steps\nrun                        100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate nanoindentation using LAMMPS.",
        "input": "",
        "output": "# Global Settings\ndimension\t    3\nunits\t\t    metal \nboundary\t    p p f\natom_style\t    atomic\n# Modeling\nvariable        a equal 3.615   # Lattice constant value\nvariable        lx equal 220    # Box size in x and y directions\nvariable        ly equal 220    # Box size in x and y directions\nvariable        lz equal 400    # Box size in z direction\n# Create Box\nlattice\t        fcc $a orient x 1 0 0 orient y 0 1 0 orient z 0 0 1\nregion\t\t    box block 0.0 ${lx} 0 ${lx} 0.0 ${lz} units box\ncreate_box\t    4 box\n# Create Matrix Atoms\nregion\t\t    boundary_layer_down block INF INF INF INF INF 20 units box\nregion\t\t    thermostat_layer block INF INF INF INF 20 40.0 units box\nregion\t\t    newtonian_layer block INF INF INF INF 40 220 units box\nregion\t\t    substracte union 3 boundary_layer_down thermostat_layer newtonian_layer\tunits box\ncreate_atoms\t1 region substracte units box\n# Create Indenter Atoms (Here, a real indenter is used for nanoindentation)\nlattice\t        diamond 3.57 \t\nregion\t\t    indent sphere 110 110 280 50 units box\ncreate_atoms\t4 region indent units box\n# Set Atom Masses\nmass\t\t    1 63.55         # Cu\nmass\t\t    2 63.55         # Cu\nmass\t\t    3 63.55         # Cu\nmass\t\t    4 12.01         # C\n# Define Groups\ngroup\t\t    boundary_layer_down region boundary_layer_down\ngroup\t\t    thermostat_layer region thermostat_layer\ngroup\t\t    newtonian_layer region newtonian_layer\ngroup\t\t    tool region indent\nset\t\t        group boundary_layer_down type 1\nset\t\t        group thermostat_layer type 2\nset\t\t        group newtonian_layer type 3\nset\t\t        group tool type 4\nwrite_data      intial.data\n# Interactions\n# Cu-Cu\t\team\n# C-C\t\tNONE\n# Cu-C\t\tMorse 9.025 0.087 5.14 2.05\npair_style\t    hybrid eam morse 9.025\npair_coeff\t    1*3 1*3 eam Cu_u3.eam \npair_coeff\t    3 4 morse 0.087 5.14 2.05 \npair_coeff\t    1*2 4 none\npair_coeff\t    4 4 none\n# Set Output Files\nclear\nshell           mkdir output output/relax output/indentation\n#read_restart     relax.restart\ninclude         initial.in\ninclude         potential.in\nvariable        tstp equal 0.001\nvariable        T equal 293\nvariable        thermo_step equal 1000\nvariable        relax_step  equal 500000\n# Relaxation\nneighbor\t    3.0 bin\nneigh_modify\tdelay 5\ncompute\t        newTemp thermostat_layer temp\nfix\t\t        1 all nve\nfix\t\t        2 boundary_layer_down setforce 0.0 0.0 0.0\nvelocity\t    newtonian_layer set NULL NULL NULL \nvelocity\t    thermostat_layer create $T 5812775 temp newTemp \nfix\t\t        3 thermostat_layer temp/rescale 10 $T $T 10 1\nfix_modify\t    3 temp newTemp\ntimestep\t    ${tstp}\nthermo\t\t    ${thermo_step}\nthermo_modify\ttemp newTemp\nthermo_style\tcustom step c_newTemp press pe ke etotal\nrun\t\t        ${relax_step}\nwrite_data      ./output/relax/relax.data\nwrite_restart   ./output/relax/relax.restart\nreset_timestep  0\n# Indentation Implementation\nvariable        depth equal 30    # Indentation depth of 30 Angstroms\nvariable        distance equal 10 # Initial distance between indenter and surface is 10 Angstroms\nvariable        loadv equal 0.1  # Loading speed of 0.1 Angstroms/ps\nvariable        load_step equal (v_depth+v_distance)/v_loadv/(${tstp})\nvariable        hold_step equal 20000 \n# Calculate Indentation Depth\nvariable\t    dis equal xcm(tool,z)\nvariable        initial_dis equal ${dis}    \nvariable        disp equal -(v_dis-(${initial_dis}))\n# Calculate Indentation Load\n# Method 1\nvariable\t    m1 equal fcm(tool,z)           # Calculate load using force on the indenter center of mass\nvariable        unit equal 1.602*1.0e-3        # Unit conversion to Î¼N\nvariable        load1 equal v_m1*(${unit})\n# Method 2\ncompute \t    forcez tool property/atom fz     \ncompute\t\t    m2 tool reduce sum c_forcez   # Alternatively, calculate load using the total force in the z-direction on the indenter\nvariable        load2 equal c_m2*(${unit})\n# Loading Process\ndump\t\t    1 all custom 10000 ./output/indentation/Indentation.lammpstrj id type x y z \nfix\t\t        5 tool move linear 0.0 0.0 -${loadv} units box \nfix\t\t        6 all print 100 \"${disp} ${load1} ${load2}\" file ./output/indentation/load_disp.txt\nrun\t\t        ${load_step}\n# Holding Phase\nfix\t\t        7 tool move linear 0 0 0 units box\nrun\t\t        ${hold_step}\n# Unloading Process\nfix\t\t        7 tool move linear 0.0 0.0 ${loadv} units box \nrun\t\t        ${load_step}",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Implement shear simulation using the Deform method in LAMMPS.",
        "input": "The Ni_supercell.lmp is considered known.",
        "output": "#Model settings\nclear\nshell               mkdir output ./output/minimize ./output/relax ./output/shear ./output/data\n\n#Basic settings\nunits               metal\ndimension           3  \nboundary            p p p        \natom_style          atomic\n\nvariable            Temp equal 300          \t# desired temperature\nvariable            tstp equal 0.001            # timestep\nvariable            tdamp equal 100*${tstp}     # damping parameters # \nvariable            pdamp equal 1000*${tstp}    # for NPT ensemble   #\nvariable            dump_every equal 1000       \nvariable            equi_step equal 10000\n\nread_data           Ni_supercell.lmp\n\n#Force Field\npair_style          eam             \npair_coeff          * * Ni_u3.eam\n\n#Minimization\nthermo              100\ntimestep            ${tstp}\nthermo_style        custom step temp etotal pe ke pxy\n\n# compute specific quantities\ncompute             pot_energy all pe/atom\ndump                min all custom ${dump_every} ./output/minimize/dump_minimize.*.lammpstrj id type x y z c_pot_energy \n\nmin_style           cg\nminimize            1.0e-6 1.0e-6 10000 10000\n\nwrite_data          ./output/minimize/mini.data\n\n#equilibrium\nundump              min\nreset_timestep      0\n\ncompute             new3d all temp\ncompute             new2d all temp/partial 0 1 1\n\nvelocity            all create ${Temp} 12345 units box\nfix\t\t\t\t    1 all npt temp ${Temp} ${Temp} ${tdamp} iso 0.0 0.0 ${pdamp}\nfix_modify          1 temp new3d\n\nthermo              1000\nthermo_modify       temp new3d\nrun                 ${equi_step} \n\nwrite_data          ./output/relax/equil.data\nwrite_restart       ./output/relax/equil.restart\n\n#shear in xy plane\nreset_timestep      0\nunfix               1\n\nchange_box          all triclinic\n\nvariable            tmpx equal lx\nvariable            tmpy equal ly\nvariable            tmpz equal lz\nvariable            L0x equal ${tmpx}\nvariable            L0y equal ${tmpy}\nvariable            L0z equal ${tmpz}\n\n# In units metal, pressure is in [bars]; sxz is in GPa\n\nvariable            srate equal 0.01           \nvariable            final_strain equal 0.4\nvariable            dyna_step equal ${final_strain}/(${srate}*${tstp})\n\nvariable            sxy equal \"-pxy/10000\"          # calculate shear stress\nvariable            strain equal ${srate}*step*${tstp}        # calculate shear strain\n\n# deformation starts!\n#fix\t\t\t\t    1 all nve\n#fix                 2 all temp/rescale 1 ${Temp} ${Temp} ${tdamp} 0.5\nfix\t\t\t\t2 all npt temp ${Temp} ${Temp} ${tdamp} iso 0.0 0.0 ${pdamp}\nfix_modify          2 temp new2d\n\nfix                 3 all deform 1 xy erate ${srate} remap x\n\ndump                result all custom ${dump_every} ./output/shear/dump.*.lammps id type x y z\nfix                 def1 all print 100 \"${strain} ${sxy}\" file ./output/data/Shear_data.txt screen no\nthermo_style \t    custom step press pe pxx pyy pzz pxy pxz pyz v_strain v_sxy\nrun                 ${dyna_step}\nwrite_data          ./output/shear/shear_end.*.data\nwrite_restart       ./output/shear/shear_end.*.restart",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Implement shear simulation using the Velocity method in LAMMPS.",
        "input": "The Ni_supercell.lmp is considered known.",
        "output": "#Model settings\nclear\nshell               mkdir output ./output/minimize ./output/relax ./output/shear ./output/data\n\n#Basic settings\nunits               metal\ndimension           3  \nboundary            s s p        \natom_style          atomic\n\nvariable            Temp equal 10          \t# desired temperature\nvariable            tstp equal 0.001            # timestep\nvariable            tdamp equal 100*${tstp}     # damping parameters # \nvariable            pdamp equal 1000*${tstp}    # for NPT ensemble   #\nvariable            dump_every equal 1000       \nvariable            equi_step equal 10000\n\n\nread_data           Ni_supercell.lmp\n\nvariable            size_x equal xhi-xlo\nvariable            size_y equal yhi-ylo\nvariable            size_z equal zhi-zlo\n\nvariable            layer_thickness equal 0.1*${size_y}\nvariable            upper_layer_limit  equal  ${size_y}-${layer_thickness}\nvariable            lower_layer_limit  equal  ${layer_thickness}\n\n# Define regions\nregion              upper block INF INF ${upper_layer_limit} INF INF INF units box          \nregion              lower block INF INF INF ${lower_layer_limit} INF INF units box \n\n# Define groups\ngroup               upper region upper\ngroup               lower region lower\ngroup               boundary union upper lower\ngroup               mobile subtract all boundary\n\n#Force Field\npair_style          eam             \npair_coeff          * * Ni_u3.eam\n\n#Minimization\nthermo              100\ntimestep            ${tstp}\nthermo_style        custom step temp etotal pe ke pxz\n\n# fix boundary group\n\n\n# compute specific quantities\ncompute             pot_energy all pe/atom\ncompute             stress all stress/atom NULL\ndump                min all custom ${dump_every} ./output/minimize/dump_minimize.*.lammpstrj id type x y z c_pot_energy \n\n\nmin_style           cg\nminimize            1.0e-6 1.0e-6 10000 10000\n\nwrite_data          ./output/minimize/mini.data\n\n#equilibrium\nundump              min\nreset_timestep      0\n\ncompute             new3d mobile temp\ncompute             new2d mobile temp/partial 0 1 1\n\nvelocity            mobile create ${Temp} 12345 units box\n\n\n#fix\t\t\t\t1 all npt temp ${Temp} ${Temp} ${tdamp} aniso 0.0 0.0 ${pdamp}\nfix\t\t\t\t1 all nve\nfix                 0 boundary setforce 0.0 0.0 0.0\nfix                 2 mobile temp/rescale 10 ${Temp} ${Temp} 10.0 1.0\nfix_modify          2 temp new3d\n\n#fix_modify          1 temp new3d\n\nthermo              1000\nthermo_modify       temp new3d\nrun                 ${equi_step} \n\nwrite_data          ./output/relax/equil.data\nwrite_restart       ./output/relax/equil.restart\n\n#shear in xy plane\n#change_box          all boundary s s p\n\nreset_timestep      0\nunfix               1\n\n#fix\t\t\t\t1 all nvt temp ${Temp} ${Temp} ${tdamp}\n#fix_modify          1 temp new3d\n\n#run\t\t\t\t10000\n#reset_timestep      0\n#unfix               1\n\nvariable            tmpx equal lx\nvariable            tmpy equal ly\nvariable            tmpz equal lz\nvariable            L0x equal ${tmpx}\nvariable            L0y equal ${tmpy}\nvariable            L0z equal ${tmpz}\n\nvariable        \tvol_ini equal v_L0x*v_L0y*v_L0z\nprint \"Initial volumn, vol = ${vol_ini}\"\n# In units metal, pressure is in [bars]; sxx, syy, szz are in GPa\ncompute         \t2 mobile stress/atom NULL\ncompute         \tstrsxy mobile reduce sum c_2[4]\nvariable        \tunit equal 1E-4\n\n#variable        \tsxy equal ${unit}*(c_strsxy/v_vol_ini)\nvariable            deltaL  equal  (lx-${L0x})\nvariable            sxy equal \"-pxy/10000\"          # calculate shear stress\nvariable            strain equal v_deltaL/ly        # calculate shear strain\n\nvariable            srate equal 0.01           \nvariable            vx equal ${srate}*${L0y}\nvariable            final_strain equal 0.3\n#variable            dyna_step equal ${final_strain}/(${srate}*${tstp})\nvariable\t\t\tdyna_step equal 15000\n\n# deformation starts!\nfix\t\t\t\t1 all nve\nfix                 2 mobile temp/rescale 10 ${Temp} ${Temp} 10.0 1.0\nfix_modify          2 temp new2d\n\nvelocity            upper set 2.0 0.0 0.0 units box\nvelocity            mobile ramp vx 0.0 2.0 y ${lower_layer_limit} ${upper_layer_limit} sum yes units box\n\ndump                result all custom ${dump_every} ./output/shear/dump.*.lammps id type x y z\nfix                 def1 all print 1000 \"${strain} ${sxy}\" file ./output/data/Shear_data.txt screen no\n#\nfix                 def1 all ave/time 100 10 1000 v_strain v_sxy file ./output/data/Shear_data.txt\nthermo_style \t    custom step press pe pxx pyy pzz pxy pxz pyz v_strain v_sxy\nrun                 ${dyna_step}\nwrite_data          ./output/shear/shear_end.*.data\nwrite_restart       ./output/shear/shear_end.*.restart",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the flow process of an LJ fluid using LAMMPS.",
        "input": "",
        "output": "# 2-d LJ flow simulation\n\ndimension\t2\nboundary\tp s p\n\natom_style\tatomic\nneighbor\t0.3 bin\nneigh_modify\tdelay 5\n\n# create geometry\n\nlattice\t\thex 0.7\nregion\t\tbox block 0 20 0 10 -0.25 0.25\ncreate_box\t3 box\ncreate_atoms\t1 box\n\nmass\t\t1 1.0\nmass\t\t2 1.0\nmass\t\t3 1.0\n\n# LJ potentials\n\npair_style\tlj/cut 1.12246\npair_coeff\t* * 1.0 1.0 1.12246\n\n# define groups\n\nregion\t     1 block INF INF INF 1.25 INF INF\ngroup\t     lower region 1\nregion\t     2 block INF INF 8.75 INF INF INF\ngroup\t     upper region 2\ngroup\t     boundary union lower upper\ngroup\t     flow subtract all boundary\n\nset\t     group lower type 2\nset\t     group upper type 3\n\n# initial velocities\n\ncompute\t     mobile flow temp\nvelocity     flow create 1.0 482748 temp mobile\nfix\t     1 all nve\nfix\t     2 flow temp/rescale 200 1.0 1.0 0.02 1.0\nfix_modify   2 temp mobile\n\n# Couette flow\n\n#velocity     lower set 0.0 0.0 0.0\n#velocity     upper set 3.0 0.0 0.0\n#fix\t     3 boundary setforce 0.0 0.0 0.0\n#fix\t     4 all enforce2d\n\n# Poiseuille flow\n\nvelocity     boundary set 0.0 0.0 0.0\nfix\t     3 lower setforce 0.0 0.0 0.0\nfix\t     4 upper setforce 0.0 NULL 0.0\nfix\t     5 upper aveforce 0.0 -1.0 0.0\nfix\t     6 flow addforce 0.5 0.0 0.0\nfix\t     7 all enforce2d\n\n# Run\n\ntimestep\t0.003\nthermo\t\t500\nthermo_modify\ttemp mobile\n\ndump\t\t1 all atom 500 dump.flow\n\nrun\t\t10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of Cu using LAMMPS.",
        "input": "",
        "output": "# Cu Melting Simulation\n# Basic Model Parameters\nunits       metal                        # Unit system\nboundary    p p p                        # Boundary conditions\natom_style  atomic                       # Atom style (use \"full\" for polymers)\ntimestep    0.001                        # 1 fs, time step: generally one-tenth of the atomic vibration period\nneighbor    2.0 bin                      # Neighbor list\n\n# Model Building\nlattice     fcc 3.61                     # Lattice constant\nregion      box block 0 5 0 5 0 5          # Region\ncreate_box  1 box                        # Create a box with one type of atom\ncreate_atoms 1 box                       # Fill the box with atoms of type 1\n\n# Thermodynamic Output\nthermo     100                           # Output every 100 steps\nthermo_style custom step temp pe vol     # Output style\n\n# Potential Function Setup\npair_style  eam                         # Potential style\npair_coeff  * * Cu_u3.eam                # Use this potential function\n\n# Temperature Initialization\nvelocity   all create 300 89895           # Control temperature by initializing atom velocities\n\n# Melting Process\ndump       1 all atom 1000 melt.xyz      # Output every 1000 steps, filename: melt.xyz\nfix        1 all npt temp 298 2000 0.1 iso 0.0 0.0 1  # Apply NVT ensemble to all atoms, starting temperature 298K, ending temperature 2000K\nrun        10000                         # 10 ps, heating rate of 1700K/10ps = 170K/ps\ncompute    3 all pe/atom                 # Calculate potential energy per atom",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the uniaxial tensile process of graphene using LAMMPS.",
        "input": "Basic approach:\n(1) Set basic parameters\n(2) Modeling\n(3) Set potential functions\n(4) Energy minimization\n(5) Temperature initialization\n(6) Calculation settings\n(7) Structural relaxation\n(8) Tensile setting",
        "output": "# Basic Parameters\nunits metal\ndimension 3 # Dimension\nboundary p p p\nneighbor 0.3 bin\nneigh_modify delay 0\ntimestep 0.001\n\n# Modeling\nregion box block 0 50 0 50 -5 5 units box\ncreate_box 3 box\nlattice custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\nbasis 0.0 0.33333 0.0 &\nbasis 0.0 0.66667 0.0 &\nbasis 0.5 0.16667 0.0 &\nbasis 0.5 0.83333 0.0\nregion graphene block 0 50 0 50 -1 2 units box\ncreate_atoms 1 region graphene\nmass * 12\nregion left block INF 4 INF INF INF INF units box\ngroup left region left\nregion right block 46 INF INF INF INF INF units box\ngroup right region right\ngroup boundary union left right\ngroup mobile subtract all boundary\nset group left type 2\nset group right type 3\n\n# Potential Function Settings\npair_style airebo 3.0 0 0\npair_coeff * * CH.airebo C C C\n\n# Energy Minimization\nmin_style cg\nminimize 1e-10 1e-10 5000 5000\n\n# Temperature Initialization\nvelocity mobile create 300 4928459 dist gaussian units box\nvelocity left set 0.0 0.0 0.0 units box\nvelocity right set 0.0 0.0 0.0 units box\n\n# Calculation Settings\ncompute 1 all stress/atom NULL\ncompute 2 all reduce sum c_1[1] c_1[2]\nvariable CorVol equal ly*lx*3.35\nvariable sigmaxx equal c_2[1]/(v_CorVol*10000)\nvariable px equal -pxx/10000\n\n# Strain\nvariable l_x equal lx\nvariable lx0 equal ${l_x}\nvariable strain equal (lx-v_lx0)/v_lx0\n\n# Structural Relaxation\nfix 1 boundary setforce 0 0 0\nfix 2 all npt temp 300 300 0.01 iso 0 0 0.1\nthermo 1000\nthermo_modify lost ignore\ndump 1 all atom 1000 relax.lammpstrj\nrun 10000\nunfix 2\nundump 1\nreset_timestep 0\n\n# Tensile Setup\nthermo_style custom step press v_strain v_px v_sigmaxx temp lx ly lz vol\nthermo 100\nfix 2 all nvt temp 300 300 0.01\nfix 3 all deform 200 x erate 0.05 remap x\ndump 1 all atom 500 algp.lammpstrj\nrun 10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the tensile process of high-entropy alloy using LAMMPS.",
        "input": "Using the deform command to stretch a high-entropy alloy.",
        "output": "# Initial Simulation System Settings\nunits metal # Unit system\nboundary p p p # Boundary conditions\natom_style atomic # Atom style\ntimestep 0.001 # Time step\n\n# Build Model\nlattice fcc 3.56 # Set lattice parameters\nregion box block 0 100 0 20 0 20 # Create rectangular region\ncreate_box 5 box\ncreate_atoms 1 box\n\n# Convert atoms of type 1 to other types\nset type 1 type/ratio 2 0.2 87393 # Convert 1 atoms to 2 atoms\nset type 1 type/ratio 3 0.5 87393 # Convert 1 atoms to 3 atoms\nset type 1 type/ratio 4 0.5 87393 # Convert 1 atoms to 4 atoms\nset type 3 type/ratio 5 0.5 87393 # Convert 3 atoms to 5 atoms\n\n# Set atom types\nmass 1 27 # Al atom\nmass 2 56 # Fe atom\nmass 3 28 # Si atom\nmass 4 64 # Cu atom\nmass 5 24 # Mg atom\n\n# Tensile Setup\nfix 1 all deform 2000 x erate 0.05 remap x  # Set tensile deformation method\ndump 1 all atom 500 lasheng.xyz  # Output file\nrun 100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of CuNi alloy using LAMMPS.",
        "input": "First, establish a CuNi alloy model; hold at 1550K in the NPT ensemble; heat from 1550K to 2550K in the NPT ensemble; cool from 2550K to 1550K in the NPT ensemble.",
        "output": "units           metal\nboundary        p p p\natom_style      atomic\nread_data  melting.in.dat\nlattice         fcc 3.65 \nregion          box block -30 30  -5 5 -5 5\n#create_box      1 box\n#create_atoms  \nmass            1  64.55\nmass            2  58.69 \npair_style      eam/alloy\npair_coeff      * * CuNi.lammps.eam Cu Ni\nregion          1 block INF -0.01  -6 6  -6 6\ngroup           left region 1\nregion          2 block -0.01 INF  -6 6 -6 6\ngroup           right region 2\ntimestep        0.002\nvelocity        all create 1550.0 4928459 dist gaussian\nfix             1 all npt temp 1550 1550 0.1 iso 0 0 0.2\ndump            melt all atom 100 dump.dat\n#dump            melt all custom 1000 dump.atom.slow tag type xu yu zu vx vy vz  sxx syy szz\nrestart         50000  restart.*\nthermo          100\nrun             4000\n#thermo_style    custom step temp etotal pe press vol pxx pyy pzz pyz pxz pxy\nunfix   1\nfix             1 right npt temp 1550 2500 0.1 x 0 0   0.2\nrun             2000\nunfix   1\nfix             1 right npt temp 2500 1550 0.1 x 0 0   0.2\nrun             44000\nunfix           1\nfix 1     all nph iso 0.0 0.0 0.2  \nrun             100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of Ni using LAMMPS.",
        "input": "The Ni.data is considered known. Simulation method:\n(1) Energy minimization\n(2) Relaxation",
        "output": "# Start\n# Read model data\nunits           metal\natom_style      atomic\nread_data       Ni.data                     # Read modeling data\n\n# Thermodynamic output\nthermo         100                    # Output every 100 steps\nthermo_style    custom step temp vol pe        # Output types: pe - potential energy, ke - kinetic energy\nneighbor        2.0 bin                        # Neighbor atom distance\n\n# Set potential function\npair_style     eam                        # Potential type\npair_coeff     * * Ni.lammps.eam              # Select this potential for the atom\n\n# 1 Energy minimization\nthermo         100     \ndump           1 all atom 5 1min.xyz           # Energy minimization output file\nmin_style      cg\nminimize       1e-15 1e-15 1000 1000\nundump         1\nreset_timestep 0\n\n# Temperature initialization\nvelocity      all create 300 89895      # Control temperature by initializing atom velocities\n\n# 2 NVT ensemble relaxation\nfix            1 all nvt temp 298 298 0.01     # Relaxation parameters\ndump           1 all atom 100 2nvt_equ.xyz     # Relaxation output file\nrun            10000                           # Number of relaxation steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting and solidification process of NiZr alloy using LAMMPS.",
        "input": "The NiZr.dat is considered known. Solid solution at 2000K in the NPT ensemble, cool from 2000K to 300K in the NPT ensemble.",
        "output": "units       metal   # Units\nboundary    p p p   # Boundary conditions\natom_style  atomic  # Type\nread_data   NiZr.dat # Read model data\nmass        1  58.69 # Atom mass setting\nmass        2  91.22 \npair_style  eam/alloy\npair_coeff  * * NiZr.lammps.eam Ni Zr # Potential function\ntimestep    0.001\nvelocity    all create 2000 4928459 dist gaussian # Velocity initialization\n# Melting process\nfix      1 all npt temp 2000 2000 0.5 iso 0 0 1.0 # \ndump     melt all atom 1000 melt.xyz # Output melting trajectory file\n# dump    melt all custom 1000 dump.atom.slow tag type xu yu zu vx vy vz sxx syy szz\nthermo   100   \n# thermo_style custom step temp etotal pe press vol pxx pyy pzz pyz pxz pxy # Select output\nrun      10000\nunfix    1\nundump   melt\n# Solidification process\ndump     cur all atom 1000 curdle.xyz # Output solidification trajectory file\nfix      2 all npt temp  2000 300 0.1 iso 0 0 0.2\nrun    200000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Use LAMMPS to output the RDF (Radial Distribution Function) during the heating process from 1550K to 2500K in the melting of CuNi alloy.",
        "input": "The melting.in.dat is considered known.",
        "output": "units           metal\nboundary        p p p\n\natom_style      atomic\n\nread_data  melting.in.dat\n\nlattice         fcc 3.65 \nregion          box block -30 30  -5 5 -5 5\n#create_box      1 box\n#create_atoms  \n\nmass            1  64.55\nmass            2  58.69 \n\npair_style      eam/alloy\npair_coeff      * * CuNi.lammps.eam Cu Ni\n\nregion          1 block INF -0.01  -6 6  -6 6\ngroup           left region 1\nregion          2 block -0.01 INF  -6 6 -6 6\ngroup           right region 2\n\ntimestep        0.002\nvelocity        all create 1550.0 4928459 dist gaussian\nfix             1 all npt temp 1550 1550 0.1 iso 0 0 0.2\n\ndump            melt all atom 10000 dump.dat\n#dump            melt all custom 1000 dump.atom.slow tag type xu yu zu vx vy vz  sxx syy szz\nrestart         50000  restart.*\n\nthermo          100\nrun             4000\n\n#thermo_style    custom step temp etotal pe press vol pxx pyy pzz pyz pxz pxy\n\nunfix   1\nfix             1 right npt temp 1550 2500 0.1 x 0 0   0.2\n#è¾“å‡ºrdf\ncompute rdf all rdf 200\nfix saverdf all ave/time 100 100 10000 c_rdf[1] c_rdf[2] file data.rdf mode vector\nrun             2000\n\nunfix   1\nfix             1 right npt temp 2500 1550 0.1 x 0 0   0.2\n\nrun             44000\n\nunfix           1\nfix 1     all nph iso 0.0 0.0 0.2  \nrun             9500000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Use LAMMPS to output the MSD (Mean Square Displacement) during the heating process from 1550K to 2500K in the melting of CuNi alloy.",
        "input": "The melting.in.dat is considered known.",
        "output": "units           metal\nboundary        p p p\n\natom_style      atomic\n\nread_data  melting.in.dat\n\nlattice         fcc 3.65 \nregion          box block -30 30  -5 5 -5 5\n#create_box      1 box\n#create_atoms  \n\nmass            1  64.55\nmass            2  58.69 \n\npair_style      eam/alloy\npair_coeff      * * CuNi.lammps.eam Cu Ni\n\nregion          1 block INF -0.01  -6 6  -6 6\ngroup           left region 1\nregion          2 block -0.01 INF  -6 6 -6 6\ngroup           right region 2\n\ntimestep        0.002\nvelocity        all create 1550.0 4928459 dist gaussian\nfix             1 all npt temp 1550 1550 0.1 iso 0 0 0.2\n\ndump            melt all atom 10000 dump.dat\n#dump            melt all custom 1000 dump.atom.slow tag type xu yu zu vx vy vz  sxx syy szz\nrestart         50000  restart.*\n\nthermo          100\nrun             4000\n\n#thermo_style    custom step temp etotal pe press vol pxx pyy pzz pyz pxz pxy\n\nunfix   1\nfix             1 right npt temp 1550 2500 0.1 x 0 0   0.2\n#è¾“å‡ºMSD\ncompute msd all msd com yes   #è®¡ç®—MSD\nfix savemsd all ave/time 500 1 500 c_msd[1] c_msd[2] c_msd[3] c_msd[4] file msd.data mode scalar\nrun             2000\nunfix   1\nfix             1 right npt temp 2500 1550 0.1 x 0 0   0.2\n\nrun             44000\n\nunfix           1\nfix 1     all nph iso 0.0 0.0 0.2  \nrun             9500000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the smelting process of high-entropy alloy using LAMMPS.",
        "input": "The cenghe.data is considered known. Simulation method:\n(1) Energy minimization\n(2) Relaxation\n(3) Heating and melting\n(4) Holding temperature\n(5) Cooling\n(6) Relaxation",
        "output": "# Start\n# Read model data\nunits      metal\nboundary        p p p                        # Fixed boundary conditions\natom_style      atomic\nread_data       cenghe.data                # Read modeling data\n\n# Thermodynamic output\ntimestep        0.001                        # Time step\nthermo      500                     # Output every 500 steps\nthermo_style    custom step temp vol pe     # Output types: pe - potential energy, ke - kinetic energy\nthermo_modify   lost ignore flush yes \n\n# Neighbor information\nneighbor        1.0 bin                      # Neighbor atom distance\nneigh_modify    every 1 delay 0 check yes\n\n# Set potential function\npair_style      lj/cut 10.0             # Lennard-Jones potential/cutoff radius\npair_coeff    * * 0.03246 2.8932          # epsilon: ev, sigma: Angstrom\n\n# Temperature initialization\nvelocity      all create 300 898955 dist gaussian    # Control temperature by initializing atom velocities\n\n# Energy minimization    \ndump            1 all atom 5 1min.xyz        # Energy minimization output file\nmin_style       cg\nminimize        1e-15 1e-15 1000 1000\nundump          1\nreset_timestep  0\n\n# 2 NVT ensemble melting\ndump      2 all atom 100 2nvt_hot.xyz  # Heating process output file\nfix             2 all nvt temp 2000 2000 0.01 # NVT thermostat: 2000 K\nrun          10000                 # Heating steps\nundump          2\nunfix           2\nreset_timestep  0                            # Reset time step\n\n# 3 NVT ensemble solidification\ndump      3 all atom 100 3nvt_cool.xyz  # Cooling process output file\nfix             3 all nvt temp 300 300 0.01 # NVT thermostat: 300 K\nrun          10000                 # Cooling steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Use LAMMPS to count the remaining number of atoms of volatile elements after a period of simulation time.",
        "input": "",
        "output": "# Start\n# Model Basic Parameters\nunits      metal\nboundary        f f f                        # Fixed boundary conditions\natom_style      atomic\n# Create a rectangular region\nregion              box block -20 20 -20 20 -20 20  # Create a rectangular region\ncreate_box          1 box                           # Create a box with 1 type of atom\n# Create a spherical region\nregion Pb sphere 0 0 0 20 units box\n# Fill the core with Bi atoms\nlattice             sc 3.23                         # Pb lattice constant 3.27\ncreate_atoms        1 region Pb\n\n# Set atom masses\nmass                1 207                           # Pb atom mass\n\n# Grouping\ngroup  Pb region Pb \n\n# Fix walls\nfix xwalls all wall/reflect xlo EDGE xhi EDGE \nfix ywalls all wall/reflect ylo EDGE yhi EDGE \nfix zwalls all wall/reflect zlo EDGE\n\n# Count Pb atoms\nvariable N equal count(Pb,box)\n\n# Thermodynamic output\ntimestep        0.001                        # Time step\nthermo      500                     # Output every 500 steps\nthermo_style    custom step v_N           # Output types: step, atom count\nthermo_modify   lost ignore flush yes \n\n# Neighbor information\nneighbor        1.0 bin                      # Neighbor atom distance\nneigh_modify    every 1 delay 0 check yes\n\n# Set potential function\npair_style      lj/cut 10.0             # Lennard-Jones potential/cutoff radius\npair_coeff    * * 0.02246 3.8932              # epsilon: ev, sigma: Angstrom\n\n# Temperature initialization\nvelocity      all create 300 898955 dist gaussian    # Control temperature by initializing atom velocities\n\n# 1 Energy minimization    \ndump            1 all atom 5 1min.xyz        # Energy minimization output file\nmin_style       cg\nminimize        1e-15 1e-15 5000 5000\nundump          1\nreset_timestep  0\n\n# 2 NVT ensemble heating and melting\ndump      2 all atom 100 2nvt_hot.xyz  # Heating process output file\nfix             2 all nvt temp 300 2000 0.1  # NVT heating: 300-2000\n\nrun          100000                 # Heating steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Implement the funnel flow process using LAMMPS.",
        "input": "",
        "output": "# Model Basic Parameters\nvariable  name string funnel_pour\nthermo_modify  flush yes\nunits     si  \nvariable  PI equal 3.141592653589\nvariable  seed equal 14314\n\nvariable  xlo equal 10\nvariable  xhi equal 40\nvariable  ylo equal 10\nvariable  yhi equal 40\nvariable  zlo equal -20\nvariable  zhi equal 50\nvariable  xc equal 25\nvariable  yc equal 25\nvariable  zconehi equal 50\nvariable  zconelo equal 10\nvariable  zcyllo equal 0\nvariable  radconelo equal 2\nvariable  radconehi equal 20\nvariable  rlo equal 0.25 \nvariable  rhi equal 0.5\nvariable  dlo equal 2.0*${rlo}\nvariable  dhi equal 2.0*${rhi}\nvariable  skin equal ${rhi}\n# Contact Settings\nvariable  coeffRes equal 0.1\nvariable  coeffFric equal 0.5\nvariable  density equal 1.0\nvariable  EYoung equal 10^5\nvariable   Poisson equal 2.0/7.0\nvariable  GShear equal ${EYoung}/(2*(1+${Poisson})) \nvariable  gravity equal 1.0\nvariable  reff equal 0.5*(${rhi}+${rlo})\nvariable  meff equal ${density}*4.0/3.0*${PI}*${reff}^3\nvariable  min_mass equal ${density}*4.0/3.0*${PI}*${rlo}*${rlo}*${rlo}\nvariable  max_mass equal ${density}*4.0/3.0*${PI}*${rhi}*${rhi}*${rhi}\nvariable        kn equal 4.0*${GShear}/(3*(1-${Poisson}))\nvariable        kt equal 4.0*${GShear}/(2-${Poisson})\nvariable  a equal (-2.0*log(${coeffRes})/${PI})^2\nvariable        gamma_n equal sqrt($a*2*${kn}/${min_mass}/(1+0.25*$a))\nvariable        gamma_t equal ${gamma_n}*0.5\nvariable  tcol equal ${PI}/sqrt(2*${kn}/${min_mass}-${gamma_n}/4.0)\nvariable  dt equal ${tcol}*0.05\ntimestep  ${dt}\n\nvariable  dumpfreq equal 1000\nvariable  logfreq equal 1000\nnewton     off\natom_style  sphere\nboundary  p p f\nregion    boxreg block ${xlo} ${xhi} ${ylo} ${yhi} ${zlo} ${zhi}\ncreate_box  1 boxreg\n# Potential Settings\npair_style  gran/hertz/history &\n    ${kn} ${kt} ${gamma_n} ${gamma_t} ${coeffFric} 1\npair_coeff  * *\n# Neighbor Parameters\nneighbor        ${skin} multi\nthermo     ${logfreq}\n\ncomm_style  brick\ncomm_modify   mode multi group all vel yes\nbalance    1.1 shift xyz 20 1.1\n# Simulation Settings\nfix    bal all balance 10000 1.1 shift xyz 20 1.01\nregion         insreg cylinder z ${xc} ${yc} 10 30 50 side in units box\nregion        cylreg cylinder z ${xc} ${yc} ${radconelo} &\n    ${zcyllo} ${zconelo} side in units box &\n    open 2 #Top is open\n    \nregion    conereg cone z ${xc} ${yc} ${radconelo} ${radconehi} &\n    ${zconelo} ${zconehi} side in units box & \n    open 1 open 2 #Bottom and top are open\n\nregion    hopreg union 2 conereg cylreg\nfix    grav all gravity ${gravity} vector 0 0 -1\nfix    1 all nve/sphere\nfix    hopper3 all wall/gran/region hertz/history &\n                ${kn} ${kt} ${gamma_n} ${gamma_t} ${coeffFric} 1 region hopreg\nfix    ins all pour 2000 1 42424 region insreg &\n    diam range ${dlo} ${dhi} dens ${density} ${density}\ndump            1 all atom 5 1.xyz \nthermo_style  custom step cpu atoms ke\nthermo_modify  flush yes lost warn\nrun    20000 \nunfix     ins\nrun    150000\nregion      cylreg delete\nregion    hopreg delete\nregion        cylreg cylinder z ${xc} ${yc} ${radconelo} &\n    ${zcyllo} ${zconelo} side in units box &\n    open 1 open 2 #Bottom & top are open\nregion    hopreg union 2 cylreg conereg\nunfix    hopper3\nfix    hopper3 all wall/gran/region hertz/history &\n    ${kn} ${kt} ${gamma_n} ${gamma_t} ${coeffFric} 1 region hopreg\nrun    100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the atomic deposition process using LAMMPS.",
        "input": "Simulate the deposition of atoms on a heated atomic substrate.",
        "output": "# Model Basic Parameters\nunits    lj\natom_style      atomic\nboundary        p p f\n\nlattice    fcc 1.0\nregion          box block 0 10 0 10 0 20\ncreate_box      2 box\nregion    substrate block INF INF INF INF INF 6\ncreate_atoms  1 region substrate\n# Force Field Settings\npair_style  lj/cut 2.5\npair_coeff  * * 1.0 1.0\npair_coeff  1 2 1.0 1.0 5.0\nmass    * 1.0\n\nneigh_modify  delay 0\n# Atom Grouping\ngroup    addatoms type 2\nregion          mobile block 0 10 0 10 4 INF\ngroup    mobile region mobile\n# Calculations\ncompute    add addatoms temp\ncompute_modify  add dynamic/dof yes extra/dof 0\n# Simulation Settings\nfix    1 addatoms nve\nfix    2 mobile langevin 1.0 1.0 0.1 587283\nfix    3 mobile nve\n\nregion          slab block 0 10 0 10 16 18\nfix    4 addatoms deposit 100 2 100 12345 region slab near 1.0 &\n                vz -1.0 -1.0\nfix    5 addatoms wall/reflect zhi EDGE\nthermo_style  custom step atoms temp epair etotal press\nthermo          100\nthermo_modify  temp add\ndump    1 all atom 50 dump.data\nrun             10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the two-dimensional crack diffusion process using LAMMPS.",
        "input": "",
        "output": "# Basic Parameters\ndimension  2    # Two-dimensional\nboundary  s s p\natom_style  atomic\nneighbor  0.3 bin\nneigh_modify  delay 5\n\n# Modeling\nlattice    hex 0.93\nregion    box block 0 100 0 40 -0.25 0.25\ncreate_box  5 box\ncreate_atoms  1 box\nmass    1 1.0\nmass    2 1.0\nmass    3 1.0\nmass    4 1.0\nmass    5 1.0\n\n# Force Field Settings\npair_style  lj/cut 2.5\npair_coeff  * * 1.0 1.0 2.5\n\n# Grouping\nregion          1 block INF INF INF 1.25 INF INF\ngroup    lower region 1\nregion    2 block INF INF 38.75 INF INF INF\ngroup    upper region 2\ngroup    boundary union lower upper\ngroup    mobile subtract all boundary\nregion    leftupper block INF 20 20 INF INF INF\nregion    leftlower block INF 20 INF 20 INF INF\ngroup    leftupper region leftupper\ngroup    leftlower region leftlower\nset    group leftupper type 2\nset    group leftlower type 3\nset    group lower type 4\nset    group upper type 5\n\n# Velocity Initialization\ncompute      new mobile temp\nvelocity  mobile create 0.01 887723 temp new\nvelocity  upper set 0.0 0.3 0.0\nvelocity  mobile ramp vy 0.0 0.3 y 1.25 38.75 sum yes\n\n# Simulation Settings\nfix    1 all nve\nfix    2 boundary setforce NULL 0.0 0.0\ntimestep  0.003\nthermo    200\nthermo_modify  temp new\nneigh_modify  exclude type 2 3\ndump    1 all atom 500 dump.crack\nrun    10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the motion process of 2D particles in an LJ potential box using LAMMPS.",
        "input": "",
        "output": "# 2d circle of particles inside a box with LJ walls\nvariable        b index 0\nvariable  x index 50\nvariable  y index 20\nvariable  d index 20\nvariable  v index 5\nvariable  w index 2\n# Basic Parameters          \nunits    lj\ndimension       2\natom_style  atomic\nboundary        f f p\n\nlattice    hex 0.85\nregion    box block 0 $x 0 $y -0.5 0.5\ncreate_box  1 box\nregion    circle sphere $(v_d/2+1) $(v_d/2/sqrt(3.0)+1) 0.0 $(v_d/2)\ncreate_atoms  1 region circle\nmass    1 1.0\n\nvelocity  all create 0.5 87287 loop geom\nvelocity        all set $v $w 0 sum yes\n\npair_style  lj/cut 2.5\npair_coeff  1 1 10.0 1.0 2.5\n\nneighbor  0.3 bin\nneigh_modify  delay 0 every 1 check yes\n\nfix    1 all nve\nfix             2 all wall/lj93 xlo 0.0 1 1 2.5 xhi $x 1 1 2.5\nfix             3 all wall/lj93 ylo 0.0 1 1 2.5 yhi $y 1 1 2.5\ncomm_style      tiled\nfix             10 all balance 50 0.9 rcb\n\ndump            2 all atom 50 tmp.dump \nthermo_style    custom step temp epair press f_10[3] f_10\nthermo          100                \nrun    10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Use LAMMPS to plot the temperature distribution at different times during the melting process of Cu.",
        "input": "",
        "output": "# Model Basic Parameters\nunits       metal                        # Units: time in picoseconds, real time in femtoseconds\nboundary     p p p                           # Boundary conditions\nnewton on\natom_style   atomic                        # Atom style (use \"full\" for polymers)\ntimestep     0.001                        # 1 fs time step: generally one-tenth of the atomic vibration period\nneighbor     0.6 bin                      # Neighbor list\nneigh_modify every 5 delay 0 check yes \n\n# Modeling\nlattice      fcc 3.61                    # Lattice constant\nregion       box block 0 20 0 20 0 20      # Region\ncreate_box   1 box                        # Create a box with one type of atom\nregion       Cu block 0 20 0 20 0 20       # Region\ncreate_atoms 1 region Cu                  # Fill the box with atoms of type 1\nmass         1 69                         # Mass of atom type 1 (Copper)\n\n# Thermodynamic Output\nthermo      100                           # Output every 100 steps\nthermo_style custom temp vol pe           # Output types: temperature, volume, potential energy\n\n# Setting Potential Function\npair_style   meam                         # Potential type\npair_coeff   * * library.meam Cu Cu.meam Cu # Use this potential function for Copper\n# pair_style     lj/cut 2.5               # Potential type (Lennard-Jones)\n# pair_coeff      * * 1.0 1.0 2.5           # Parameters for the Lennard-Jones potential\n\n# Temperature Initialization\nvelocity    all create 300 89895 dist gaussian # Control temperature by initializing atom velocities\n\n# Melting\ndump        1 all atom 1000 melt.xyz      # Output every 1000 steps, output filename: melt.xyz\nfix         1 all npt temp 300 2000 0.1 iso 0.0 0.0 1  # Apply NVT ensemble to all atoms, starting temperature 300K, ending temperature 2000K\ncompute     T1 all chunk/atom bin/2d x lower 2 y lower 2 units box\nfix         saveT2 all ave/chunk 1 1000 1000 T1 temp file Tyuntu.data\nrun         10000                         # 10 ps heating rate of 1700K/10ps = 170K/ps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of diamond impacting monolayer graphene using LAMMPS.",
        "input": "",
        "output": "# Set up simulation\nlog              log.Graphene_impact_single\necho             screen\nunits            metal\natom_style       atomic\nboundary         p p p\n\n# Modeling\nregion           box block -210 210 -240 240 -5 200 units lattice \ncreate_box       1 box\n\nlattice          custom 2.4595 a1 1 0 0 a2 0 1.73203 0 &\nbasis            0 0 0 &\nbasis            0.5 0.16666666666666666 0 &\nbasis            0.5 0.5 0 &\nbasis            0 0.6666666666666666 0\nregion           graphene block -210 210 -240 240 0 0.1 units lattice\ncreate_atoms     1 region graphene \n\nmass             * 12.011\n\n# Set potential function\npair_style       airebo/morse 3.0\npair_coeff       * * CH.airebo-m C\n\n# Relaxation\ntimestep         0.001\nthermo           100\nthermo_style     custom step pe ke etotal temp lx ly lz press atoms\ndump             eve all custom 100 relax.xyz id type x y z  \n\nvelocity         all create 300.0 12345 dist gaussian\nfix              npt all npt temp 300 300 0.1 x 0 0 0.1 y 0 0 0.1 \nfix              bp all balance 250 1 shift z 10 1\nrun              500\nundump           eve\nunfix            npt\n\n# Grouping\ngroup            graphene region graphene\nvariable         ymn equal ylo+4\nvariable         ymx equal yhi-4\nvariable         xmn equal xlo+4\nvariable         xmx equal xhi-4\nregion           middle block ${xmn} ${xmx} ${ymn} ${ymx} -5 5 units box\ngroup            middle region middle\ngroup            edge subtract graphene middle\n\nlattice          diamond 3.567\nregion           mobile sphere 0 0 150 20 units box\n\ncreate_atoms     1 region mobile\ngroup            impactor region mobile\n\nchange_box       all boundary p p s\n\n# Falling\nreset_timestep   0\ntimestep         0.002\nthermo           100\nthermo_style     custom step pe ke etotal temp lx ly lz press atoms\ndump             eve all custom 100 down.xyz id type x y z  \n\nvelocity         edge set NULL NULL 0 sum no units box\nfix              sheet edge setforce NULL NULL 0.0\nvelocity         impactor set 0.0 0.0 -20.0 sum yes units box \nfix              nve all nve\nrun              20000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of diamond impacting bilayer graphene using LAMMPS.",
        "input": "",
        "output": "# Set up simulation\nlog              log.Graphene_impact_double\necho             screen\nunits            metal\natom_style       atomic\nboundary         p p p\n\n# Modeling\nlattice         custom 2.4205 a1 1  0  0  a2 0 1.73203 0 &\nbasis           0 0 0  &\nbasis           0.5 0.16666666666666666 0 &\nbasis           0.5 0.5 0 &\nbasis           0 0.6666666666666666 0\nregion          box block -50 50 -35 35 -5 100 units lattice\ncreate_box      1 box\n\nregion          graphene block -50 50 -35 35 0 0.1 units lattice\ncreate_atoms    1 region graphene \nregion          graphene2 block -50 50 -35 35 8 8.1 units lattice\ncreate_atoms    1 region graphene2 \n\nlattice         diamond 3.567\nregion          mobile sphere 0 0 150 24 units box\ncreate_atoms    1 region mobile\ngroup           impactor region mobile\n\nmass            * 12.011\n\n# Set potential function\npair_style      airebo/morse 3.0\npair_coeff      * * CH.airebo-m C\n\n# Relaxation\ntimestep        0.001\nthermo          100\nthermo_style    custom step pe ke etotal temp lx ly lz press \ndump            1 all custom 100 relax.xyz id type x y z\n\nminimize        1.0e-10 1.0e-10 50 50\nvelocity        all create 300.0 12345 dist gaussian\nfix             2 all npt temp 298 298 0.1 iso 0 0 1\nrun             100\nundump          1\nunfix           2\n\n# Grouping\ngroup           graphene1 region graphene\ngroup           graphene2 region graphene2\ngroup           graphene union graphene1 graphene2\nvariable        ymn equal ylo+4\nvariable        ymx equal yhi-4\nvariable        xmn equal xlo+4\nvariable        xmx equal xhi-4\nregion          middle block ${xmn} ${xmx} ${ymn} ${ymx} -5 20 units box\ngroup           middle region middle\ngroup           edge subtract graphene middle\n\nchange_box      all boundary p p s\n\n# Falling\nreset_timestep  0\ntimestep        0.001\nthermo          100\nthermo_style    custom step pe ke etotal temp lx ly lz press\ndump            1 all custom 100 down.xyz id type x y z  \n\nvelocity        edge set 0 0 0 sum no units box\nfix             sheet edge setforce 0 0 0.0\nvelocity        impactor set 0.0 0.0 -50.0 sum yes units box \nfix nve         all nve\ntimestep        0.001\nrun             40000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Perform nanoindentation simulation of single-crystal iron under diamond using LAMMPS.",
        "input": "",
        "output": "# Initial Conditions\ndimension                   3                                      \nboundary                    p p p                                    \nunits                       metal    \natom_style                  atomic\ntimestep                    0.001\n\n# Simulation Region\nregion                      box block 0 60 0 60 -10 120 units box \ncreate_box                  2 box\n\n# Workpiece Iron\nlattice                     bcc 2.866\nregion                      boundary block INF INF INF INF 0 10 units box\nregion                      temp_layer block INF INF INF INF 10 20 units box\nregion                      newton_layer block INF INF INF INF 20 60 units box\nregion                      piece union 3 boundary temp_layer newton_layer\ncreate_atoms                1 region piece \n\n# Indenter Diamond \nlattice                     diamond 3.57 \nregion                      indenter sphere 30 30 90 15 units box \ncreate_atoms                2 region indenter \n\n# Atom Masses\nmass                        1 56\nmass                        2 12\n\n# Grouping\ngroup                       boundary region boundary\ngroup                       temp_layer region temp_layer\ngroup                       newton_layer region newton_layer\ngroup                       piece region piece\ngroup                       indenter region indenter\n\n# Model\nwrite_data                  Fe-C.data\n\n# Potential Function\npair_style                  hybrid eam/fs tersoff morse 2.7\npair_coeff                  * * eam/fs Fe.eam.fs Fe NULL   \npair_coeff                  * * tersoff 1989SiC.tersoff NULL C \npair_coeff                  1 2 morse 0.7214 1.5938 2.4901\n\n# Energy Minimization\nmin_style                   cg\nminimize                    1e-10 1e-10 5000 5000\n\n# Velocity Initialization\nvelocity                    all create 300 8877423 \n\n# Relaxation\nfix                         1 piece npt temp 300 300 0.1 iso 0 0 1 \nthermo                      100\nthermo_style                custom step temp etotal \ndump                        1 all atom 500 1npt.xyz\nrun                         10000\nundump                      1\nunfix                       1\nreset_timestep              0\n\n# Change Boundary Conditions\nchange_box                  all boundary p p s \n\n# Calculate and Control Temperature for Different Layers\ncompute                     new_temp1 temp_layer temp/com\ncompute                     new_temp2 newton_layer temp/com\n\n# Output Information\nthermo                      100\nthermo_style                custom step temp c_new_temp1 c_new_temp2 etotal ke pe \ndump                        1 all custom 500 2indent.xyz id type x y z\n\n# Indentation Implementation: Distance = Steps * Velocity * Time Step\nvariable                    depth equal 15    # Indentation depth of 20 Angstroms\nvariable                    distance equal 15 # Initial distance between indenter and surface is 10 Angstroms\nvariable                    loadv equal 0.2   # Loading speed of 0.2 Angstroms/ps\nvariable                    load_step   equal (v_depth+v_distance)/v_loadv/0.001\nvariable                    unload_step equal (v_depth+v_distance)/v_loadv/0.001/2\n\n# Calculate Indentation Displacement\nvariable                    dis equal xcm(indenter,z)\nvariable                    initial_dis equal ${dis}    \nvariable                    disp equal -(v_dis-(${initial_dis}))\n\n# Calculate Force During Indentation\ncompute                     forcez indenter property/atom fz     \ncompute                     fzz indenter reduce sum c_forcez  \nvariable                    load equal c_fzz\nfix                         def3 all print 100 \"${disp} ${load}\" file disp_load.txt screen no\n\n# Newton Layer\nfix                         20 newton_layer nve\n\n# Temperature Control\nfix                         30 temp_layer nve\nfix                         31 temp_layer langevin 300.0 300.0 0.01 25784\nfix_modify                  31 temp new_temp1\n\n# Fix Boundaries\nvelocity                    boundary set 0 0 0 \nfix                         40 boundary setforce 0.0 0.0 0.0  \n\nfix                         50 indenter move linear 0 0 -${loadv} units box \nrun                         ${load_step}\nunfix                       50 \n\nfix                         51 indenter move linear 0 0 ${loadv} units box \nrun                         ${unload_step}\nunfix                       51",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of ice using LAMMPS.",
        "input": "The Ice.dat is considered known.",
        "output": "# Initial Simulation System Settings\nunits      real\ndimension  3\nboundary   p p p\natom_style full\n\n# Read Model\nread_data Ice.dat\n\n# Create Groups\ngroup ox type 2\ngroup hy type 1\n\n# Set Charges\nset group ox charge -0.830\nset group hy charge 0.415\n\n# TIP3P Potential Parameters\npair_style lj/cut/coul/long 10.0\npair_coeff 1 1*2 0.000 0.000 \npair_coeff 2 2 0.102 3.188 \nbond_style  harmonic\nbond_coeff  1 450 0.9572\nangle_style harmonic\nangle_coeff 1 55 104.52\nkspace_style pppm 1.0e-5 # Final NPT relaxation\n\n# Simulation Environment Settings\nfix 1 all shake 1e-6 200 0 b 1 a 1\nvelocity all create 1.0 1234546 dist gaussian\nfix 2 all npt temp 1.0 100.0 1000.0 iso 1.0 1.0 1000.0\n\n# Compute RDF and Save to File\ncompute myRDF all rdf 500 1 1 1 2 2 2\nfix 3 all ave/time 2 100 5000 c_myRDF file tip3p.rdf mode vector\n\n# Define Output Information\nneighbor 2.0 bin\nneigh_modify delay 0 every 10 check yes\nthermo      100\nthermo_style custom step temp press vol\nthermo_modify norm no flush yes\n\n# Dumps\ndump waterdump all atom 5000 298K.1Bar.dump\nrestart 10000 298K.1Bar.restart\n\n# Run Variables\ntimestep 0.5\nrun 60000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the crumpling of a graphene sheet using LAMMPS.",
        "input": "",
        "output": "# Define variable name\nvariable name string graphene_crumple_byconfinement\n\n# Redirect log file\nlog log.${name}\n\n# Initialize Simulation\ndimension  3\n# Define 3-dimensional simulation system\n\nunits           metal\n# Use metal unit system\natom_style      atomic\n# Model contains only atoms\n# Create Atoms\nboundary  p p p\n# Periodic boundary conditions in x, y, z directions\nregion  box block  -150 150 -150 150 -10 10 units lattice\n# Define box size\ncreate_box  1 box\n# Box contains only one type of atom\n\nlattice custom 2.4595 a1 1  0  0  a2 0 1.73203 0 &\nbasis 0 0 0  basis 0.5 0.16666666666666666 0 &\nbasis 0.5 0.5 0 basis 0 0.6666666666666666 0\n### Define the lattice structure of graphene\n\nregion  graphene block  -125 125 -125 125 0 0.1 units lattice\n# Define a rectangular region named graphene\ncreate_atoms  1 region graphene\n# Fill the graphene region with the first type of atoms according to the previously defined lattice structure\n\nlattice diamond 3.567\n# Define the lattice structure again\nmass * 12.011\n# Define the atomic mass, * means for any atom\n\n# Define Interatomic Potential\npair_style airebo/morse 3.0\n# Define the type of atomic interaction\npair_coeff * * CH.airebo-m C\n# Provide the corresponding potential file\n\ncompute 3 all pe/atom\n# Define the calculation of potential energy for each atom\ncompute 4 all stress/atom NULL pair\n# Define the calculation of stress on each atom\n\n# Run the simulation for thermal equilibration\nvelocity all create 178 4928459 dist gaussian\n# Give initial velocities to all atoms\n\nfix 1 all npt temp 298 298 .4 x 0.0 0.0 .5 y 0.0 0.0 .5\n# Apply NPT simulation environment to all atoms (however, only control the pressure in the x and y directions)\n\nthermo 10\n# Define to output thermodynamic information every 10 steps\nthermo_style custom step pe ke etotal temp lx ly lz press atoms\n# Customize the output of thermodynamic information\n\ndump 1 all custom 25 dump.${name}.* id x y z vx vy vz c_3 c_4[1] c_4[2] c_4[3]\n# Define the output of atomic information\ntimestep 0.002\n# Define the time step\n\nfix bp all balance 250 1 shift z 10 1\n# Balance CPU loads to improve parallel efficiency\nthermo_style custom step temp ke pe press pxx pyy vol\n# Customize the output of thermodynamic information\nrun 10000\n# Run for 10000 steps\n\ngroup graphene region graphene\n# Define the graphene group\n\nvariable ymn equal ylo+4\n\nvariable ymx equal yhi-4\n\nvariable xmn equal xlo+4\n\nvariable xmx equal xhi-4\n# Define variables ymn, ymx, xmn, xmx\nregion middle block ${xmn} ${xmx} ${ymn} ${ymx} -5 5 units box\n# Define the middle region in the box\ngroup middle region middle\n# Define the middle group of atoms in the middle region\ngroup edge subtract graphene middle\n# Subtract the middle group from the graphene group, and the remaining atoms belong to the edge group\n\nunfix 1\n# Remove the NPT environment\n\nvariable r0 equal 212\n\nvariable rate equal 0.75\n\nvariable radius equal \"v_r0 - (step-10000)*dt*v_rate\"\n# Define variables r0, rate, radius\nfix constrain all indent 1 sphere 0 0 0 v_radius side in units box\n# Apply a spherical indent loading environment\nchange_box all boundary s s s\n# Change the box boundary conditions to sss\nthermo_style custom step temp ke pe press pxx pyy vol v_radius f_constrain[1] f_constrain[2] \n# Customize the output of thermodynamic information\n\n# Run the simulation for confinement\nfix nve all nve\n# Use the NVE simulation environment\n\nrun 100000\n# Run for 100000 steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of diamond impacting graphene using LAMMPS.",
        "input": "",
        "output": "# Setup the simulation \nlog log.Graphene_impact\n# Rename the default output log file to log.Graphene_impact\necho screen\n# Echo computation process to the screen\ndimension  3\n# Three-dimensional simulation\nunits           metal\n# Use metal unit system\natom_style      atomic\n# Consider only atomic interactions in the system\nboundary p p p\n# Periodic boundary conditions in all three directions\nregion box block  -210 210 -240 240 -5 200 units lattice\n# Define the simulation box region\ncreate_box 1 box\n# Create a box with only one type of atom\n\nlattice custom 2.4595 a1 1  0  0  a2 0 1.73203 0 &\n basis 0 0 0  &\n basis 0.5 0.16666666666666666 0 &\n basis 0.5 0.5 0 &\n basis 0 0.6666666666666666 0\n# Define the lattice structure\nregion graphene block  -210 210 -240 240 0 0.1 units lattice\n# Define a region named graphene within the box\ncreate_atoms 1 region graphene \n# Fill the graphene region with atoms of type 1\nmass * 12.011\n# Define the mass of all atom types\n\n# Define Interatomic Potential \n\npair_style airebo/morse 3.0\n# Define the type of interatomic potential\npair_coeff * * CH.airebo-m C\n# Provide the corresponding potential file\n\ncompute 3 all pe/atom\n# Calculate the potential energy for each atom\ncompute 4 all stress/atom NULL virial #note, ignores thermal contribution to stress\n# Calculate the stress on each atom\n\n# Run the simulation for equilibration \nvelocity all create 300.0 12345 dist gaussian\n# Give initial velocities to all atoms following a Gaussian distribution\nfix npt all npt temp 298 298 .5 x 0.0 0.0 .5 y 0.0 0.0 .5\n# Set NPT conditions, controlling temperature and pressure in x and y directions\n\nthermo  10\n# Output thermodynamic information every 10 steps\nthermo_style custom step pe ke etotal temp lx ly lz press atoms\n# Customize the output of thermodynamic information\ndump eve all custom 25 dump.graphene_impact.* id type x y z vx vy vz c_3 c_4[1] c_4[2] c_4[3]\n# Dump the required atomic information\ntimestep 0.001\n# Define the time step\nfix bp all balance 250 1 shift z 10 1\n# Balance CPU loads to improve parallel efficiency\nthermo_style custom step temp ke pe press vol\n# Customize the output of thermodynamic information again\nrun 50\n# Run for 50 steps\n\ngroup graphene region graphene\n# Define the graphene group\nvariable ymn equal ylo+4\nvariable ymx equal yhi-4\nvariable xmn equal xlo+4\nvariable xmx equal xhi-4\n# Define parameters ymn, ymx, xmn, xmx\nregion middle block ${xmn} ${xmx} ${ymn} ${ymx} -5 5 units box\n# Define the middle region in the box\ngroup middle region middle\n# Define the middle group of atoms\ngroup edge subtract graphene middle\n# Subtract the middle group from the graphene group, remaining atoms belong to the edge group\nunfix npt\n# Remove the NPT environment\n\nlattice diamond 3.567\n# Define the lattice structure again\nregion mobile sphere 0 0 150 30 units box\n# Define a mobile region\ncreate_atoms 1 region mobile\n# Fill the mobile region with atoms of type 1\ngroup impactor region mobile\n# Define the impactor group\n\nchange_box all boundary p p s\n# Change the box boundary conditions\n\n# Run the simulation for impact \n\nreset_timestep 0\n# Reset the time step\nvelocity edge set NULL NULL 0 sum no units box\n# Set the initial velocity for the edge group\nfix sheet edge setforce NULL NULL 0.0\n# Set the force for the edge group\nvelocity impactor set 0.0 0.0 -20.0 sum yes units box   #20 A/ps = 2 km/s\n# Set the initial velocity for the impactor group\nfix nve all nve\n# Set the NVE environment\ntimestep 0.002\n# Define the time step\nrun 20000\n# Run for 20000 steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the calculation of stacking fault energy using LAMMPS.",
        "input": "",
        "output": "# INITIALIZATION\nclear\n# Clear all memory allocated to LAMMPS from previous runs\nunits    metal\n# Use the metal unit system\ndimension  3\n# Model is a 3-dimensional system\nboundary  p p s\n# Define boundary conditions for all three directions\natom_style  atomic\n# Model contains only atoms\nvariable latparam1 equal 3.52\n# Define variable latparam1 (for later lattice constant setup)\n\nvariable x_displace equal -1*(${latparam1}/sqrt(6))\n# Define variable x_displace (for later atomic displacement)\n\nvariable xdim equal ${latparam1}*sqrt(6)/2*10\nvariable ydim equal ${latparam1}*sqrt(2)/2*10\nvariable zdim equal ${latparam1}*sqrt(3)*6\n# Define variables xdim, ydim, zdim for later region definition\n\n# CRYSTAL STRUCTURE DEFINITION\n\nlattice    fcc ${latparam1}\n# Define the lattice structure using the previously defined variable latparam1\nregion    1 block 0 ${xdim} 0 ${ydim} 0 16.5 units box\nregion     2 block 0 ${xdim} 0 ${ydim} 16.5 36.5808 units box\nregion    whole block 0 ${xdim} 0 ${ydim} 0 36.5808 units box\n# Define regions named 1, 2, whole using previously defined variables xdim, ydim\n\ncreate_box   2 whole\n# Create a box with two types of atoms in the whole region\nlattice fcc ${latparam1} orient x 1 1 2 orient y -1 1 0 orient z -1 -1 1\n# Redefine the lattice structure, overriding the previous lattice command\ncreate_atoms  1 region 1\n# Fill region 1 with the first type of atoms\nlattice fcc ${latparam1} orient x 1 1 2 orient y -1 1 0 orient z -1 -1 1\n# Redefine the lattice structure, overriding the previous lattice command\ncreate_atoms   2 region 2 \n# Fill region 2 with the second type of atoms\n\n# EAM POTENTIAL\n\npair_style  eam/alloy\n# Define the type of interatomic potential\npair_coeff * * FeCuNi.eam.alloy Ni Ni\n# Provide the corresponding potential file\n\n# SETTINGS\n\ncompute peratom all pe/atom\n# Calculate the potential energy for each atom\ncompute eatoms all reduce sum c_peratom\n# Sum the potential energy of each atom\nthermo 1\n# Output thermodynamic information every step\nthermo_style custom step pe c_eatoms\n# Define the thermodynamic information to output, where c_eatoms represents the sum of the calculated potential energy of atoms\ndump 1 all custom 1 dump.relax.1.* id type xs ys zs c_peratom \n# Define the output of atomic information\nrun 0\n# Run 0 steps to output the initial thermodynamic state\n\nvariable E equal \"c_eatoms\"\n# Define variable E to be equal to the current value of c_eatoms\nvariable Eo equal $E\n# Since c_eatoms will change later, define variable Eo to store the current value of E\n\n#variable E equal \"c_eatoms\" computes the initial energy of the model before any sliding is done\n#E is necessary to store the initial energy in Eo\n\ngroup bot region 1\n# Divide the atoms in region 1 into the bot group\ngroup top region 2\n# Divide the atoms in region 2 into the top group\ndisplace_atoms top move ${x_displace} 0.0 0.0 units box\n# Move the top group of atoms in the x direction by the previously defined x_displace variable\n# displace_atoms is the command necessary to move atoms into the next stacking arrangement (ie: A -> B)\n\nfix 1 all setforce 0 0 NULL\n# Set the force on all atoms to 0 in the x and y directions, and do not control the force in the z direction\nmin_style cg\n# Use the conjugate gradient algorithm\nminimize 1e-10 1e-10 1000 1000\n# Perform energy minimization\nvariable Ef equal \"c_eatoms\"\n# Define variable Ef to be equal to the current value of c_eatoms\nvariable Cf equal 1.60217657e-16\n# Define variable Cf to be equal to 1.60217657e-16\nvariable A equal (${xdim}*${ydim})*1e-20\n# Define variable A to be equal to (${xdim}*${ydim})*1e-20\nvariable SFE equal ((${Ef}-${Eo})*${Cf})/${A}\n# Define variable SFE to be equal to ((${Ef}-${Eo})*${Cf})/${A}\n\n#variable Ef equal \"c_eatoms\" computes the final energy of the system after sliding is done\n#variable A is the area of the Stacking fault plane\n#variable Cf is the conversion factor of electron volts to millijoules\n#variable SFE is the stacking-fault energy of the system\n#################################### \n# SIMULATION DONE\n\nprint \"All done\"\n# Output \"All done\"\nprint \"Initial energy of atoms = ${Eo} eV\"\n# Output \"Initial energy of atoms = Eo value in electron volts\"\nprint \"Final energy of atoms = ${Ef} eV\"\n# Output \"Final energy of atoms = Ef value in electron volts\"\nprint \"Stacking-fault energy = ${SFE} mJ/m^2\"\n# Output \"Stacking-fault energy = SFE value in millijoules per square meter\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate 3D silicon cracks described by the SW potential using LAMMPS.",
        "input": "",
        "output": "# 3D Silicon crack simulation using Stillinger-Weber\nvariable name string ex_crack_Si_long\n# Define a string variable (assign the string \"ex_crack_Si_long\" to the variable \"name\")\ndimension  3\n# 3-dimensional system\nboundary s s p\n# Define boundary conditions for all three directions\nunits metal\n# Use the metal unit system\n\natom_style atomic\n# The system contains only atoms\nneighbor 0.3 bin\n# Define the neighbor list\nneigh_modify delay 5\n# Define the update frequency of the neighbor list\n# Note: neighbor and neigh_modify are generally not needed\n\n# Create geometry\n\nlattice  diamond 5.43\n# Define the lattice structure\nregion  box block 0 35 0 35 -15 15 units lattice\n# Define the box region\ncreate_box 5 box\n# Define the type of atoms in the box\ncreate_atoms 1 box\n# Fill the entire box with the first type of atoms according to the defined lattice structure\n\nmass  1 1.0\nmass  2 1.0\nmass  3 1.0\nmass  4 1.0\nmass  5 1.0\n# Define the mass for each type of atom\n\npair_style sw\n# Define the type of interatomic potential\npair_coeff * * Si.sw Si Si Si Si Si\n# Provide the corresponding potential file\n\n# Define groups\n\nfix  1 all nve\n# Use the nve environment\nrun 0\n# Run 0 steps\n\nvariable topbound equal yhi-2\n# Define the variable \"topbound\" as yhi (maximum value in the y-direction of the box) - 2\nvariable botbound equal ylo+2\n# Define the variable \"botbound\" as ylo (minimum value in the y-direction of the box) + 2\n\nregion     1 block INF INF INF ${botbound} INF INF units box\n# Define region 1 in the box\ngroup  lower region 1\n# Define the lower group of atoms in region 1\nregion  2 block INF INF ${topbound} INF INF INF units box\n# Define region 2 in the box\ngroup  upper region 2\n# Define the upper group of atoms in region 2\ngroup  boundary union lower upper\n# Combine the lower and upper groups into the boundary group\ngroup  mobile subtract all boundary\n# Subtract the boundary group from all atoms to define the mobile group\n\nvariable quarter equal xhi/6\n# Define the variable \"quarter\" as xhi (maximum value in the x-direction of the box) / 6\nvariable half equal xhi/2\n# Define the variable \"half\" as xhi (maximum value in the x-direction of the box) / 2\n\nregion  leftupper block INF ${quarter} ${half} INF INF INF units box\n# Define the leftupper region\nregion  leftlower block INF ${quarter} INF ${half} INF INF units box\n# Define the leftlower region\ngroup  leftupper region leftupper\n# Define the leftupper group of atoms\ngroup  leftlower region leftlower\n# Define the leftlower group of atoms\n\nset  group leftupper type 2\n# Set the type of atoms in the leftupper group to type 2\nset  group leftlower type 3\n# Set the type of atoms in the leftlower group to type 3\nset  group lower type 4\n# Set the type of atoms in the lower group to type 4\nset  group upper type 5\n# Set the type of atoms in the upper group to type 5\n\n# Initial velocities\ncompute    new mobile temp\n# Calculate the temperature of the mobile group of atoms\nvelocity mobile create 5 887723 temp new\n# Give initial velocities to the mobile group of atoms\nvelocity upper set 0.0 0.25 0.0\n# Set specific initial velocities to the upper group of atoms\n# velocity mobile ramp vy 0.0 0.1 y 1.25 38.75 sum yes\n# Ramp the initial velocities of the mobile group of atoms based on their y coordinates\ncompute stress all stress/atom NULL\n# Calculate the stress on each atom\n\n# Fixes\nfix  2 boundary setforce NULL 0.0 NULL\n# Set the force on the boundary group of atoms (ignore forces in x and z directions, set force in y direction to 0)\n\ndump 1 all custom 50 dump.${name}.* id type x y z vx vy vz c_stress[1] c_stress[2] c_stress[3]\n# Define the output of atomic information\n# Run\ntimestep 0.001\n# Define the time step\nthermo  200\n# Output thermodynamic information every 200 steps\nthermo_modify temp new\n# Change the default system temperature output to the calculated temperature of the mobile group\nneigh_modify exclude type 2 3\n# Exclude interactions between atom types 2 and 3\n\nrun  20000\n# Run for 20000 steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the surface diffusion process of adsorbed atoms using LAMMPS.",
        "input": "",
        "output": "units metal \n# Use the metal unit system\ndimension 3 \n# 3-dimensional system\nboundary p p s \n# Define boundary conditions for x, y, and z directions\natom_style atomic\n# The simulation system contains only atoms\n\nlattice fcc 3.614\n# Define the lattice constant and type (i.e., define the atomic arrangement rules)\nvariable cubel equal 4\n# Define the parameter 'cubel' to be equal to 4\nvariable fixer1 equal \"v_cubel+2\"\n# Define the parameter 'fixer1' to be equal to the 'cubel' parameter plus 2, where 'v_cubel' refers to the previously defined 'cubel' parameter\nvariable fixer2 equal \"v_cubel+1.49\"\n# Define the parameter 'fixer2' to be equal to the 'cubel' parameter plus 1.49\n\nregion  box block -${cubel} ${cubel} -${cubel} ${cubel} -${fixer1} 1 units lattice\n# Define the 'box' region\nregion cbox block -${cubel} ${cubel} -${cubel} ${cubel} -${fixer1} 0 units lattice\n# Define the 'cbox' region\ncreate_box 1 box\n# Define the total number of atom types in the box (only one type)\ncreate_atoms 1 region cbox\n# Fill the 'cbox' region with atoms according to the defined atomic arrangement rules\ncreate_atoms 1 single -0.5 0 0.5 units lattice\n# Add an atom at the position (-0.5*lattice constant, 0*lattice constant, 0.5*lattice constant)\n\nregion hold block INF INF INF INF -${fixer1} -${fixer2} units lattice\n# Define the 'hold' region\nregion temp block INF INF INF INF -${fixer2} -${cubel} units lattice\n# Define the 'temp' region\ngroup hold region hold\n# Define the 'hold' group of atoms in the 'hold' region\ngroup temp region temp\n# Define the 'temp' group of atoms in the 'temp' region\n\npair_style eam/alloy \n# Define the type of potential function\npair_coeff * * Cu01.eam.alloy Cu\n# Provide the corresponding potential file\n\ncompute pe all pe/atom \n# Define the calculation of potential energy for each atom\ntimestep        0.005\n# Define the time step\ncompute          new all temp\n# Calculate the overall temperature\nvelocity    temp create 600 12345\n# Give initial velocities to the 'temp' group of atoms at 600K\nfix heater temp temp/rescale 1 850 850 5 1\n# Control the temperature of the 'temp' group of atoms using the velocity rescaling method\nfix nve all nve\n# Use the NVE ensemble for the entire system\nfix freeze hold setforce 0 0 0\n# Set the force on the 'hold' group of atoms to zero\n\ndump eve all custom 5 dump.adatom.* id type xu yu zu vx vy vz c_pe\n# Define the output of atomic information (including id, type, position, velocity, and potential energy)\nthermo 50\n# Output thermodynamic information every 50 steps; no thermo_style is defined, so LAMMPS default types are output\nrun 100000\n# Run for 100000 steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the uniaxial compression process of a nickel micropillar using LAMMPS.",
        "input": "",
        "output": "# INITIALIZATION \nunits        metal\n# Use the metal unit system\n\ndimension        3\n# Three-dimensional molecular dynamics simulation\n\nboundary        s  s         p\n# Apply periodic boundary conditions in the z direction\n\natom_style     atomic\n# Atom type\n\natom_modify  map  array\n# Select array style mapping\n\nneighbor 3.0 bin\n# Specify neighbor list parameters (rc+3.0)\n\nneigh_modify every 1 delay 0 check yes\n# Rebuild the neighbor list every 1 step\n\nvariable          ts          equal 0.001    \n# Define variable ts\n\nvariable          temperature equal 0.1\n# Define temperature variable temperature\n\ntimestep          ${ts}\n# Set the time step\n\nvariable          tDamp          equal \"100*v_ts\"  \n# Define the temperature damping time variable (100 times the time step)\n\nvariable          pDamp          equal \"1000*v_ts\"     \n# Define the pressure damping time variable (1000 times the time step)\n\n# MODELING\nlattice    fcc 3.5200  orient x 1 0 0 orient y 0 1 0 orient z 0 0  1\n# Specify the lattice type, lattice constant, and crystal orientation\n\nregion    box block 0 52.8  0 52.8  0 225 units box\n# Define the box region (range of x, y, z)\n\ncreate_box               1 box\n# Create a simulation box containing one type of atom in the box region\n\ncreate_atoms  1 box\n# Create type 1 atoms in the simulation box\n\nregion       1 block INF INF INF INF  INF 14  units box\ngroup             lower region 1\nregion       2 block INF INF INF INF 211 INF  units box\ngroup             upper region 2\ngroup             boundary union lower upper\ngroup             mobile subtract all boundary\n# Set groups: boundary group and mobile atom group\n\n# FORCE FIELDS\npair_style    eam \n# Define the interatomic potential as the embedded atom method\n\npair_coeff       * *   Ni_u3.eam \n# Specify the EAM potential file (for nickel atoms)\n\nmass   1     58.710\n# Specify the atom mass\n\n# MINIMIZE \n\nthermo 1000\n# Output thermodynamic quantities every 1000 steps\n\nthermo_style custom step lx ly lz press pxx pyy pzz pe temp\n# Display thermodynamic quantities in a custom format\n\nmin_style      cg\n# Use the conjugate gradient method for energy minimization\n\nminimize       1.0e-4 1.0e-6 10000 1000000\n# Set the energy minimization stopping conditions\n\nreset_timestep  0\n# Reset the current time step\n\n# RELAXATION\nvelocity  all create ${temperature}   5812775 \n# Set the initial velocities of the atoms\n\nfix         1 all npt temp ${temperature}  ${temperature} ${tDamp} z 0 0  ${pDamp} \n# Use the NPT ensemble\n\ndump      1  all atom  5000 compression.lammpstrj\n# Output the trajectory file every 5000 steps\n\nthermo   1000\n# Output thermodynamic quantities every 1000 steps\n\nthermo_style  custom step temp ke pe press  lz   \n# Display thermodynamic quantities in a custom format\n\nrun        50000\n# Run for 50000 steps\n\nundump 1 \n# Release the trajectory output 1\n\nunfix  1 \n# Release the temperature constraint 1\n\nreset_timestep  0\n# Reset the current time step\n\n# DEFORMATION \n\ncompute     newT all temp/partial 1 1 0 \n# Set temperature calculation newT, ignoring velocity in the z direction\n\nfix         1 mobile nvt temp ${temperature}  ${temperature} ${tDamp} \n# Use the NVT ensemble\n\nfix_modify  1 temp newT\n# Use the newT calculation method for temperature\n\nvariable srate equal -1.0e8\nvariable srate1 equal \"v_srate / 1.0e12\"\n# The above two variables determine the strain rate, which is 1e8/s or 0.0001/ps here\n\nfix  2  all deform 1 z erate ${srate1} units box remap x\n# Deform the box in the z direction at the specified strain rate\n\nthermo   1000\n# Output thermodynamic quantities every 1000 steps\n\nthermo_style  custom step  temp c_newT  ke pe press   \n# Display thermodynamic quantities in a custom format\n\ndump      1 all cfg 10000 compression2.*.cfg mass type xs ys zs fx fy fz \ndump_modify     1 element Ni\n# Output trajectory files in CFG format\n\nrun     2000000\n# Run for 2000000 steps",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the calculation of the Young's modulus of polycrystalline Ni using LAMMPS.",
        "input": "",
        "output": "# Basic Settings\nunits                metal\n# Metal units, time in picoseconds (10^-12s)\natom_style          atomic\n# Atom style is atomic\nboundary            p  s  p\n# Boundary conditions: periodic in x and z directions, fixed in y direction (for stretching)\nneighbor            0.3  bin\nneigh_modify        delay  5\n# Cutoff radius and neighbor settings, not modified from default\n\n# Global Variables\nvariable            ts  equal  0.001\n# Define a variable named 'ts' for easy modification in time steps (not used in this example)\n\n# Read file, set mass\nread_data            Ni_poly.lmp\nmass                * 58.69\n# Read file, set mass, file is a Ni polycrystal modeled by atomsk\n\n# Regions and Groups\nregion              left  block 0 100.0 0.0    10.0   0.0 100.0\nregion              right block  0 100.0 190.0 200.0  0.0  100.0\nregion              mid    block  0  100.0 10.0  190.0  0.0 100.0\ngroup                left  region  left\ngroup                right  region  right\ngroup                mid    region  mid\ngroup                boundary  union  left  right\n# Set regions and groups\n\n# Potential\npair_style          eam/alloy\npair_coeff          *  *  NiAlH_jea.eam.alloy    Ni\n\n# Calculation Parameters\ntimestep            0.001\nthermo              100\n# Display thermodynamic parameters every 100 timesteps (i.e., every 1ps)\ncompute              stress  all stress/atom NULL\n# Calculate stress\n\n# Variables for output preparation\nvariable            ly0 equal ly\nvariable            ly00  equal  ${ly0}\nvariable            stress equal -pyy/10000\nvariable            strain equal (ly-v_ly00)/v_ly00\nvariable            px  equal  pxx\nvariable            py  equal  pyy\nvariable            pz  equal  pzz\nthermo_style        custom  step  lx ly lz press pxx pyy pzz pe temp  etotal\n\n# Set velocity\nvelocity            mid  create 300 666 dist gaussian\n# Create velocities for the 'mid' group at 300K following a Gaussian distribution, 666 is a random number with negligible effect on results\n\n# Fix boundaries\nfix                  1  boundary setforce 0.0 0.0 0.0\n# Fix boundary velocities and forces to zero in all directions\n\n# NPT ensemble\nfix                  2  all npt temp 300 300 0.01 x 0 0 0.8 z 0 0 0.8\n# Set to NPT ensemble, update approximately every 0.01ps, pressure in x and z directions remains unchanged, damping set to 0.8\n\n# Output relaxed lammpstrj file\ndump                0  all custom 100 wenduchiyu_Ni_poly.lammpstrj id type x y z c_stress[1]  c_stress[2]   c_stress[3]\n\n# Output pressure to txt file\nfix                  extra1  all print 10 \"${px}  ${py} ${pz}\"  file  wenduchiyu_Ni_poly.txt screen no\n\n# Run for 2500 timesteps\nrun                  2500\n\n# End of temperature equilibration, below is the simulation stretching part\nunfix                2\n\n# Set velocity for the 'right' group\nvelocity            right  set 0.0 0.1 0.0 \n\n# Set velocity gradient (since stretching requires varying velocities)\nvelocity            mid  ramp  vy 0 0.1 y  10.0 190.0 sum yes\n\n# Fix to NVT ensemble\nfix                  3  all  nvt  temp  300.0  300.0  0.01\n\n# Output stress and strain to txt file for Young's modulus calculation\nfix                  extra2  all print 10 \"${strain}  ${stress}\"  file  Ni_poly.txt screen no\n\n# Output lammpstrj file\ndump                1 all custom 100 Ni_poly.lammpstrj id type x y z c_stress[1]  c_stress[2]   c_stress[3]\n\n# Run for 5000 timesteps\nrun                  5000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the casting process using LAMMPS.",
        "input": "",
        "output": "variable name string pour\n\natom_style  sphere\nboundary p p fm\nnewton  off\ncomm_modify vel yes\n\nlattice  fcc .8\nregion  reg block -35 35 -3 3 0 70\ncreate_box 4 reg\n\nneighbor 0.2 bin\nneigh_modify delay 0\n\npair_style  hybrid  lj/cut 2.5 gran/hooke/history 2000.0 NULL 50.0 NULL 0.5 0\npair_coeff * * lj/cut 1 1 2.5\npair_coeff 1 1 gran/hooke/history\n\ntimestep 0.001\n  \nregion         P1 block -9 -8 -1.5 1.5 60 66 \nregion         P2 block -9 -6 -1.5 1.5 65 66\nregion         P3 block -7 -6 -1.5 1.5 63 66\nregion         P4 block -9 -6 -1.5 1.5 63 64\nregion  P union 4 P1 P2 P3 P4\n  \nregion         O1 block -4 -3 -1.5 1.5 60 66\nregion         O2 block -4 -1 -1.5 1.5 65 66\nregion         O3 block -2 -1 -1.5 1.5 60 66\nregion         O4 block -4 -1 -1.5 1.5 60 61\nregion  O union 4 O1 O2 O3 O4\n\nregion         U1 block 1 2 -1.5 1.5 60 66\nregion         U2 block 1 4 -1.5 1.5 60 61\nregion         U3 block 3 4 -1.5 1.5 60 66\nregion  U union 3 U1 U2 U3\n\nregion         R1 block 6 7 -1.5 1.5 60 66\nregion         R2 block 6 9 -1.5 1.5 65 66\nregion         R3 block 8 9 -1.5 1.5 63 66\nregion         R4 block 6 9 -1.5 1.5 63 64\nregion         R5 prism 8 9 -1.5 1.5 60 63 0 -.75 0\nregion  R union 5 R1 R2 R3 R4 R5\n \nregion          POUR union 4 P O U R\ngroup POUR region POUR\ncreate_atoms 2 region POUR\n\nfix  1 all nve/sphere\nfix  2 all gravity 1.0 spherical 0.0 -180.0\nfix  zlower all wall/gran hooke/history 2000.0 NULL 50.0 NULL 0.5 0 &\n  zplane 0.0 2000.0\n\n#fix 3 POUR nve/noforce \n#fix 4 POUR setforce 0.0 0.0 0.0\n\nregion  slab block -3 3 -2 2 69.5 70\nfix  ins all pour 40000 1 300719 vol 0.5 100 region slab\n\nregion  slab2 block -16 -15 -2 2 69.5 70\nfix  ins2 all pour 10000 3 300719 vol 0.5 100 region slab2\n\nregion  slab3 block 15 16 -2 2 69.5 70\nfix  ins3 all pour 10000 4 300719 vol 0.5 100 region slab3\n\ncompute  1 all erotate/sphere\nthermo_style custom step atoms ke c_1 vol\nthermo  1000\nthermo_modify lost ignore norm no\ncompute_modify thermo_temp dynamic yes\n\ndump 1 all custom 250 dump.${name}.* id type x y z vx vy vz\n\n\nrun  1000000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the calculation of the phonon spectrum of a 3D copper block using LAMMPS.",
        "input": "",
        "output": "# 3D copper block simulation\nboundary    p p p\nunits       metal\natom_style  atomic\n\n# geometry\nread_data  data.pos\n\n# EAM potential\npair_style    eam/opt\npair_coeff     * * cuu3.eam\nneighbor       0.5 nsq\nneigh_modify   every 1 delay 0 check yes\n\n#Langevin random seed\nvariable r equal 57085\nvariable t equal 300\nvariable d equal 1\n\n# initialize\nvelocity all create $t 28459 rot yes dist gaussian mom yes\nreset_timestep 0\n\n# fixes \nfix      1 all npt temp $t $t $d iso 1. 1. 1. pchain 8 drag 1.0\nfix      2 all phonon 10 50000 500000 map.in CuPhonon\n\n#\ntimestep 2e-3\n\n# output\n#                    1    2    3  4  5     6   7  8  9  10 11 12\nthermo_style  custom step temp pe ke press vol lx ly lz xy xz yz\nthermo  100\n\nrestart 2000000 restart.one restart.two\n\n# execution\nrun    6500000\nwrite_restart Restart.final",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the calculation of the axial phonons of a 20nm long (40,40) carbon nanotube using LAMMPS.",
        "input": "The data file is considered known.",
        "output": "variable simname index 4040CNT_20nm\nvariable          t   equal 300\nlog       log.${simname}.txt\nunits             metal\nboundary    s s p\ntimestep     0.001 #1fs\natom_style        atomic\n\n### Structure ###\nread_data         ${simname}.data  \nregion      lfixed      block INF INF INF INF INF 5\nregion      rfixed      block INF INF INF INF 193 INF\nregion      rvdos      block INF INF INF INF 80  120\ngroup      glfixed     region lfixed\ngroup           grfixed     region rfixed\ngroup      gfixed      union  glfixed grfixed\ngroup      gvdos      region rvdos\nregion      tlow        block INF INF INF INF 5 15 \nregion      thigh       block INF INF INF INF 183 193\ngroup      gthigh       region thigh         \ngroup      gtlow       region tlow\ngroup      innt        subtract all gfixed \ngroup      innernt     subtract all gfixed gthigh gtlow\n\n### Potentials ###\nmass              1  12.01\npair_style        tersoff \npair_coeff        * * BNC.tersoff C \n\n### Output Setting ###\ncompute           hot_temp    gthigh    temp \ncompute           cold_temp   gtlow     temp \ncompute        innt_temp  innt    temp\ncompute           innernt_temp   innernt   temp \nthermo            1000\nthermo_style     custom step temp  lz pzz etotal \ndump              1 all atom 1000 ${simname}.lammpstrj\n\n### 1st equilibration run###\nfix      1 all box/relax z 0.0\nmin_style     cg \nminimize     1e-25 1e-25 50000 100000\nunfix      1\nvelocity          all create ${t} 12345 mom yes rot no\nfix      NPT1  all npt temp 300 300 0.1 z 0 0 1.0\nrun      10000\nunfix      NPT1\nfix      NVE1  all nve\nfix               Temp1 all langevin 300 300 0.1 287859 tally yes\nrun      100000\nunfix      NVE1\nunfix      Temp1\n\n### 2st equilibration run###\nthermo_style     custom step c_innt_temp  lz pzz etotal \nchange_box    all boundary s s f\nvelocity    gfixed  set 0.0  0.0 0.0  \nfix      fixed1  gfixed setforce 0.0 0.0 0.0\nfix         NVE2    innt nve\nfix                    Temp2   innt langevin 300 300 0.1 287859 tally yes\nrun      100000\ndump          2 gvdos custom 1 ${simname}_voutput_all.lammpstrj id type vx vy vz\nrun      5000\nundump      2\nunfix      NVE2\nunfix      Temp2\n\n### thermal conductivity calculation ###\nreset_timestep 0\nfix         NVE3   innt nve\nfix               hot1   gthigh langevin 325 325 0.1 59804 tally yes\nfix               cold1  gtlow  langevin 275 275 0.1 287859 tally yes\ncompute     KE   all ke/atom \nvariable     KB   equal 8.625e-5 \nvariable     TEMP atom c_KE/1.5/${KB} \ncompute     BLOCKS1    all chunk/atom bin/1d z lower 0.025 units reduced\nfix       T_PROFILE1 all ave/chunk 10 10000 100000 BLOCKS1 v_TEMP file temp.${simname}.txt\nthermo_style    custom   step c_innernt_temp  c_hot_temp c_cold_temp f_hot1 f_cold1 etotal\nrun        1500000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Provide a simple example of LAMMPS simulation to calculate the cohesion energy and lattice constant.",
        "input": "",
        "output": "# Simulation Setup\nclear \n# Clear all memory allocated to LAMMPS from previous runs\nunits metal \n# Use the metal unit system\ndimension 3 \n# 3-dimensional system\nboundary p p p\n# Periodic boundary conditions in x, y, and z directions \natom_style atomic \n# The system contains only atoms\n\n# Define Simulation Box and Create Atoms  \nlattice fcc 4\n# Define the lattice constant and type (i.e., define the atomic arrangement rules)\nvariable cubelength equal 2\n# Define the variable 'cubelength' to be equal to 2\nregion  box block 0 ${cubelength} 0 ${cubelength} 0 ${cubelength} units lattice\n# Define a rectangular box region\ncreate_box 1 box \n# Create a box with only one type of atom\ncreate_atoms 1 box\n# Fill the box with atoms according to the defined atomic arrangement rules\n\n# Define Interatomic Potential\npair_style eam/alloy \n# Define the type of interatomic potential\npair_coeff * * Cu01.eam.alloy Cu\n# Provide the corresponding potential file\n\n# Define Run Setting \nfix volumerelax all box/relax iso 0\n# Allow the box shape to change during energy minimization\nthermo 10\n# Output thermodynamic information every 10 steps \nthermo_style custom step pe lx ly lz vol pxx pyy pzz press atoms\n# Define the thermodynamic information to be output\n\n# Run Minimization\nmin_style cg\n# Use the conjugate gradient method\nminimize 1e-10 1e-10 10000 20000 \n# Perform energy minimization\n\n# Gather and Print Outputs\nvariable length equal \"lx/v_cubelength\"\n# Define the variable 'length' to be equal to the optimized box length in the x direction (lx) divided by the previously defined 'cubelength' variable\nvariable engcoh equal \"pe/atoms\"\n# Define the variable 'engcoh' to be equal to the total potential energy (pe) divided by the total number of atoms (atoms)\n\nprint \" \"\n# Output a blank line\nprint \"Simulation Summary\" \n# Output \"Simulation Summary\"\nprint \"Lattice parameter (Angstoms) = ${length}\"\n# Output \"Lattice parameter (Angstoms) =\" followed by the value of variable 'length'\nprint \"Cohesive energy (eV) = ${engcoh}\"\n# Output \"Cohesive energy (eV) =\" followed by the value of variable 'engcoh'",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the variation of depth and force in the z-direction of the indenter during the nanoindentation process of Cu using LAMMPS.",
        "input": "",
        "output": "# Initial Simulation System Settings\nunits         metal\nboundary      p p s\natom_style    atomic\n\n# Build Model\nlattice       fcc 3.615\nregion        box block 0 10 0 10 0 15\ncreate_box    1 box\ncreate_atoms  1 box\nregion        bot block INF INF INF INF INF 2\ngroup         bot region bot\ngroup         out subtract all bot\n\n# Define Interatomic Potential\npair_style     eam/alloy\npair_coeff     * * Cu01.eam.alloy Cu\n# Potential files are available in the LAMMPS potential folder; you can use any for testing.\n# Define Calculation Information\ncompute    1 out temp\n\n# Define Output Information\nthermo    100\nthermo_style  custom step temp\nthermo_modify  temp 1\ndump      1 all custom 1000 Cu.xyz id type x y z\n\n# Environment One: Equilibrium Relaxation\nvelocity   out create 300 666\nfix        b bot setforce 0 0 0 \nfix        1 out nvt temp 300 300 0.05\n\n# Run\ntimestep    0.001\nrun         10000\nreset_timestep 0\n\n# Environment Two: Indentation Process\nvariable    z equal \"60-0.1*step*dt\"\nvariable    z2 equal 0.1*step*dt\n# Define variable z2 as the indentation depth\nfix         2 all indent 100 sphere 18.075 18.075 v_z 5 units box\nvariable    f equal f_2[3]*1.602*1.0e-9\n# Define variable as the force on the indenter in the z direction; f_2[3] is the force on the indenter in the z direction; f_2[3]*1.602*1.0e-9 converts the force to Newtons based on the units command\nfix         3 all print 100 \"${z2}  ${f}\" file dat screen no\n# Define output of depth and force on the indenter in the z direction during the simulation\nrun         100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Perform XRD analysis on the TiNi atomic model before and after phase transition using LAMMPS.",
        "input": "",
        "output": "units metal\n\nboundary p p p\n\natom_style atomic\n\nread_data tini.lmp\n\npair_style meam/c\n\npair_coeff * * library.meam Ni Ti NiTi.meam Ti Ni\n\nneighbor 0.3 bin\n\nneigh_modify delay 10\n\nreset_timestep 0\n\ntimestep 0.001\n\nvelocity all create 200 12345 mom yes rot no\n\ncompute 1 all xrd 1.841838 Ti Ni 2Theta 10 100 c 0.01 0.01 0.01 LP 1 echo manual\n\nfix 1 all ave/histo/weight 1 1 1 10 100 250 c_1[1] c_1[2] mode vector file Rad2Theta.xrd\n\nrun 0",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate thermal conductivity using Non-Equilibrium Molecular Dynamics (NEMD) in LAMMPS.",
        "input": "The principle of calculating thermal conductivity under non-equilibrium conditions is to set up heat sources and sinks at the ends or in the middle of the material. Heat is input at the heat source and an equal amount of heat is extracted at the sink. During this process, heat is transferred within the material, creating a temperature gradient. In LAMMPS simulations, the energy flux and temperature gradient are obtained, and the thermal conductivity can be calculated by substituting these values into the formula.",
        "output": "# Simulation system dimensions in the x, y, and z directions\nvariable  x equal 10\nvariable  y equal 10\nvariable  z equal 20\n# Lattice\nvariable  rho equal 0.6\n# Temperature\nvariable        t equal 1.35\n# Cutoff radius\nvariable  rc equal 2.5\n# Model parameters, in Lennard-Jones (LJ) units\nunits    lj\natom_style  atomic\n# Create box and fill with atoms\nlattice    fcc ${rho}\nregion    box block 0 $x 0 $y 0 $z\ncreate_box  1 box\ncreate_atoms  1 box\nmass    1 1.0\n# Initialize temperature\nvelocity  all create $t 87287\n# Force field parameter settings, Lennard-Jones (LJ) potential\npair_style  lj/cut ${rc}\npair_coeff  1 1 1.0 1.0\n# Neighbor list definition\nneighbor  0.3 bin\nneigh_modify  delay 0 every 1\n# Define hot and cold regions\nregion          hot block INF INF INF INF 0 1\nregion          cold block  INF INF INF INF 10 11\n# Calculate temperatures in hot and cold regions\ncompute         Thot all temp/region hot\ncompute         Tcold all temp/region cold\n# Equilibrium simulation under NVT ensemble\nfix             1 all nvt temp $t $t 0.5\nthermo          100\nrun             1000\n# Adjust temperature to the set temperature\nvelocity  all scale $t\nunfix    1\n# Set NVE ensemble\nfix    1 all nve\n# Continuously input heat at the heat source\nfix             hot all heat 1 100.0 region hot\n# Continuously extract heat at the cold source\nfix             cold all heat 1 -100.0 region cold\n# Set thermodynamic parameter output\nthermo_style    custom step temp c_Thot c_Tcold\nthermo          1000\n# Run for 10,000 steps\nrun             10000\n# Calculate atomic kinetic energy\ncompute    ke all ke/atom\n# Calculate atomic temperature based on atomic kinetic energy\nvariable  temp atom c_ke/1.5\n# Divide atoms into different chunks along the z direction\ncompute         layers all chunk/atom bin/1d z lower 0.05 units reduced\n# Calculate the temperature of atoms within the chunk\nfix    2 all ave/chunk 10 100 1000 layers v_temp file profile.heat\n# Calculate the temperature difference\nvariable        tdiff equal f_2[11][3]-f_2[1][3]\n# Calculate the average temperature difference\nfix             ave all ave/time 1 1 1000 v_tdiff ave running start 13000\n# Output the average temperature difference\nthermo_style    custom step temp c_Thot c_Tcold v_tdiff f_ave\n# Run for 20,000 steps\nrun             20000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the thermal conductivity of graphene using Equilibrium Molecular Dynamics (EMD) in LAMMPS.",
        "input": "The gp.data graphene model file is considered known. To calculate the thermal conductivity under equilibrium conditions, the main calculation formula is the Green-Kubo relation. The main command used is compute heat/flux.",
        "output": "# Model parameter settings\nunits metal\ndimension 3\nboundary p p p\natom_style atomic\nneighbor 0.3 bin\nneigh_modify delay 10\ntimestep 0.001\n# Read graphene model file\nread_data gp.data\nmass 1 12.0107 \n# Use Tersoff potential\npair_style tersoff\npair_coeff * * SiC.tersoff C\n# Thermodynamic output\nthermo 10000\nthermo_style custom step temp vol press\n# Temperature initialization\nvelocity all create 300 98989 dist gaussian\nfix 1 all npt temp 300 300  0.1 x 0 0 1 y 0 0 1 \nrun 50000\nunfix 1\nreset_timestep 0\n# Data needed for Green-Kubo formula\nvariable A equal lx*ly*1.54      \nvariable dt equal 0.001          \nvariable cor equal 10000        \nvariable sam equal 10            \nvariable dum equal ${cor}*${sam}\n# Unit conversion formulas\nvariable kB equal 8.6173324e-5  # eV/K Boltzmann constant\nvariable ev2J equal 1.60210e-19 # eV to J/mol\nvariable A2m equal 1.0e-10      # Angstrom to meter\nvariable ps2s equal 1.0e-12     # picoseconds to seconds\nvariable convert equal ${ev2J}/(${A2m}*${ps2s})\n# Calculate heat flux\ncompute myKE all ke/atom\ncompute myPE all pe/atom\ncompute myStress all stress/atom NULL virial\ncompute flux all heat/flux myKE myPE myStress\n# Save heat flux in three directions\nvariable Jx equal c_flux[1]\nvariable Jy equal c_flux[2]\nvariable Jz equal c_flux[3]\nfix JJ all ave/correlate ${sam} ${cor} ${dum} c_flux[1] c_flux[2] c_flux[3] type auto file SLG_J.J_t${temp_s}.dat ave running\n# Calculate Green-Kubo formula coefficient\nvariable   scale equal (${dt}*${sam})/(${kB}*${temp_s}^2*$A)\n# Calculate Green-Kubo formula\nvariable k11 equal (trap(f_JJ[3])*${scale})*${convert}\nvariable k22 equal (trap(f_JJ[4])*${scale})*${convert}\nvariable k33 equal (trap(f_JJ[5])*${scale})*${convert}\nvariable k_total equal (v_k11+v_k22+v_k33)/3.0\n#fix Ph all phonon 10 10000 0 GAMMA SLG nasr 100 \n# Start computation\nthermo 100000\nthermo_style custom step temp press v_k11 v_k22 v_k33 v_k_total\nfix 1 all nve \nrun 1000000\n# Output thermal conductivity\nprint \"***************************************************** \"\nprint \" k11 conductivity : ${k11} [W/mK] @ ${temp_s} K\"\nprint \" k22 conductivity : ${k22} [W/mK] @ ${temp_s} K\"\nprint \" k33 conductivity : ${k33} [W/mK] @ ${temp_s} K\"\nprint \" 3D average conductivity: ${k_total} [W/mK] @ ${temp_s} K\"\nprint \"*****************************************************\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the uniaxial stretching process of graphene using the velocity command in LAMMPS.",
        "input": "The velocity method usually fixes one end of the graphene and gives the other end a fixed velocity v, driving the motion of the remaining atoms by this end.",
        "output": "# Model initialization, simulation unit is metal, atomic style is atomic, 3D model\n\nunits  metal\n\natom_style   atomic\n\ndimension  3\n\n# Define boundary conditions, periodic boundaries in x and y directions, y is the stretching direction, fixed boundary in z direction\n\nboundary     p s p\n\n# Define the neighbor atom list, the neighbor list of 1 atom is the list of atoms within a circle centered on the atom with a radius of the force cutoff radius + buffer value (which is set to 0.3 below)\n\nneighbor      0.3 bin\n\n# Set the simulation timestep to 1fs\n\ntimestep        0.001\n\n# Generate a simulation box, the box contains 3 types of atoms, all of which are carbon atoms, for later online coloring convenience, the atom types are divided into upper, middle, and lower\n\nregion   box block 0 175 0 175 -5 5 units box\n\ncreate_box 3 box\n\n# Define graphene lattice parameters\n\nlattice  custom 2.4768 a1 1.0 0.0 0.0 &\n\na2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 & \n\nbasis 0.0 0.33333 0.0 & \n\nbasis 0.0 0.66667 0.0 &\n\nbasis 0.5 0.16667 0.0 &\n\nbasis 0.5 0.83333 0.0\n\n# Generate graphene atoms, type 1\n\nregion  gp block 10 120 10 120 -0.5 0.5 units box\n\ncreate_atoms 1 region gp\n\n# Set atomic masses\n\nmass * 12\n\n# Define regions, upper and lower fixed regions, and the middle mobile region\n\nregion upper block INF INF 117 INF INF INF  units box\n\nregion lower block INF INF INF 13 INF INF units box\n\ngroup upper region upper\n\ngroup lower region lower\n\ngroup boundary union upper lower\n\ngroup mobile subtract all boundary\n\n# The defined regions are shown in the figure below:\n\n# Set the topmost atoms to type 2, and the bottommost atoms to type 3, for later coloring convenience\n\nset group upper type 2\n\nset group lower type 3\n\n# Set the potential function, airebo is commonly used for graphene simulation\n\npair_style  airebo 2.0\n\npair_coeff  * * CH.airebo C C C\n\n# Initialize temperature\n\nvelocity mobile create 300.0 8877528\n\n# Fix the top and bottom end atoms\n\nfix  1 boundary setforce 0.0 0.0 0.0\n\n# The following four lines of code relax the model under NPT conditions and save the results to a file\n\nthermo 100\n\nfix  2 all npt temp 300.0 300.0 1 x 0 0 0.1 z 0 0 0.1\n\ndump 1 all atom 100 gp_relax.lammpstrj\n\nrun 1000\n\n# Cancel fix, dump settings, reset timestep to zero\n\nunfix   2\n\nundump 1\n\nreset_timestep 0\n\n# Set the top end with a velocity of 1 in the y direction, stretching along the y direction\n\nvelocity upper set 0.0 1.0 0.0\n\n# Set the velocity of the mobile part proportionally\n\nvelocity mobile ramp vy 0.0 1.0 y 8 52 sum yes\n\n# Perform stretching under NVT\n\nfix  2 all nvt temp 300.0 300.0 0.01\n\n# Output thermodynamics, save stretched atom coordinates\n\nthermo 1000\n\nthermo_modify lost ignore\n\ndump  1 all atom 1000 gp_tension.lammpstrj\n\nrun  10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the uniaxial stretching process of graphene using the deform command in LAMMPS.",
        "input": "The deform method stretches the box at a certain rate. During this process, the coordinates of the graphene atoms change with the elongation of the box, thus achieving overall stretching.",
        "output": "# Basic parameters\nunits                metal\ndimension            3\nboundary            p p p\nneighbor            0.3 bin\nneigh_modify        delay 0\ntimestep            0.001\n\n# Modeling\nregion                box block 0 50 0 50 -5 5 units box\ncreate_box            3 box\nlattice custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\nbasis 0.0 0.33333 0.0 &\nbasis 0.0 0.66667 0.0 &\nbasis 0.5 0.16667 0.0 &\nbasis 0.5 0.83333 0.0\nregion                graphene block 0 50 0 50 -1 2 units box\ncreate_atoms        1 region graphene\nmass                * 12\nregion                left block INF 4 INF INF INF INF units box\ngroup                left region left\nregion                right block 46 INF INF INF INF INF units box\ngroup                right region right\ngroup                boundary union left right\ngroup                mobile subtract all boundary\nset                    group left type 2\nset                    group right type 3\n\n# Potential function settings\npair_style            airebo 3.0 0 0\npair_coeff             * * CH.airebo C C C\n\n# Energy minimization\nmin_style             cg\nminimize            1e-10 1e-10 5000 5000\n\n# Temperature initialization\nvelocity mobile create 300 4928459 dist gaussian units box\nvelocity left set 0.0 0.0 0.0 units box\nvelocity right set 0.0 0.0 0.0 units box\n\n# Calculation settings\ncompute    1 all stress/atom NULL\ncompute    2 all reduce sum c_1[1] c_1[2]\nvariable   CorVol equal ly*lx*3.35\nvariable   sigmaxx equal c_2[1]/(v_CorVol*10000)\nvariable px equal -pxx/10000\n# Strain\nvariable l_x equal lx\nvariable lx0 equal ${l_x}\nvariable strain equal (lx-v_lx0)/v_lx0\n\n# Structural relaxation\nfix                    1 boundary setforce 0 0 0\nfix                    2 all npt temp 300 300 0.01 iso 0 0 0.1\nthermo                1000\nthermo_modify       lost ignore\ndump                1 all atom 1000 relax.lammpstrj\nrun                    10000\nunfix                2\nundump                1\nreset_timestep        0\n\n# Stretching settings\nthermo_style custom step press v_strain v_px v_sigmaxx temp lx ly lz vol\nthermo                100\nfix                    2 all nvt temp 300 300 0.01\nfix                    3 all deform 200 x erate 0.05 remap x\ndump                1 all atom 500 algp.lammpstrj\nrun                 10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the sintering process of Al/Graphene composites in LAMMPS.",
        "input": "Three potential functions need to be set up:\n(1)Use the eam/fs potential to describe the interactions between Al atoms.\n(2)Use the airebo potential to describe the interactions between C atoms in graphene.\n(3)Use the lj/cut potential to describe the interactions between Al and C atoms.",
        "output": "# Basic settings\nunits                metal\ndimension            3\nboundary            p p p\nneighbor            0.3 bin\nneigh_modify        delay 0\ntimestep            0.001\n\n# Structural modeling\nregion                box block 0 80 0 80 0 80 units box\ncreate_box            2 box\n\n# Aluminum spheres\nlattice                fcc 4.05\nregion                 al1 sphere 20 20 20 16 units box\ncreate_atoms        1 region al1\n\nregion                 al2 sphere 53 20 20 16 units box\ncreate_atoms        1 region al2\n\nregion                 al3 sphere 20 53 20 16 units box\ncreate_atoms        1 region al3\n\nregion                 al4 sphere 53 53 20 16 units box\ncreate_atoms        1 region al4\n\nregion                 al5 sphere 20 20 57 16 units box\ncreate_atoms        1 region al5\n\nregion                 al6 sphere 53 20 57 16 units box\ncreate_atoms        1 region al6\n\nregion                 al7 sphere 20 53 57 16 units box\ncreate_atoms        1 region al7\n\nregion                 al8 sphere 53 53 57 16 units box\ncreate_atoms        1 region al8\n\n# Graphene\nlattice custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\nbasis 0.0 0.33333 0.0 &\nbasis 0.0 0.66667 0.0 &\nbasis 0.5 0.16667 0.0 &\nbasis 0.5 0.83333 0.0\n\nregion                 graphene block 5 68 5 68 37 40 units box\ncreate_atoms          2 region graphene\n\n# Atomic molar masses\nmass                1 27\nmass                2 12\n\n# Mixed potential function settings\npair_style            hybrid lj/cut 10 eam/fs airebo 3.0\npair_coeff            * * eam/fs Al_mm.eam.fs Al NULL\npair_coeff             * * airebo CH.airebo NULL C\npair_coeff             1 2 lj/cut 0.023 2.852\n\n# Thermodynamic output\nthermo                100\n\n# Energy minimization\nmin_style             cg\nminimize            1e-15 1e-15 5000 5000\n\n# Relaxation under NPT ensemble\nvelocity           all create 300 873421\n\nfix                1 all npt temp 300 300 0.01 iso 0 0 0.1\nrun                10000\nthermo_modify      lost ignore\nunfix              1\n\n# Sintering under NVT\nfix                1 all nvt temp 300 1000 0.01\ndump               1 all atom 2000 algp_heat.lammpstrj\nrun                20000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate crack propagation under tension in SiC using LAMMPS.",
        "input": "In the initial SiC model, delete some atoms in the middle position to simulate an initial crack.",
        "output": "# Model settings\nunits           metal \nboundary        p p s\natom_style      atomic\nneighbor        1.0 bin\nneigh_modify    delay 1 every 1 check yes\ntimestep        0.001\n\n# SiC modeling\nlattice         custom 4.32 a1 1.0 0.0 0.0 a2 0.0 1.0 0.0 a3 0.0 0.0 1.0 &\n        basis 0.0 0.0 0.0 &\n        basis 0.5 0.5 0.0 &\n        basis 0.5 0.0 0.5 &\n        basis 0.0 0.5 0.5 &\n        basis 0.25 0.25 0.25 &\n        basis 0.75 0.75 0.25 &\n        basis 0.75 0.25 0.75 &\n        basis 0.25 0.75 0.75 \n\nregion          box block 0 5 0 10 0 10 \ncreate_box       2 box   \n\ncreate_atoms     2 region box & \n        basis 1 2 &\n        basis 2 2 &\n        basis 3 2 &\n        basis 4 2 &\n        basis 5 1 &\n        basis 6 1 &\n        basis 7 1 &\n        basis 8 1 \n        \n# Set atomic masses \nmass            1  12.01\nmass            2  28.09\n\n# Set crack\nregion          crack block INF INF INF 6  20 23 units box\ndelete_atoms    region crack\n\n# Atom grouping\n\nregion          1 block INF INF INF INF INF 4  units box\ngroup           lower region 1\nregion          2 block INF INF INF INF 40 INF  units box\ngroup           upper region 2\ngroup           boundary union lower upper\ngroup           mobile subtract all boundary\n\n# Potential function settings\npair_style      tersoff\npair_coeff      * * SiC.tersoff C Si\n\n# Energy minimization\nmin_style       cg\nminimize       1e-15 1e-15 5000 5000\n\n# Initialize velocities\nvelocity        mobile create 100 123456\nthermo          100\n\n# Fix settings\nfix             1 all nvt temp 300.0 300.0 1.0 \nfix             2 boundary setforce 0.0 0.0 0.0\n\n# Stretching settings\nvelocity        upper set 0.0 0.0 0.05  units box\nvelocity        mobile ramp vz 0.0 0.05 z 4 40 sum yes  units box\n# Coordinate output\ndump            1 all atom 1000 deform.xyz\n\nrun             50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the stretching process of polyethylene using LAMMPS.",
        "input": "The pp.data polyethylene model file is considered known.",
        "output": "# Polyethylene stretching\n# Model initialization\nunits    real\nboundary  p p p\natom_style  full\n\n# Set bond potential type\nbond_style      harmonic\n# Set angle potential type\nangle_style     harmonic\n# Set dihedral potential type\ndihedral_style  harmonic\n# Set pair potential type\npair_style  lj/cut 10.5\n\n# Read polyethylene structure data\nread_data  pp.data\n\n# Set neighbor parameters\nneighbor  0.4 bin\nneigh_modify  every 10 one 10000\n\n# NVE ensemble relaxation\ndump 1 all custom 100 nve.xyz id type x y z vx vy vz\n# Temperature initialization\nvelocity   all create 300.0 1231\n# Set NVE ensemble\nfix    1 all nve\n# Thermodynamic output\nthermo_style  custom step temp press\nthermo          100\nrun    1000\n# Cancel fix, dump settings\nunfix 1\nundump 1\n\n# NPT ensemble relaxation \nfix    1 all npt temp 300 300 50 iso 0 0 1000 drag 2\n# Dump output settings\ndump 1 all custom 100 npt.xyz id type x y z vx vy vz\n# Thermodynamic output\nthermo_style  custom step temp press epair ebond eangle edihed pxx pyy pzz lx ly lz\nthermo          10\n# Reset simulation timestep\ntimestep  0.5\n# Initialize step count\nreset_timestep   0\n# Run for 50,000 steps\nrun    50000\n# Cancel settings\nunfix 1\nundump  1\n\n# Stretching under NPT ensemble\n# Calculate strain value\nvariable tmp equal \"lx\"\nvariable L0 equal ${tmp}\nvariable strain equal \"(lx - v_L0)/v_L0\"\n# Dump output\ndump 1 all custom 1000 dump.pp id type x y z vx vy vz\n# Set NPT ensemble\nfix    1 all npt temp 100 100 50 y 0 0 1000 z 0 0 1000 drag 2\n# Deform stretching, x direction\nfix    2 all deform 1 x erate 1e-5 units box remap x\n# Thermodynamic output\nthermo_style  custom step temp v_strain pxx pyy pzz lx ly lz epair ebond eangle edihed\nthermo          100\nreset_timestep  0\n# Start simulation, 200,000 steps\nrun    200000\nunfix 1\nunfix 2\nundump 1",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate bond-breaking stretching in polymers using LAMMPS.",
        "input": "The pe.data model file is considered known. To simulate the bond breaking during the stretching process, an additional command is needed: fix bond/break. This command can set to check the bond length every N steps, and if the bond length exceeds a set limit, the bond is considered broken. If the bond breaking conditions are met, the bond connection information is deleted throughout the system.",
        "output": "units    real\nboundary  s p p\natom_style  full \nneighbor  2 bin\nneigh_modify  every 1 \ntimestep 0.1\n\nbond_style      harmonic\nangle_style     harmonic\ndihedral_style  harmonic\npair_style  lj/cut/coul/cut 12\n\nread_data  pe.data\n\nregion left block INF -5 INF INF INF INF units box\nregion right block 36 INF INF INF INF INF units box\ngroup left region left\ngroup right region right\ngroup mobile subtract all left right\n\nvelocity mobile create 100 9891\n\ndump 1 all atom 10 dump.xyz\nfix 01 left setforce 0 0 0\nfix 2 mobile nvt temp 100 100 10\nfix 3 right move linear 0.01 0 0 units box\nfix 4 all bond/break 10 4 1.6\n\nthermo_style custom step f_4[1] f_4[2]\nthermo 1\nrun 10000\nwrite_data  pe2.data",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the shear process of polyethylene (PE) using LAMMPS.",
        "input": "The PE.data model file is considered known. Apply a velocity in a certain direction to the top of the model to achieve shear motion of the material.",
        "output": "# Shear simulation of polyethylene\n\n# Model initialization\nunits           real\nboundary        p p p\natom_style  molecular\nneighbor        0.4 bin\nneigh_modify    every 10 one 10000\n\n# Read data file\nread_data       PE.data\n\n# Potential function parameters\n\nbond_style      harmonic\nbond_coeff      1 350 1.53\nangle_style     harmonic\nangle_coeff     1 60 109.5\ndihedral_style  multi/harmonic\ndihedral_coeff  1 1.73 -4.49 0.776 6.99 0.0\npair_style      lj/cut 10.5\npair_coeff      1 1 0.112 4.01 10.5\n\n# Temperature initialization\nvelocity        all create 500.0 1231\n\n# Relaxation under NPT\nfix             1 all npt temp 500.0 500.0 50 iso 0 0 1000 drag 2\nfix             2 all momentum 1 linear 1 1 1\ndump       1 all custom 5000 npt1.xyz id type x y z\nthermo_style    custom step temp press\nthermo          100\ntimestep        0.5\nreset_timestep  0\nrun             50000\nunfix           1\nunfix           2\nundump      1\n\n# Cooling under NPT\nfix             1 all npt temp 500 200 50 iso 0 0 1000 drag 2\nfix             2 all momentum 1 linear 1 1 1\ndump       1 all custom 5000 npt2.xyz id type x y z\nthermo_style    custom step temp press\nthermo          10\ntimestep        0.5\nreset_timestep  0\nrun             50000\nunfix           1\nunfix           2\nundump      1\n\n# Relaxation under NPT\nfix             1 all npt temp 200 200 50 iso 0 0 1000 drag 2\nfix             2 all momentum 1 linear 1 1 1\ndump       1 all custom 5000 npt3.xyz id type x y z\nthermo_style    custom step temp press epair ebond eangle edihed pxx pyy pzz lx ly lz\nthermo          10\ntimestep        0.5\nreset_timestep  0\nrun             50000\nunfix           1\nunfix           2\nundump      1\n\n# Shear\nchange_box    triclinic\nfix        1 all nvt/sllod temp 200 200 1\nfix             2 all deform 1 xy erate 0.02 units box remap v\ndump          1 all custom 1000 shear.xyz id type x y z\ntimestep        0.01\nreset_timestep  0\nrun            50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate dislocation slip during the shearing process of Ni using LAMMPS.",
        "input": "The Ni.lmp model data is considered known. The simulation process is as follows:\n(1)Modeling: According to the LAMMPS tutorial, the method of Atomsk modeling for edge dislocations is introduced to generate an edge dislocation in Ni, and the model data file is saved as Ni.lmp.\n(2)Read the data file and set the upper and lower fixed boundaries.\n(3)After the dislocation is generated by the Atomsk software, the energy of the system is relatively large, and energy minimization is needed.\n(4)After energy minimization, temperature initialization is performed.\n(5)Use the velocity command to perform the shear.",
        "output": "# 3d metal shear simulation\n\nunits                  metal \ndimension              3\nboundary               s p p\natom_style             atomic \ntimestep          0.001\nread_data         Ni.lmp\n# Define Interatomic Potential\npair_style       eam\npair_coeff       * * Ni.eam\n\nregion        lower block INF INF INF 10 INF INF units box\nregion        upper block INF INF 100 INF INF INF units box\ngroup        lower region lower\ngroup        upper region upper\ngroup        boundary union lower upper\ngroup        mobile subtract all boundary\n\n\nmin_style       cg\nminimize        1e-15 1e-15 10000 10000\nreset_timestep    0\n\n\ncompute        new3d mobile temp\ncompute        new2d mobile temp/partial 0 1 1\n\n# equilibrate\n\nvelocity    mobile create 300.0 5812775 temp new3d\n\nfix        1 all nve\nfix        2 boundary setforce 0 0 0\nfix        3 mobile temp/rescale 10 300 300 10 1.0\nfix_modify    3 temp new3d\nrun        5000\nreset_timestep    0\n\n# shear\nvelocity    upper set 2 0 0 units box\nvelocity    mobile ramp vx 0.0 2 y 10 100 sum yes units box\n\nfix        3 mobile temp/rescale 10 300 300 10 1\nfix_modify    3 temp new2d\n\ndump        1 all atom 50 dump.shear.xyz\nrun       10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the triaxial stretching process of single-crystal Fe using LAMMPS.",
        "input": "",
        "output": "# Model settings\nunits        metal\natom_style      atomic\nboundary      p p p\nneighbor      0.3 bin\ntimestep      0.001\n\n# Modeling\nlattice        bcc 2.8552\nregion        box block 0 20 0 20 0 20\ncreate_box      1 box\ncreate_atoms    1 box\n\nmass        1 56\n\n# Potential energy\npair_style      eam/fs\npair_coeff      * * Fe.eam.fs Fe\n\nmin_style      cg\nminimize      1e-15 1e-15 5000 5000\n\n# Velocity initialization\nvelocity      all create 300 876848 dist gaussian\n\n# NPT relaxation\nfix          1 all npt temp 300 300 0.5 iso 0 0 5\ndump        1 all custom 1000 Fe_npt.xyz id type x y z\nrun          30000\nunfix        1\nundump       1\n\n# Stress-strain settings\nvariable       tmpx equal \"lx\"\nvariable           tmpy equal \"ly\"\nvariable           tmpz equal \"lz\"\n\nvariable        Lx0 equal ${tmpx}\nvariable        Ly0 equal ${tmpy}\nvariable         Lz0 equal ${tmpz}\n\nvariable        strainx equal \"(lx - v_Lx0)/v_Lx0\"\nvariable        strainy equal \"(ly - v_Ly0)/v_Ly0\"\nvariable        strainz equal \"(lz - v_Lz0)/v_Lz0\"\n\nvariable        stressx equal \"-pxx/10000\"\nvariable        stressy equal \"-pyy/10000\"\nvariable        stressz equal \"-pzz/10000\"\n\n# Save stress-strain to file\nfix         def3 all print 100 \"${strainx} ${stressx} ${strainy} ${stressy} ${strainz} ${stressz}\" &\n          file stress-strain.dat screen no\n\n# Triaxial stretching\nfix          1 all nve\nfix          2 all temp/rescale 10 300 300 10 1.0\nfix          3 all deform 100 x erate 0.005 y erate 0.005 z erate 0.005 remap x units box\ndump        1 all custom 100 Fe_tension.xyz id type x y z\nrun         50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Perform nanoindentation simulation of Ni_Graphene composite materials using LAMMPS.",
        "input": "",
        "output": "# Model initial condition settings\nunits                metal\ndimension            3\nboundary            p p p\ntimestep             0.001\n\n# Create simulation box\nregion                box block 0 40 0 40 0 40 units box\ncreate_box            2 box\n\n# Generate Ni single crystal\nlattice               fcc 3.52\nregion                ni block 5 35 5 35 5 25 units box\ncreate_atoms          1 region ni\n\n# Delete a layer of Ni atoms\nregion                del block 0 25 0 25 18 20 units box\ndelete_atoms          region del compress yes\n\n# Custom graphene lattice\nlattice custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\nbasis 0.0 0.33333 0.0 &\nbasis 0.0 0.66667 0.0 &\nbasis 0.5 0.16667 0.0 &\nbasis 0.5 0.83333 0.0\n\n# Define graphene region, generate graphene\nregion                 graphene block 5 35 5 35 18 21 units box\ncreate_atoms        2 region graphene\n\n# Set atomic masses\nmass                1 58.7\nmass                2 12.0\n\n# Define atom groups for later use with fix commands\nregion               lower block 0 35 0 35 5 8 units box\ngroup                lower region lower\ngroup                mobile subtract all lower\n\npair_style hybrid lj/cut 10 eam/alloy airebo 3.0\npair_coeff * * eam/alloy Ni99.eam.alloy Ni NULL\npair_coeff * * airebo CH.airebo NULL C\npair_coeff 1 2 lj/cut 0.023 2.852\n\n# Define indenter position\nvariable   z equal \"30 - 1*elaplong*dt\"\nvelocity   mobile create 300 482748 temp new\nfix       1 lower setforce 0.0 0.0 0.0\nfix        2 all nvt temp 300 300 0.01\nfix        3 all indent 10.0 sphere 20 20 v_z 5.0 units box\n\n# Output trajectory\ndump       1 all atom 1000 ni.lammpstrj\nrun        10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the surface energy of Cu(111) using LAMMPS.",
        "input": "First, calculate the total potential energy E0 of the crystal in equilibrium, then cut the crystal in half from the middle to form two surfaces, move the crystal far enough apart, and calculate the total potential energy E1 of the system at this time. The surface energy E of the crystal is (E1-E0)/2A, where A is the surface area.",
        "output": "# Model basic settings\nunits     metal\nboundary   p p p\natom_style   atomic\ntimestep 0.005\nneighbor 0.6 bin\nneigh_modify every 5 delay 0 check yes\n\n# To calculate the surface energy of the Cu (111) surface, redefine the crystal orientation\nlattice   fcc 3.61 orient x 1 1 -2 orient y -1 1 0 orient z 1 1 1\nregion    box block 0 20 0 20 0 40\n\n# Generate box and Cu atoms\ncreate_box   1 box\ncreate_atoms 1 box\n\n# Potential function setting, using eam potential\npair_style eam/fs\npair_coeff * * Cu1.eam.fs Cu\n\n# Define upper and lower boundary regions\nregion boundary1 block INF INF INF INF 29.9 INF\nregion boundary2 block INF INF INF INF INF 9.9\ngroup boundary1 region boundary1\ngroup boundary2 region boundary2\ngroup boundary union boundary1 boundary2\n\n# Delete boundary atoms, equivalent to forming a vacuum layer at the top and bottom ends of Cu, eliminating the interaction forces between the upper and lower end faces\ndelete_atoms group boundary\n\n# Calculate potential energy and kinetic energy\ncompute 3 all pe/atom\ncompute 4 all ke/atom\n\n# Output settings\nthermo 50\ndump 1 all custom 100 dump.atom id xs ys zs c_3 c_4\n\n# Energy minimization\nmin_style sd\nminimize 1.0e-30 1.0e-15 10000 10000\n\n# After the system reaches equilibrium, output the potential energy E, i.e., E0\nvariable E equal pe\nprint \"---------------------- E0=$E----------------------\"\nrun 0\n\n# Define upper and lower regions, the purpose is to cut the crystal into upper and lower parts\nregion down block INF INF INF INF INF 19.94\nregion up block INF INF INF INF 19.95 INF\ngroup up region up\ngroup down region down\n\n# Here, different from the source file, the size of the box in the z direction is changed to 80, expanding by 1 time\nchange_box all z final 0 80 units lattice \n\n# Move the upper part of the atoms 40 lattices along the z-axis\ndisplace_atoms up move 0 0 40 units lattice\n\n# Perform the second energy minimization and output the new potential energy E1\nminimize 1.0e-30 1.0e-20 10000 100000\nprint \"---------------E1=$E--------------------\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the lattice constant of Fe using LAMMPS.",
        "input": "Set a set of lattice constants, use the jump command to run in sequence with different lattice constants, and calculate an energy value each time. After the run is completed, plot the curve of lattice constant and energy, and the lowest energy value corresponds to the lattice constant of Fe.",
        "output": "# Set the entry label for jump execution\nlabel lata\n# Set different values for the lattice constant a\nvariable a index 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.1 3.2\n# Model basic settings\nunits    metal                       \natom_style  atomic                      \nboundary        p p p                       \n# Create the box and fill atoms with the value of variable a\nlattice    bcc $a                      \nregion    box block 0 5 0 5 0 5      \ncreate_box  1 box                       \ncreate_atoms  1 box                      \nmass    1 55.85                       \n# Set the potential\npair_style eam/fs                          \npair_coeff * * Fe_mm.eam.fs Fe              \n# Set neighbor list parameters\nneighbor  0.3 bin                     \nneigh_modify  every 20 delay 0 check no\n# Output trajectory file\ndump myDump all atom 10000 dump.${a}\n# NVE ensemble\ntimestep 0.001\nfix    1 all nve                      \nthermo    500                           \nthermo_style custom step pe ke temp vol press \nrun  10000                          \n# Calculate the energy per atom = total potential energy / number of atoms\nvariable Ecoh equal pe/count(all)  \nprint \"Lattice parameter (A): $a\" \nprint \"Cohesive Energy (eV/atom):  ${Ecoh}\"\n# Clear the screen\nclear\n# Get the next value of a\nnext a\n# Jump back to the lata label in the in.Fe file to run again\njump in.Fe lata",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the formation energy of Cu interstitial atoms using LAMMPS.",
        "input": "Take Cu as an example, the simulation process for the formation energy of interstitial atoms is:\n(1)Generate Cu containing N atoms, perform energy minimization, and calculate the energy E0.\n(2)Randomly insert a C atom at a non-lattice point.\n(3)Perform energy minimization and calculate the energy Ef.\n(4)Use the formula to calculate the formation energy Ei of the interstitial atom.",
        "output": "# Model basic settings\nunits   metal\ndimension   3\nboundary    p  p    p      \natom_style  atomic\n# Modeling\nlattice fcc 3.615\nregion  box block -4 4 -4 4 -4 4\ncreate_box  2 box\nlattice fcc 3.615\ncreate_atoms    1 box\n# Force field parameter settings\npair_style  eam/alloy\npair_coeff * * FeCuNi.eam.alloy Cu Cu\n# Calculate potential energy\ncompute eng all pe/atom \ncompute eatoms all reduce sum c_eng\n# Set output\nthermo 10\nthermo_style custom step pe c_eatoms \n# Energy minimization\nmin_style cg\nminimize 1e-15 1e-15 5000 5000\n# Calculate the number of atoms\nvariable N equal count(all)\nvariable No equal $N\n# Calculate initial energy E0\nvariable E equal \"c_eatoms\"\nvariable Eo equal $E\n# Create interstitial atom\ncreate_atoms 2 single 0 -1.8075 0 units box\nwrite_data  cu.data\n# Set output\nthermo 10\nthermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms \n# Minimize energy again\nmin_style cg\nminimize 1e-15 1e-15 5000 5000\nwrite_data  cu2.data\n# Calculate the energy after inserting the interstitial atom Ef\nvariable Ef equal \"c_eatoms\"\n# Calculate the formation energy of the interstitial atom\nvariable Ei equal (${Ef}-((${No}+1)/${No})*${Eo})\n# Output the formation energy of the interstitial atom\nprint \"Interstitial formation energy = ${Ei}\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the formation energy of Cu vacancies using LAMMPS.",
        "input": "Suppose the system has a total of N atoms, and after deleting an atom, the total number of atoms is (N-1), and the vacancy formation energy is the energy Ef after deleting an atom minus the energy Ei of (N-1) atoms.",
        "output": "# Model basic settings\nvariable ao equal 3.615\nunits   metal\ndimension   3\nboundary    p  p    p      \natom_style  atomic\n# Modeling\nlattice fcc 3.615\nregion  box block -4 4 -4 4 -4 4\ncreate_box  2 box\nlattice fcc 3.615\ncreate_atoms    1 box\n# Force field parameter settings\npair_style  eam/alloy\npair_coeff * * FeCuNi.eam.alloy Cu Cu\n# Calculate potential energy\ncompute eng all pe/atom \ncompute eatoms all reduce sum c_eng\n# Set output\nthermo 10\nthermo_style custom step pe c_eatoms \n# Energy minimization\nmin_style cg\nminimize 1e-15 1e-15 5000 5000\nrun 0\n# Calculate the number of atoms\nvariable N equal count(all)\nvariable No equal $N\n# Calculate initial energy E0\nvariable E equal \"c_eatoms\"\nvariable Ei equal $E\n# Create a vacancy\nvariable r2 equal sqrt(${ao}^2+${ao}^2)/4\nregion select sphere 0 0 0 ${r2} units box\ndelete_atoms region select compress yes\nwrite_data  cu.data\n# Set output\nthermo 10\nthermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms \n# Minimize energy again\nmin_style cg\nminimize 1e-15 1e-15 5000 5000\nwrite_data  cu2.data\nrun 0\n# Calculate the energy after inserting a vacancy Ef\nvariable Ef equal \"c_eatoms\"\n# Calculate the formation energy of the vacancy\nvariable Ev equal (${Ef}-((${No}-1)/${No})*${Ei})\n# Output the formation energy of the vacancy\nprint \"Vacancy formation energy = ${Ev}\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the combustion process of hydrogen using the reactive potential reax in LAMMPS.",
        "input": "The H2_O2.data model file is considered known. Output the types and quantities of reactants every 100 steps, and save the data to the species.out file, which can be programmed to calculate the changes of reactants over time.",
        "output": "units       real\natom_style  charge\nread_data   H2_O2.data\n\npair_style  reax/c lmp_control\npair_coeff  * * ffield.reax.cho H O\nfix         q all qeq/reax 1 0.0 10.0 1e-6 param.qeq\nneighbor    2 bin\nneigh_modify    every 10 delay 0 check no\ntimestep    0.25\n\ndump        1 all atom 100 mini.xyz\nminimize    1e-8 1e-8 10000 10000\nundump      1\nreset_timestep  0\n\nvelocity    all create 1000 9898\nfix         2 all reax/c/species 1 100 100 species.out element H O\ndump        1 all atom 1000 nvt.xyz\nfix         1 all nvt temp 1000 1000 25\nrun         10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the high-temperature reaction process of Fe(OH)3 using the reaxff potential in LAMMPS.",
        "input": "The FeOH.data model file is considered known.",
        "output": "# Model basic settings\nunits           real\natom_style      full\nread_data       FeOH.data\nneighbor        2 bin\nneigh_modify    every 10 delay 0 check no\ntimestep        0.25\nthermo 100\n# Force field parameter settings\npair_style      reaxff lmp_control\npair_coeff      * * ffield.reax.Fe_O_C_H H O Fe\n# Ensemble temperature control\nfix             1 all nve\nfix             2 all qeq/reax 1 0.0 10.0 1e-6 param.qeq\nfix             3 all temp/berendsen 1000.0 1000.0 100.0\n# Product command\nfix     4 all reaxff/species 1 100 100 species.out element  H O Fe\n# Output trajectory file\ndump 1 all atom 100 dump.xyz\nrun             5000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the stacking fault energy of Ni using LAMMPS.",
        "input": "The stacking fault energy can be calculated by calculating the energy difference before and after the formation of the stacking fault, and the calculation formula is: (Ef-E0)/A. E0 is the initial energy, Ef is the energy after deleting an atomic plane, and A is the interface area.",
        "output": "# Model initial settings\nunits       metal\ndimension   3\nboundary    p p s\natom_style  atomic\nvariable latparam1 equal 3.52\nvariable x_displace equal -1*(${latparam1}/sqrt(6))\nvariable z_displace equal -1*(${latparam1}/sqrt(3))\nvariable xdim equal ${latparam1}*sqrt(6)/2*10\nvariable ydim equal ${latparam1}*sqrt(2)/2*10\n# Cohesive energy of Ni\nvariable Ecoh equal -4.45026\n# Lattice constant\nlattice     fcc ${latparam1}\n# Define three regions\nregion      1 block -.001 ${xdim} -.001 ${ydim} -.001 15.4839 units box\nregion      2 block -.001 ${xdim} -.001 ${ydim} 15.4839 17.5161 units box\nregion      3 block -.001 ${xdim} -.001 ${ydim} 17.5161 36.5808 units box\nregion      whole block 0 ${xdim} 0 ${ydim} 0 36.5808 units box\n# Create box\ncreate_box  3 whole\n# Set lattice orientation and fill atoms in three regions\nlattice fcc ${latparam1} orient x 1 1 2 orient y -1 1 0 orient z -1 -1 1\ncreate_atoms    1 region 1\nlattice fcc ${latparam1} orient x 1 1 2 orient y -1 1 0 orient z -1 -1 1\ncreate_atoms    2 region 2 \nlattice fcc ${latparam1} orient x 1 1 2 orient y -1 1 0 orient z -1 -1 1\ncreate_atoms    3 region 3 \n# Force field settings\npair_style  eam/alloy  \npair_coeff * * FeCuNi.eam.alloy Ni Ni Ni\n# Calculate potential energy\ncompute peratom all pe/atom\ncompute eatoms all reduce sum c_peratom\n# Set thermodynamic information output\nthermo 1\nthermo_style custom step pe c_eatoms\n# Atom trajectory output\ndump 1 all atom 1 dump.xyz\nrun 0\n# Calculate the number of atoms\nvariable N equal count(all)\n# Initial number of atoms\nvariable No equal $N\n# Initial energy\nvariable E equal \"c_eatoms\"\nvariable Eo equal $E\n# Group atoms\ngroup bot region 1\ngroup middle region 2\ngroup top region 3\n# Delete a layer of atoms\ndelete_atoms group middle\n# Record the current number of atoms\nvariable Nf equal $N\n# Upper layer atoms move down\ndisplace_atoms top move 0.0 0.0 ${z_displace} units box\n# Fix atoms in x and y directions\nfix 1 all setforce 0 0 NULL\n# Energy minimization\nmin_style cg\nminimize 1e-10 1e-10 1000 1000\n# Calculate the energy after deleting atoms\nvariable Ef equal \"c_eatoms\"\n# Interface area\nvariable A equal (${xdim}*${ydim})*1e-20\n# Unit conversion factor\nvariable Cf equal 1.60217657e-16\n# Energy of deleted atoms\nvariable Er equal (${No}-${Nf})*${Ecoh}\n# Calculate the stacking fault energy\nvariable SFE equal ((${Ef}-(${Eo}-${Er}))*${Cf})/${A}\n# Output simulation results\nprint \"The Stacking-fault energy = ${SFE} mJ/m^2\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of fluid flowing around obstacles using LAMMPS.",
        "input": "",
        "output": "dimension  2\nboundary  p s p\natom_style  atomic\nneighbor  0.3 bin\nneigh_modify  delay 5\n\nlattice    hex 0.7\nregion    box block 0 40 0 10 -0.25 0.25\ncreate_box  3 box\ncreate_atoms  1 box\n\npair_style  lj/cut 1.12246\npair_coeff  * * 1.0 1.0 1.12246\n\nregion      1 block INF INF INF 1.25 INF INF\ngroup    lower region 1\nregion    2 block INF INF 8.75 INF INF INF\ngroup    upper region 2\ngroup    boundary union lower upper\ngroup    flow subtract all boundary\n\nset    group lower type 2\nset    group upper type 3\n\ncompute      mobile flow temp\nvelocity  flow create 1.0 482748 temp mobile\n\nfix    1 all nve\nfix    2 flow temp/rescale 200 1.0 1.0 0.02 1.0\nfix_modify  2 temp mobile\n\nvelocity  boundary set 0.0 0.0 0.0\nfix    3 lower setforce 0.0 0.0 0.0\n\nfix    4 upper setforce 0.0 NULL 0.0\nfix    5 upper aveforce 0.0 -0.5 0.0\n\nfix    6 flow addforce 1.0 0.0 0.0\n\nregion    void1 sphere 10 4 0 3\ndelete_atoms  region void1\nregion    void2 sphere 20 7 0 3\ndelete_atoms  region void2\n\nfix    7 flow indent 100 sphere 10 4 0 4\nfix    8 flow indent 100 sphere 20 7 0 4\nfix    9 all enforce2d\n\ntimestep  0.003\nthermo    1000\nthermo_modify  temp mobile\ndump    1 all atom 100 dump.xyz\nrun    25000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the behavior of the CHO system under the reactive force field reax/c using LAMMPS.",
        "input": "",
        "output": "# REAX potential for CHO system\n# Set the simulation units\nunits    real\n# Atom style with charge\natom_style  charge\n# The reactive force field requires a smaller timestep, typically 0.1-0.5fs\ntimestep    0.25\n# Read the data file\nread_data  data.CHO\n# Set the force field to the reactive force field, with lmp_control as the control file\npair_style  reax/c lmp_control\n# The force field file is ffield.reax.cho, with three types of atoms being H, C, and O\npair_coeff  * * ffield.reax.cho H C O\n# Neighbor list definition\nneighbor  2 bin\nneigh_modify  every 10 delay 0 check no\n# NVE ensemble\nfix    1 all nve\n# Set charge equilibration, with param.qeq as the charge equilibration file\nfix       2 all qeq/reax 1 0.0 10.0 1e-6 param.qeq\n# Berendsen temperature control method, maintaining a temperature of 500K\nfix       3 all temp/berendsen 500.0 500.0 100.0\n# Save simulation results to dump.reax.cho\ndump    1 all atom 30 dump.reax.cho\n# Run for 3000 steps\nrun    3000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the stretching process of carbon nanotubes (CNTs) using LAMMPS.",
        "input": "The data.mysystem model file is considered known. Call the displace_atoms command in a loop to gradually move the fixed ends to achieve stretching.",
        "output": "# Variable settings, poro is the proportion of deleted atoms\nvariable    poro equal 0.03 \n# Random number seed, different random numbers obtain different states\nvariable    seed equal 15462\n# Initial temperature\nvariable    T equal 300 \n# Simulation timestep\nvariable    dt equal 0.0005  \n# Model basic settings\nunits       metal # required by airebo\natom_style  full\nboundary    p p p\n# AIREBO potential type\npair_style      airebo 2.5 1 1\n# Read model file\nread_data   data.mysystem\n# Change box size for stretching in the z direction\nchange_box  all z final -30 70 y final -20 20 x final -20 20\n# Potential function settings, map atom types to CCC\npair_coeff  * * ./CH.airebo C C C\n# Atom grouping\ngroup       CNT type 1\n# The bound function returns the z-dimension size of CNT\n# The following sizes are used to determine the boundary range of the fixed parts at both ends\nvariable    zmax equal bound(CNT,zmax)-10\nvariable    zmin equal bound(CNT,zmin)+10\nvariable    zmax0 equal bound(CNT,zmax)-20\nvariable    zmin0 equal bound(CNT,zmin)+20\n# Divide into 3 regions\nregion      top block INF INF INF INF ${zmax} INF\nregion      bot block INF INF INF INF INF ${zmin}\nregion      mob block INF INF INF INF ${zmin0} ${zmax0}\n# Group atoms in regions\ngroup       topgroup region top\ngroup       botgroup region bot\ngroup       mobile region mob\n# Set different atom types for the fixed ends for easy color display\nset         group topgroup type 2 # control group 1\nset         group botgroup type 3 # control group 2\n# Randomly delete 3% of atoms in the mob region to facilitate CNT breaking from defects\ndelete_atoms    porosity mob ${poro} ${seed} \n# NVE ensemble, Berendsen temperature control method\nfix     myber all temp/berendsen ${T} ${T} 0.1\nfix     mynve all nve\n# Output trajectory file\ndump        mydmp all atom 500 dump.eq.xyz\n# Simulation timestep\ntimestep    ${dt}\n# Thermodynamic output\nthermo      500\n# Relax for 5000 steps\nrun     5000 # \n# Remove global temperature control\nunfix       myber\nundump      mydmp\n# Re-set trajectory file output\ndump        mydmp all atom 1000 dump.run.xyz\n# Fix the z-direction force of the ends to 0, keep the original force in the xy direction\nfix         sf1 topgroup setforce NULL NULL 0.0 \nfix         sf2 botgroup setforce NULL NULL 0.0 \n# Set the z-direction velocity of the upper and lower parts to 0, fixing the CNT in the z direction\nvelocity    topgroup set NULL NULL 0  \nvelocity    botgroup set NULL NULL 0 \n# Calculate the temperature of the three parts, only calculate the two-dimensional xy directions\ncompute Ttop topgroup temp/partial 1 1 0 \ncompute Tbot botgroup temp/partial 1 1 0 \ncompute Tmob mobile temp\n# Correct the temperature for the thermo command\nthermo_modify   temp Tmob \n# Individual temperature control for the upper and lower parts\nfix     myber1 topgroup temp/berendsen ${T} ${T} 0.1\nfix_modify  myber1 temp Ttop \nfix     myber2 botgroup temp/berendsen ${T} ${T} 0.1\nfix_modify  myber2 temp Tbot \n# Calculate the length\nvariable    L equal v_zmax-v_zmin \n# Output the average length every 100 steps\nfix         myat1 all ave/time 10 10 100 v_L file tubeLength.dat\n# Calculate the pulling force, the pulling force is the difference in force between the two fixed ends\nvariable    longforce equal f_sf1[3]-f_sf2[3]\n# Average the pulling force and output it to a file\nfix         myat2 all ave/time 10 10 100 v_longforce file forcetube.dat\n# Loop setting the displacement of the two fixed parts to achieve stretching\nvariable    a loop 100\nlabel       loop\ndisplace_atoms  topgroup move 0 0 0.1\ndisplace_atoms  botgroup move 0 0 -0.1\nrun     1000\nnext        a\n# The filename of this script is input.lammps, errors may occur with different filenames\njump        input.lammps loop",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the free-fall motion of molecules using LAMMPS.",
        "input": "Generate a certain number of molecules randomly above the box, and after free fall, they reach the bottom of the box. Set a \"wall\" at the bottom of the box to prevent atoms from running outside the box. The molecules are set as rigid bodies, and they stop moving after colliding with the bottom wall.",
        "output": "# Model basic settings\nunits     si \nboundary  p p f\nnewton    on\natom_style  sphere\natom_modify  map array sort 0 0\nneighbor    0.42 bin\ntimestep   0.0001\n# Create box \nregion    reg block 0 120 0 60 0 85 units box\ncreate_box  1 reg\n# Set atom properties\nfix prop all property/atom mol ghost yes\n# Potential function settings\npair_style  gran/hooke/history 4e5 NULL 1e2 NULL 0.5 0\npair_coeff  * *\n# Grouping\ngroup    particles type 1\natom_modify     first particles\ngroup    rigid type 1\nneigh_modify  every 1 delay 0 check yes exclude molecule/intra all \n# Thermodynamic information output\nthermo     1000\nthermo_style  custom step atoms ke\nthermo_modify  flush yes lost warn\ncomm_modify  vel yes cutoff 3\n# Create molecular model\nmolecule  mymol molecule.data\nregion    pourreg block 5 115 5 55 60 80 side in units box\n# Set gravitational acceleration\nfix    gravfix all gravity 9.8 vector 0 0 -1 disable\n# Define molecules as rigid bodies\nfix    rigidfix all rigid/small molecule mol mymol gravity gravfix\n# Randomly generate 400 molecules in the pourreg region\nfix    pourfix all pour 400 0 1234 region pourreg mol mymol rigid rigidfix\n# Set bottom wall\nfix    zwall all wall/gran hooke/history 4000.0 NULL 100.0 NULL 0.5 0 zplane 0.1 NULL\n# Save coordinate file\ndump    1 all custom 1000 molecule_pour.xyz id type mass radius x y z fx fy fz\n# Start running\nrun    50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate cross-linking reactions using LAMMPS.",
        "input": "The data.lammps model file is considered known. The middle atoms move randomly, and when they meet the bonding conditions with the outer wall atoms of the cylinder, a cross-linking reaction occurs, producing a new bond connection.",
        "output": "units      real\nnewton      on off\ndimension     3\nboundary     p p p\natom_style     full\npair_style    lj/cut 3.367386145\npair_modify     shift yes\nread_data    data.lammps\n\nregion      acces cylinder z 0 0 20.0535228296 INF INF\ngroup       ions type 3 4 5 6 7 8 9 10\ngroup       solide type  1 2\ngroup      bond3 type 2 3\ngroup      bond4 type 2 4\ngroup      bond5 type 2 5\ngroup      bond6 type 2 6\ngroup      bond7 type 2 7\ngroup      bond8 type 2 8\ngroup      bond9 type 2 9\ngroup      bond10 type 2 10\nset      type * charge 0\n\nbond_style      harmonic\nbond_coeff     1 0.01 0.0 \n\npair_coeff    * * 0.3 3.0 \nneigh_modify    exclude group solide solide \nneigh_modify     every 1 delay 0 check yes \nmass       * 39.1 \n\nfix 1 ions nve \nfix 2 ions langevin 300.0 300.0 23.0 33414 zero yes\n\nfix 11 bond3 bond/create 1 2 3 3.0 1 prob 1. 1423\nfix 12 bond3 bond/break 1 1 3.0 prob 1. 143\n\nfix 13 bond4 bond/create 1 2 4 3.0 1 prob 1. 1423\nfix 14 bond4 bond/break 1 1 3.0 prob 1. 143\n\nfix 15 bond5 bond/create 1 2 5 3.0 1 prob 1. 1423\nfix 16 bond5 bond/break 1 1 3.0 prob 1. 143\n\nfix 17 bond6 bond/create 1 2 6 3.0 1 prob 1. 1423\nfix 18 bond6 bond/break 1 1 3.0 prob 1. 143\n\nfix 21 bond7 bond/create 1 2 3 3.0 1 prob 1. 1423\nfix 22 bond7 bond/break 1 1 3.0 prob 1. 143\n\nfix 23 bond8 bond/create 1 2 4 3.0 1 prob 1. 1423\nfix 24 bond8 bond/break 1 1 3.0 prob 1. 143\n\nfix 25 bond9 bond/create 1 2 5 3.0 1 prob 1. 1423\nfix 26 bond9 bond/break 1 1 3.0 prob 1. 143\n\nfix 27 bond10 bond/create 1 2 6 3.0 1 prob 1. 1423\nfix 28 bond10 bond/break 1 1 3.0 prob 1. 143\n\nvariable    N1 equal f_11[2]-f_12[2]\nvariable    N2 equal f_13[2]-f_14[2]\nvariable    N3 equal f_15[2]-f_16[2]\nvariable    N4 equal f_17[2]-f_18[2]\nvariable    N5 equal f_21[2]-f_22[2]\nvariable    N6 equal f_23[2]-f_24[2]\nvariable    N7 equal f_25[2]-f_26[2]\nvariable    N8 equal f_27[2]-f_28[2]\n\nvariable    Ntot equal v_N1+v_N2+v_N3+v_N4+v_N5+v_N6+v_N7+v_N8\n\nthermo     10000\ncompute     Tion ions temp \nthermo_modify     temp Tion\n\nfix      mur ions wall/region acces lj93 10.0 1.0 1.0\n\ntimestep    0.1\nrun      10000\n\ntimestep    2.0\nrun      100000\nreset_timestep    0\n\ndump       mydmp all atom 5000 dump.xyz\nfix       myavt all ave/time 1000 1 1000 v_Ntot file AdsorbedParticles.dat\n\nrun      1000000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the relaxation process of graphene oxide with water molecules using LAMMPS.",
        "input": "The data.lammps model file is considered known.",
        "output": "# Model basic settings\nboundary  p p p\nunits    real\natom_style  full\n# Potential function parameter settings\nbond_style  harmonic\nangle_style  harmonic\ndihedral_style  opls\nimproper_style  harmonic\n# TIP4P water model settings\npair_style  lj/cut/tip4p/long 1 2 1 1 0.1546 12.0\nkspace_style  pppm/tip4p 1.0e-4\npair_modify   shift yes mix arithmetic\nspecial_bonds  lj/coul 0.0 0.0 0.5 angle yes dihedral yes\n# Read model file\nread_data  data.lammps\n# Group by molecule type\ngroup    H2O type 1\ngroup    H2O include molecule\ngroup    GO type 3\ngroup    GO include molecule\n# Ensemble settings\nfix    mynve all nve\nfix    myber all temp/berendsen 300 300 100\n# Trajectory file output settings\ndump            mydmp all atom 1000 dump.lammpstrj\n# Fix water molecule bond angles\nfix    s1 H2O shake 1.0e-4 200 0 b 1 a 1\n# Simulation timestep\ntimestep   1.0\nthermo   1000\n# Initiate computation\nrun    50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the impact process of Al using LAMMPS.",
        "input": "In the LAMMPS impact simulation, the impact process generally uses the nve ensemble. The simulation of the impact is relatively simple. After relaxation is completed, set the base body to be stationary, and set a high speed for the impact body to hit the base body.",
        "output": "# Simulation basic parameters\nunits metal\nboundary s p p\natom_style atomic\ntimestep 0.001\nneighbor 2 bin\nneigh_modify every 1 delay 0\n# Create the box\nlattice fcc 4.05 \nregion box block 0 20 0 10 0 10\ncreate_box 2 box \n# Generate left and right Al models\nregion left block INF 3 INF INF INF INF\ncreate_atoms 2 region left\nregion right block 8 INF INF INF INF INF\ncreate_atoms 1 region right\n# Grouping\ngroup left type 2\ngroup right type 1\n# Boundary grouping\nregion boundary block INF INF INF INF 19 INF\ngroup boundary region boundary\n# Potential function settings\npair_style eam/fs\npair_coeff * * Al1.eam.fs Al Al\n# Energy minimization\nminimize 1e-10 1e-10 10000 10000\n# Temperature initialization\nvelocity all create 300 98788\n# Fix boundary layer\nvelocity boundary set 0 0 0\nfix 01 boundary setforce 0 0 0\n# Relax for 10 picoseconds\ndump 1 all atom 1000 relax.xyz\nfix 1 all nvt temp 300 300 0.1\nrun 10000\nunfix 1\nundump 1\n# Impact\ndump 1 all atom 100 shock.xyz\nfix 1 all nve\nvelocity left set 10 0 0 units box\nrun 2500",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the compression process of single-crystal copper using LAMMPS.",
        "input": "The compression process is the reverse of the stretching process.",
        "output": "# Model basic parameters\nunits           metal\nboundary        p p p\ndimension       3\natom_style      atomic\nneighbor        2 bin\nneigh_modify    every 1 delay 0\ntimestep        0.001\n# Modeling\nlattice         fcc 3.61\nregion          box block 0 5 0 5 0 10\ncreate_box      1 box\ncreate_atoms    1 box\n# Force field settings, EAM potential\npair_style      eam\npair_coeff      * * Cu_u3.eam\n# Temperature initialization\nvelocity        all create 300 8989\n# Set thermodynamic output\nthermo          100\nthermo_style    custom step temp pe ke press\n# Set compression, compression rate is -0.01\ndump            1 all atom 100 cu.xyz\nfix             2 all npt temp 300 300 0.01 x 0 0 0.1 y 0 0 0.1\nfix             3 all deform 1 z erate -0.01 units box remap x\nrun             30000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the interface between Al and polyurethane using LAMMPS.",
        "input": "The pu_al_data.data and pu_al_para.params model file are considered known. When a metal and a polymer are mixed into a system, it is necessary to perform unit conversion.",
        "output": "# Simulation basic parameters\nunits              real\natom_style         full\nboundary           p p p\ntimestep           0.5\nvariable           t_step equal 0.5\nkspace_style      pppm 1.0e-6\n# Read data file and force field parameter file\nread_data          \"pu_al_data.data\"\ninclude            \"pu_al_para.params\"\n# Energy minimization\nmin_style          cg\nmin_modify         dmax 0.4\nminimize           1e-8 1e-10 200 500\nreset_timestep     0\n# Relaxation\nfix    1 all nve\nfix    2 all langevin 300.0 300.0 $(100.0*v_t_step) 904297\nthermo          200\ndump            1 all atom 200 al_pu_equilibration.xyz\nvariable E_t equal etotal\nvariable time equal time*0.001\nfix           write all print 10 \"${time} ${E_t}\" file energy.dump screen no\nrun           5000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the shearing process of Ni using LAMMPS.",
        "input": "The principle of shear is to set the upper and lower boundaries, fix the lower boundary during shearing, and set a moving speed for the upper boundary.",
        "output": "# Model basic parameters\nunits    metal\nboundary  s p p\nneighbor  2 bin\nneigh_modify every 1 delay 5\natom_style  atomic\ntimestep  0.001\n\n# Modeling\nlattice    fcc 3.52\nregion    box block 0 16 0 3 0 10\ncreate_box  3 box\ncreate_atoms  1 box\n\n# Potential function settings\npair_style  eam\npair_coeff  * * Ni_u3.eam\n\n# Group settings\nregion    lower block INF INF INF INF INF 2\nregion    upper block INF INF INF INF 8 INF\ngroup    lower region lower\ngroup    upper region upper\ngroup    boundary union lower upper\ngroup    mobile subtract all boundary\n\nset    group lower type 2\nset    group upper type 3\n\n# Temperature calculation\n\ncompute    new3d mobile temp\ncompute    new2d mobile temp/partial 0 1 1\n\n# Temperature initialization\nvelocity  mobile create 300.0 5812775 temp new3d\n\n# Relaxation\nfix    1 all nve\nfix    2 boundary setforce 0.0 0.0 0.0\nfix    3 mobile temp/rescale 10 300.0 300.0 10.0 1.0\nfix_modify  3 temp new3d\nthermo    25\nthermo_modify  temp new3d\nrun    100\nunfix    3\n\n# Shear\ndump 1 all atom 100 shear.xyz\nvelocity  upper set 1.0 0 0\nvelocity  mobile ramp vx 0.0 1.0 z 2 8 sum yes\nfix    3 mobile temp/rescale 10 300.0 300.0 10.0 1.0\nfix_modify  3 temp new2d\nthermo    100\nthermo_modify  temp new2d\nreset_timestep  0\nrun    5000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the diffusion process of atoms at the Cu and Al interface using LAMMPS.",
        "input": "The principle of diffusion in LAMMPS simulation is relatively simple. At a certain temperature, set a long period of relaxation to achieve diffusion.",
        "output": "# Model basic settings\nunits metal\natom_style atomic\nboundary s p p\ntimestep 0.001\nneighbor 2 bin\nneigh_modify every 1 delay 0 \n# Create the box\nregion box block 0 50 0 25 0 25 units box\ncreate_box 2 box\n# Cu modeling\nlattice fcc 3.61\nregion Cu block INF 24 INF INF INF INF units box\ncreate_atoms 1 region Cu\n# Al modeling\nlattice fcc 4.05\nregion Al block 26 INF INF INF INF INF units box\ncreate_atoms 2 region Al\n# Potential function settings\npair_style meam\npair_coeff * * library.AlCu.meam Al Cu AlCu.meam Cu Al\n# Output thermodynamic information every 1000 steps\nthermo 1000\n# Energy minimization\nminimize 1e-10 1e-10 5000 5000\n# Temperature initialization\nvelocity all create 1100 98797\n# Perform sufficient diffusion at 1100K, this temperature can be modified as needed\ndump 1 all xyz 10000 dump.xyz \ndump_modify 1 element Cu Al\nfix 1 all npt temp 1100 1100 0.1 y 0 0 1 z 0 0 1\nrun 500000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Set up CO2 molecules as rigid bodies in LAMMPS.",
        "input": "The co2.data model file is considered known.",
        "output": "# Basic parameter settings\nunits real\nboundary p p p\natom_style full\ntimestep 1\nneigh_modify every 1 delay 0 check yes\n# Read model\nread_data co2.data\ngroup CO2 type 1 2\n# Potential function type settings\npair_style lj/cut/coul/cut 12.0\nbond_style harmonic\nangle_style harmonic\npair_modify mix geometric\n# Parameter settings\npair_coeff   1 1  0.0537 2.80 \npair_coeff   2 2  0.1570 3.05 \nbond_coeff   1  1000 1.16 \nangle_coeff  1  1000 180.0 \nthermo 100\n# Temperature initialization\nvelocity all create 300 8989\n# Rigid body setting\nfix 1 CO2 rigid/nve molecule \n# Output results to dump.xyz\ndump 1 all xyz 100 dump.xyz\ndump_modify 1 element C O\nrun 10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the adsorption process of water molecules on graphene using grand canonical Monte Carlo (GCMC) in LAMMPS.",
        "input": "The upper and lower wall channel materials are graphene, and the adsorbed molecules are tip4p water molecules.",
        "output": "units             metal\ndimension         3\nboundary          p p p\natom_style        full\nneighbor        2 bin\nneigh_modify    every 1 delay 10 check yes\ntimestep 0.0005\n\nvariable T equal 300\nvariable seed equal 4928459\n\nregion            box   block 0 100 0 50 0 50 units box\ncreate_box        3 box                            &\n                  bond/types 1                     &\n                  angle/types 1                    &\n                  extra/bond/per/atom 10           &\n                  extra/angle/per/atom 10          &\n                  extra/special/per/atom 10\n\n# customized graphene lattice\nlattice custom 2.4768 a1 1.0 0.0 0.0 a2 0.0 1.732 0.0 a3 0.0 0.0 1.3727 &\nbasis 0.0 0.33333 0.0 &\nbasis 0.0 0.66667 0.0 &\nbasis 0.5 0.16667 0.0 &\nbasis 0.5 0.83333 0.0\n\nregion low block INF INF INF INF 3 6 units box\nregion top block INF INF INF INF  46 49 units box\ncreate_atoms 3 region low\ncreate_atoms 3 region top\n\n\n#Pair Coeff\npair_style hybrid airebo 2.5 1 1 lj/cut/tip4p/long 1 2 1 1 0.1546 12.0\nkspace_style pppm/tip4p 1.0e-4\npair_coeff * * lj/cut/tip4p/long 0 0\npair_coeff 1 1 lj/cut/tip4p/long 0.008031034 3.1589 \npair_coeff 1 3 lj/cut/tip4p/long 0.00494351 3.28 \npair_coeff * * airebo CH.airebo NULL NULL C\nbond_style        harmonic\nangle_style       harmonic\nbond_coeff 1 0 0.9572 \nangle_coeff 1 0 104.52 \n\nmass 1 15.9994 \nmass 2 1.008 \nmass 3 12.011 \n\nregion  h2o block 5 95 5 45 5 45 units box \nmolecule h2omol TIP4P2005.lammps                  \ncreate_atoms    0  random 1 5899  h2o  mol  h2omol  98759\n\ngroup wat type 1 2\n\nvelocity wat create ${T} ${seed} rot yes dist gaussian\ncompute twat wat temp\ncompute_modify twat dynamic/dof yes\nfix mynvt wat nvt temp ${T} ${T} 0.1\nfix_modify mynvt temp twat \nfix myshk wat shake 1.0e-4 200 0 b 1 a 1 mol h2omol\n\ncompute_modify thermo_temp dynamic/dof yes\nfix  mygcmc wat gcmc 100 100 0 0 9869 ${T} 0 1 mol &\n     h2omol pressure 10 region h2o shake myshk\n\ndump 1  all atom 500 dump2.xyz        \nrun 200000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the interfacial energy of Cu using LAMMPS.",
        "input": "Calculate the potential energy Ebulk of the system under periodic boundary conditions ppp, then change the boundary conditions to mpp and calculate the new potential energy Ecut. After changing the boundary to m, the atoms on the left and right sides of the x direction no longer interact with each other, also achieving the effect of cutting out two planes. Substituting into the formula can obtain the interface energy: (Ecut-Ebulk)/s. Where s is the interface area.",
        "output": "# Model basic settings\nunits metal\nboundary p p p\natom_style atomic\nneighbor 2 bin\nneigh_modify every 1 delay 0\n# Modeling\nlattice fcc 3.615\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\n# Setting the force field\npair_style eam\npair_coeff * * Cu_u3.eam\n# Potential energy output\nthermo 1000\nthermo_style custom step etotal pe ke temp vol press lx ly lz\n# Relaxation\nfix 1 all box/relax iso 0.0\n# Energy minimization\nmin_style cg\nminimize 1.0e-10 1.0e-10 100000 100000\nunfix 1\n\n# Change x direction to m boundary, calculate (100) plane surface energy\nchange_box all boundary m p p\n# Perform energy minimization again\nminimize 1.0e-10 1.0e-10 100000 100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the cohesive energy of Fe atoms using LAMMPS.",
        "input": "Calculate the total potential energy of the system and divide it by the number of atoms.",
        "output": "# Basic settings\nunits metal \ndimension 3 \nboundary p p p \natom_style atomic \nneighbor 2.0 bin \nneigh_modify delay 10 check yes \n\n# Modeling\nlattice   bcc 2.86\nregion  box block 0 10 0 5 0 5 units lattice\ncreate_box  1 box\ncreate_atoms 1 box\n# Potential function settings \npair_style eam/fs \npair_coeff * * Fe_2.eam.fs Fe\n# Calculate the potential energy per atom\ncompute pe_atom all pe/atom \ncompute pe_all all reduce sum c_pe_atom \n# Energy minimization\nfix 1 all box/relax iso 0.0 vmax 0.001\nthermo 10 \nthermo_style custom step pe\nmin_style cg \nminimize 1e-25 1e-25 5000 10000 \n\n# Calculate the total number of atoms\nvariable n_atoms equal count(all)\n# Calculate the cohesive energy\nvariable e_cohesive equal pe/v_n_atoms\n# Output the calculation results\nprint \"Cohesive energy = ${e_cohesive}(ev);\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting point of crystalline materials using LAMMPS.",
        "input": "Use the npt ensemble to control the temperature rise, and output the temperature and potential energy during the melting process, and draw the temperature-potential energy curve. The temperature at which the potential energy changes abruptly is the melting point.",
        "output": "# Model settings\nunits    real\natom_style  atomic\nneighbor  1.0 bin\nneigh_modify  every 1 check yes\ntimestep        1.0\n\n# Build the model\nlattice         fcc 5.58\nregion          box block 0 5 0 5 0 5\ncreate_box      1 box\ncreate_atoms    1 box\nmass            1 83.798\n\n# Force field settings\npair_style  lj/cut 7.0\npair_coeff  1 1 0.343 3.591\n\n# Output settings\nthermo          100\nthermo_style    custom step temp pe press vol density lx\ndump            2 all custom 100 dump.xyz id type x y z\n\n# Energy minimization\nfix    1 all box/relax iso 100\nmin_style  cg\nminimize  0.0 1.0e-8 1000000 10000000\nunfix    1\n\n# Relaxation\nfix             1 all momentum 1 linear 1 1 1 angular\nfix             2 all npt temp 1 1 100 iso 100 100 1000\nrun             20000\nunfix           2\nunfix           1\n\n# Melting\nfix             2 all npt temp 1 150 100 iso 100 100 1000\nrun             150000\nunfix           2",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the evaporation process of water droplets using LAMMPS.",
        "input": "The H2O.data model file is considered known. The initial temperature is 273K, and it is heated to 473K under the npt ensemble, and then kept at 473K under the nvt ensemble to achieve evaporation.",
        "output": "# Model basic settings\nunits real\natom_style full\nboundary p p p\ntimestep   1.0\nneighbor 2.0 bin\nneigh_modify every 1 delay 0 check yes\n# Potential function type settings\nbond_style  harmonic\nangle_style  harmonic\npair_style  lj/cut/tip4p/long 1 2 1 1 0.1546 12.0\nkspace_style  pppm/tip4p 1.0e-4\npair_modify   shift yes mix arithmetic\n# Read model file\nread_data H2O.data\n# Potential function parameter settings\npair_coeff 1 1 0.1852 3.1589 #O-O\npair_coeff 2 2 0 0 #H-H\nbond_coeff 1 0 0.9572 #H-O\nangle_coeff 1 0 104.52 #H-O-H\nfix 01 all shake 0.0001 50 0 b 1 a 1\n# Output\nthermo     1000\ndump     1 all xyz 1000 dump.xyz\ndump_modify 1 element O H\n# Evaporation process\nvelocity   all create 273 4928459 mom yes rot yes dist gaussian \nfix         1 all npt temp 273 473 100 iso 1 1 1000\nrun    1000\nunfix 1\nfix 1 all nvt temp 473 473 100\nrun 100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the evaporation process of Ar on a Cu substrate using LAMMPS.",
        "input": "The substrate is Cu, and the upper atoms are Ar atoms. The initial temperature is 90K. The Cu substrate temperature is increased from 90K to 160K and maintained at 160K. During this process, Ar gains energy and evaporates.",
        "output": "units metal\nboundary p p p\natom_style atomic\nneighbor 2 bin\ntimestep 0.0025\n\nlattice fcc 3.615\nregion box block 0 10 0 10 0 40\ncreate_box 2 box\nregion cu block INF INF INF INF 2 18 units box\ncreate_atoms 1 region cu\nregion ar block INF INF INF INF 18 40 units box\ncreate_atoms 2 random 1200 9900 ar\n\nmass 1 64\nmass 2 40\n\npair_style lj/cut 12\npair_coeff 1 1 0.40933 2.338\npair_coeff 2 2 0.01033 3.405\npair_coeff 1 2 0.065 2.8715\n\nminimize 1e-10 1e-10 10000 10000\n\nregion bot block INF INF INF INF INF 3 units box\ngroup bot region bot\nregion heat_ar block INF INF INF INF 15 22 units box\ngroup heat_ar region heat_ar\n\ngroup cu type 1\ngroup mobile_cu subtract cu bot\n\ncompute mobile_cu_temp mobile_cu temp\n\nvelocity all create 90 9090\nvelocity bot set 0 0 0\nfix 001 bot setforce 0 0 0\n\ndump 1 all atom 1000 nvt.xyz\nfix 1 all nvt temp 90 90 0.25\nrun 10000\nundump 1\nunfix 1\nreset_timestep 0\n\ndump 1 all atom 1000 nve.xyz\nfix 1 all nve\nfix 2 mobile_cu langevin 90 160 0.25 699483\nfix_modify 2 temp mobile_cu_temp\nrun 10000\nundump 1\nunfix 1\nunfix 2\nreset_timestep 0\n\ndump 1 all atom 10000 heat.xyz\nfix 1 all nve\nfix 2 mobile_cu langevin 160 160 0.25 699483\nfix_modify 2 temp mobile_cu_temp\nrun 2500000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the diffusion process of CO2 using LAMMPS.",
        "input": "During the diffusion process, calculate and output the MSD, and the diffusion coefficient can be calculated according to the MSD.",
        "output": "# Model basic parameters\nunits       real\natom_style  full\nboundary    p p p\ntimestep    1\nregion      box block 0 60 0 10 0 30 units box\n\n# Create box\ncreate_box  2 box bond/types 1 angle/types 1 extra/bond/per/atom 2 extra/angle/per/atom 1 extra/special/per/atom 2\n\nmolecule    CO2 CO2.txt\ncreate_atoms    0 random 400 9090 box mol CO2 9567 units box\n\n# Set molar masses\nmass        1 12\nmass        2 15.9994\n# Potential function settings\npair_style lj/cut/coul/cut 12 10\npair_coeff 1 1 0.0539 2.8\npair_coeff 2 2 0.157 3.05\npair_coeff 1 2 0.092 2.92\nbond_style harmonic\nbond_coeff 1 1000 1.16\nangle_style harmonic\nangle_coeff 1 200 180\n\n# Energy minimization\nminimize 1e-4 1e-4 1000 1000\n# Velocity initialization\nvelocity all create 300 90866\n\n# Calculate mean square displacement (msd)\ncompute 1 all msd com yes\nvariable msdx equal c_1[1]\nvariable msdy equal c_1[2]\nvariable msdz equal c_1[3]\nvariable msd equal  c_1[4]\nvariable istep equal step\nfix msd all print 1 \"${istep} ${msdx} ${msdy} ${msdz} ${msd}\" screen no file msd.txt\n# Save trajectory file\ndump 1 all xyz 100 dump.xyz\ndump_modify 1 element C O \nfix 1 all nvt temp 300 300 100\nrun 50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of NaCl upon heating using LAMMPS.",
        "input": "The nacl.data model file is considered known. The potential function uses the born/coul/long, and adopts a loop to simulate multiple temperatures in the same in file, and performs npt relaxation at different temperatures.",
        "output": "# Model basic parameters\nunits real\nboundary p p p\natom_style charge\nneighbor 3.0 bin\nneigh_modify every 5 delay 10 check yes one 10000 \n# Read data file\nread_data nacl.data\n# Molar masses\nmass 1 22.989  \nmass 2 35.453  \n# Potential parameter settings\npair_style  born/coul/long 12.0  # cutoffs\npair_coeff 1 1  6.08106 0.317 2.34 24.1789 -11.5141\npair_coeff 2 2  3.64817 0.317 3.17 1669.6160 -3353.917\npair_coeff 1 2  4.86346 0.317 2.755 161.2047 -200.06409\nkspace_style pppm 1.0e-5\npair_modify tail yes shift no \n# Set variables\nvariable mass_t equal 'mass(all)/6.02e23'\nvariable vol_cm3 equal 'vol*1.0e-24'\nvariable my_den equal 'v_mass_t/v_vol_cm3'\n# Output\ntimestep 1.0 #fs\nthermo_style custom step pe ke temp press vol v_my_den\nthermo 5000\n# Temperature initialization\nvelocity all create 1073.0 49112450 mom yes rot yes dist gaussian\n# NPT relaxation\ndump 1 all atom 1000 relax.xyz\nfix 1a all npt temp 1073.0 1073.00 10.0 iso 1.0 1.0 100.0\nrun 50000\nunfix 1a\nundump 1a\nreset_timestep 0\n\ndump    1 all atom 1000 melt.xyz \n# Loop temperature increase\nlabel temp_loopi\nvariable templ index 1073.00 1173.00 1273.00 1373.00 1473.00\nvariable temp_s equal ${templ}\nvariable press_s equal 0.0\n# Log file output\nlog log.NaCl_Temp${temp_s}\n# Simulation information output\nthermo_style custom step  pe ke temp  press vol v_my_den enthalpy \nthermo 10000\n# Different temperature NPT settings\nfix 1a all npt temp 1073.00 ${temp_s} 10.0 iso ${press_s} ${press_s} 100.0\nrun 50000\n\nclear\nnext templ\njump in.NaCl temp_loopi",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the flow of water molecules within graphene slits using LAMMPS.",
        "input": "The data.lammps model file is considered known. The key points are: \n(1) The water molecules are tip4p type water molecules. In the simulation, the fix addforce command is used to drive the water molecules to produce flow.\n(2) To prevent the movement of graphene, the position of graphene is relatively fixed using the fix command:\n(3) In the temperature calculation of water molecules, the influence of the velocity in the flow direction on the temperature is removed.",
        "output": "# Variable settings\nvariable  tem equal 300\nvariable  frc equal 2e-4 # force to be applied to the water molecule\n# Model basic settings\nunits    real\natom_style  full\n# Force field parameter settings\nbond_style  harmonic\nangle_style  harmonic\ndihedral_style  opls\nimproper_style  harmonic\nboundary  p p p\npair_style    lj/cut/tip4p/long 1 2 1 1 0.105 10.0\nkspace_style  pppm/tip4p 1.0e-4\npair_modify  mix arithmetic tail yes\nspecial_bonds  lj/coul 0.0 0.0 0.5 angle yes\n# Read data file and force field parameter file\nread_data  data.lammps\ninclude   PARM.lammps\n# Grouping\ngroup    wat type 1 2\ngroup    Car type 3\n# Fix water molecule bond angles\nfix    myshk wat shake 1.0e-4 200 0 b 1 a 1\nfix    mynve all nve\n# Temperature control for water, removing the velocity impact of the flow direction\ncompute   ctN wat temp/partial 0 1 1 # only thermalise the water using ddl normal to the direction of the flow\nfix    myber1 wat temp/berendsen ${tem} ${tem} 100\nfix_modify  myber1 temp ctN\n# Temperature control for graphene\ncompute   ctM Car temp\nfix    myber2 Car temp/berendsen ${tem} ${tem} 100\nfix_modify  myber2 temp ctM\n# Apply external force to water molecules to produce flow\nfix     kick wat addforce ${frc} 0.0 0.0\n# Keep graphene position relatively fixed\nfix     mymum Car momentum 1 linear 1 1 1\nfix     myrec Car recenter NULL NULL INIT\n# Output settings\ndump    dp1 all atom 1000 dump.lammpstrj\ntimestep  2.0\nthermo    1000\nrun    50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Model the simulation of thin-film permeation and filtration using LAMMPS.",
        "input": "The entire simulation system includes five types of atoms, corresponding to: type 1: the left piston wall; type 2: the middle film; type 3: the right piston wall; type 4: the solution atoms; type 5: the solute atoms.",
        "output": "# Model basic settings\nboundary  s p p\nunits lj\natom_style atomic\n\n# Create simulation box\nlattice fcc 1\nregion simulation_box block -50 50 -15 15 -15 15\ncreate_box 5 simulation_box\n\n# Create 5 regions\nregion piston_left block -49 -48 INF INF INF INF\nregion fluid_left block -45 -2 INF INF INF INF\nregion membrane block -0.25 0.25 INF INF INF INF\nregion fluid_right block 2 45 INF INF INF INF\nregion piston_right block 48 49 INF INF INF INF\n\n# Fill atoms\ncreate_atoms  1 region piston_left\ncreate_atoms  2 region membrane\ncreate_atoms  3 region piston_right\n\ncreate_atoms  4 random 5000 654514 fluid_left\ncreate_atoms  4 random 4500 654514 fluid_right\ncreate_atoms  5 random 500 424514 fluid_right\n\n# Force field settings\n\n# Potential function settings\nmass    * 1\npair_style  lj/cut 2.5\npair_coeff  1*3 1*3 1.0 1.0 # solid-solid \npair_coeff  4 4 1.0 1.0 # solvent-solvent\n\npair_coeff  5 5 2.0 3.0 # solute-solute\npair_coeff  1*3 4 0.8 1 # fluid-solvent\npair_coeff  1*3 5 0.1 3.0 # fluid-solute\n\n# Energy minimization\ndump    mydmp all atom 1 dump.lammpstrj\nthermo    10\nminimize  1.0e-4 1.0e-6 1000 10000\nwrite_data  data.lammps pair ij",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the equilibrium relaxation process of thin-film permeation and filtration using LAMMPS.",
        "input": "The data.lammps model file is considered known.",
        "output": "boundary  s p p\npair_style  lj/cut 2.5\nneigh_modify   every 1 delay 5 check yes\n# Read model file\nread_data  data.lammps\nregion    right block 0 INF INF INF INF INF INF\n# Atom grouping\ngroup    solid type 1 2 3\ngroup    piston_right type 3\ngroup    membrane type 2\ngroup    piston_left type 1\ngroup    fluid type 4 5\ngroup    solvent type 4\ngroup    solute type 5\n# Exclude interactions between wall atoms\nneigh_modify   exclude group solid solid\n# Temperature initialization\nvelocity   fluid create 1.0 4928459 mom yes rot yes dist gaussian\nfix    mynve all nve\ncompute    temperature_fluid fluid temp\nfix    mylgv fluid langevin 1.0 1.0 0.1 1530917 zero yes\nfix_modify  mylgv temp temperature_fluid\n# Fix the filtering membrane\nfix    mysf1 membrane setforce 0 0 0\n# Fix and force settings for piston walls\nfix    mysf2 piston_left setforce NULL 0 0\nfix    mysf3 piston_right setforce NULL 0 0\nvariable  F equal 0.01\nfix    myaf1 piston_left aveforce ${F} NULL NULL\nfix    myaf2 piston_right aveforce -${F} NULL NULL\n# Count the number of solvent and solute atoms after filtration through the membrane\nvariable  solvent_right equal count(solvent,right)\nvariable  solute_right equal count(solute,right)\nvariable  position_piston_left equal xcm(piston_left,x)\nvariable  position_piston_right equal xcm(piston_right,x)\n# Output statistical results\nfix    myat1 all ave/time 1000 1 1000 v_solvent_right file solvent_right.dat\nfix    myat2 all ave/time 1000 1 1000 v_solute_right file solute_right.dat\nfix    myat3 all ave/time 1000 1 1000 v_position_piston_left file position_piston_left.dat\nfix    myat4 all ave/time 1000 1 1000 v_position_piston_right file position_piston_right.dat\n# Output trajectory file\ndump    mydmp all atom 1000 dump.lammpstrj\nthermo_modify  temp temperature_fluid\n# Start running\nrun    1000000\n# Output data file\nwrite_data  data.lammps pair ij",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the effect of different porosities on filtration efficiency in thin-film permeation and filtration using LAMMPS.",
        "input": "The data.lammps model file is considered known. Deleting a certain number of atoms can form pores or vacancy defects.",
        "output": "boundary  s p p\npair_style  lj/cut 2.5\nneigh_modify   every 1 delay 5 check yes\n# Read model file\nread_data  data.lammps\nregion    right block 0 INF INF INF INF INF\n# Atom grouping\ngroup    solid type 1 2 3\ngroup    piston_right type 3\ngroup    membrane type 2\ngroup    piston_left type 1\ngroup    fluid type 4 5\ngroup    solvent type 4\ngroup    solute type 5\n# Exclude interactions between wall atoms\nneigh_modify   exclude group solid solid\n# Proportionally delete membrane atoms\nregion        membrane block -0.25 0.25 INF INF INF INF\ndelete_atoms     porosity membrane 0.5 482793\n# Temperature initialization\nvelocity   fluid create 1.0 4928459 mom yes rot yes dist gaussian\nfix        mynve all nve\ncompute        temperature_fluid fluid temp\nfix        mylgv fluid langevin 1.0 1.0 0.1 1530917 zero yes\nfix_modify    mylgv temp temperature_fluid\nthermo_modify    temp temperature_fluid\n# Fix the membrane\nfix        mysf1 membrane setforce 0 0 0\nfix        mysf2 piston_left setforce NULL 0 0\nfix        mysf3 piston_right setforce NULL 0 0\n# Apply pressure on both sides\nvariable    F equal 0.01\nfix        myaf1 piston_left aveforce ${F} NULL NULL\nfix        myaf2 piston_right aveforce -${F} NULL NULL\n# Count the number of solvent and solute atoms after filtration\nvariable    solvent_right equal count(solvent,right)\nvariable    solute_right equal count(solute,right)\nvariable    position_piston_left equal xcm(piston_left,x)\nvariable    position_piston_right equal xcm(piston_right,x)\n# Output statistical results\nfix        myat1 all ave/time 10000 1 10000 v_solvent_right file solvent_right.dat\nfix        myat2 all ave/time 10000 1 10000 v_solute_right file solute_right.dat\nfix        myat3 all ave/time 10000 1 10000 v_position_piston_left file position_piston_left.dat\nfix        myat4 all ave/time 10000 1 10000 v_position_piston_right file position_piston_right.dat\nfix        myat5 all ave/time 10 1000 10000 f_mysf1[1] file force_membrane.dat\n# Output trajectory file\ndump        mydmp all atom 10000 dump.xyz\nthermo        10000\nrun        5000000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the casting process using LAMMPS.",
        "input": "Add a certain number of atoms to the box at regular intervals, and the number of atoms in the box increases with the simulation time. The command used is fix pour, which can be used to simulate the effect of pouring particles into a container under the action of gravity.",
        "output": "atom_style    sphere\nboundary   fm fm fm\nnewton    off\ncomm_modify   vel yes\nregion    simulation_box block -30 30 -30 30 0 60\nregion    inject1 block -3 -1 -3 -1 57 59\nregion    inject2 block -3 1 1 3 57 59\nregion    inject3 block 1 3 1 3 57 59\nregion    inject4 block 1 3 -3 -1 57 59\ncreate_box   2 simulation_box\nneighbor   0.2 bin\nneigh_modify   delay 0\npair_style  granular\npair_coeff   * * hooke 15000 500 tangential linear_nohistory 1.0 0.4 damping mass_velocity\ntimestep   0.0001\nfix      1 all nve/sphere\nfix      2 all gravity 1.0 spherical 0.0 -180.0\n# wall\nfix     mywall1 all wall/gran/region hooke/history 15000 NULL 500 NULL 0.5 0 region simulation_box \n# printing and visualisation\ncompute    rot_kin all erotate/sphere # rotational kinetic energy of the spherical particles\nthermo_style   custom step atoms ke c_rot_kin\nthermo    10000\nthermo_modify   lost ignore norm no # atom number non-constant\ncompute_modify   thermo_temp dynamic/dof yes \ndump     mydmp all atom 1000 dump.lammpstrj\nvariable   varloop loop 10000 # loop with 10000 step\nlabel     loop\nvariable  seed1 equal floor(${varloop}*34512/10000) # use different seed every times\nvariable  seed2 equal floor(${varloop}*14585/10000) # use different seed every times\nvariable  seed3 equal floor(${varloop}*25894/10000) # use different seed every times\nvariable  seed4 equal floor(${varloop}*89541/10000) # use different seed every times\nfix      mypour1 all pour 1 1 ${seed1} region inject1 # insert one particle at a time\nfix      mypour2 all pour 1 2 ${seed2} region inject2 # insert one particle at a time\nfix      mypour3 all pour 1 1 ${seed3} region inject3 # insert one particle at a time\nfix      mypour4 all pour 1 2 ${seed4} region inject4 # insert one particle at a time\nrun      2000 # short run after particle insersion\nnext     varloop\njump     SELF loop\nrun      2000000 # final longer run",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the adsorption process of water molecules inside CNTs using GCMC in LAMMPS.",
        "input": "The data.lammps, PARM.lammps, and TIP4P2005.lammps files are considered known.",
        "output": "# define all necessary variables\nvariable  T equal 300 # initiale temperature\nvariable  dt equal 0.0005 # ps unit \nvariable  seed equal 4928459\nvariable  mu index -8.1 # not used\nvariable  P index 1 # bars\nvariable  disp index 0.5 # not used\nvariable  tfac equal 5.0/3.0 # (3 trans + 2 rot)/(3 trans)\n\n# simulations initial parameters\nunits    metal # required by airebo\natom_style  full\nbond_style  harmonic\nangle_style  harmonic\nboundary  p p p\npair_style    hybrid airebo 2.5 1 1 lj/cut/tip4p/long 1 2 1 1 0.1546 12.0\nkspace_style  pppm/tip4p 1.0e-4 # TIP4P/2005\n\n# load data, parameter, and molecule files\nread_data  data.lammps\ninclude   PARM.lammps\nmolecule  h2omol TIP4P2005.lammps\n\n# define region and group of interest\nvariable  zlo equal zlo\nvariable  zhi equal zhi\nregion     CNT cylinder z 0 0 5 ${zlo} ${zhi}\ngroup    wat type 1 2\n\n# initialise velocities, perform nvt on water, and maintain water molecule shape\nvelocity   wat create ${T} ${seed} rot yes dist gaussian\ncompute    twat wat temp\ncompute_modify  twat dynamic/dof yes\nfix    mynvt wat nvt temp ${T} ${T} 0.1\nfix_modify  mynvt temp twat # important for subgroup thermalisation\nfix    myshk wat shake 1.0e-4 200 0 b 1 a 1 mol h2omol\ntimestep  ${dt}\n\n# GCMC procedure\ncompute_modify  thermo_temp dynamic/dof yes\nfix    mygcmc wat gcmc 100 100 0 0 54341 ${T} ${mu} ${disp} &\n    mol h2omol tfac_insert ${tfac} group wat shake myshk &\n    pressure ${P} region CNT\n\n# follow the evolution of the number of water molecule during gcmc step\nvariable   oxygen atom \"type==1\"\ngroup    oxygen dynamic all var oxygen\nvariable  nO equal count(oxygen)\nfix    myavt all ave/time 100 1 100 v_nO file numberO.dat\n\n# for visualisation (open with ovito for example)\n# note : VMD does not do great with variable number of atom (written in 2021)\ndump     mydmp all atom 1000 dump.GCMC.lammpstrj\nthermo    1000\n\n# first run\nrun    20000\n\n# end the gcmc step, and start the MD step\nunfix    myavt\nundump    mydmp\nunfix    mygcmc\nunfix    mynvt\n\n# simple NVT dynamic on all system\nfix    mynve all nve\nfix    myber all temp/berendsen ${T} ${T} 0.1\nfix    myrct all recenter INIT INIT NULL\n\n# new dump output\ndump     mydmp all atom 1000 dump.MD.lammpstrj\n\n# second run\nrun    10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the nucleation process of water molecules in a gas environment within graphene slits using LAMMPS.",
        "input": "The graphite.data model file is considered known. In the initial model, water molecules and CO2 molecules are fully mixed into the graphene channel. Under nvt, nve, and npt ensembles, water molecules gather in the center, while CO2 is dispersed into upper and lower layers.",
        "output": "variable tem equal 300\n# Model parameters\nunits real\natom_style full\nbond_style harmonic\nangle_style harmonic\ndihedral_style opls\nimproper_style harmonic\nboundary p p p\npair_style lj/cut/tip4p/long 1 2 1 1 0.105 10.0\nkspace_style pppm/tip4p 1.0e-4\npair_modify mix arithmetic tail yes\nspecial_bonds lj/coul 0.0 0.0 0.5 angle yes\n# Import data file\nread_data graphite.data\n# Import force field parameters\ninclude PARM_FLEXCO2.lammps\n# Set the insertion region for water molecules and CO2\nregion insert block -10 10 -12 12 -18 18\n# Insert CO2 molecules\nlattice sc 4.5 origin 0.5 0.5 0.5\nmolecule co2_mol CO2_TRAPPE.txt\ncreate_atoms 0 region insert mol co2_mol 464563\n# Insert water molecules\nlattice sc 4.5 origin 0.0 0.0 0.0\nmolecule h2o_mol H2O_TIP4P.txt\ncreate_atoms 0 region insert mol h2o_mol 545474\n# Output settings\ndump dp1 all atom 1000 solvate.lammpstrj\nthermo 1000\n# Grouping\ngroup h2o type 1 2\ngroup co2 type 3 4\ngroup car type 5\n# Ensemble settings\nfix mynve all nve/limit 0.1\nfix mymom all momentum 50 linear 0 0 1\n# First stage relaxation\n# Water molecule relaxation\ncompute th2o h2o temp\nfix myber1 h2o temp/berendsen ${tem} ${tem} 100\nfix_modify myber1 temp th2o\nfix myshk h2o shake 1.0e-4 200 0 b 1 a 1 mol h2o_mol \n# CO2 relaxation\ncompute tco2 co2 temp\nfix myber2 co2 temp/berendsen ${tem} ${tem} 100\nfix_modify myber2 temp tco2\n# Graphene relaxation\ncompute tcar car temp\nfix myber3 car temp/berendsen ${tem} ${tem} 100\nfix_modify myber3 temp tcar\n# Start computation\ntimestep 0.5\nrun 5000\ntimestep 1.0\nunfix mynve\n# Second stage, run NVE\nfix mynve all nve\nrun 20000\nunfix mynve \nunfix myber1\nunfix myber2\nunfix myber3\n# Third stage, run NPT\nfix mynpt all npt temp ${tem} ${tem} 100 aniso 1 1 1000\nrun 200000\nwrite_data solvated.data",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of laser heating a Cu sphere using LAMMPS.",
        "input": "The cu.data model file is considered known. The principle of LAMMPS simulation of laser is to input the energy of the laser into the irradiated area, and the command used is fix heat, with high laser energy and short duration.",
        "output": "units metal\natom_style atomic\nboundary p p p\ntimestep 0.001\nneighbor 2 bin\nneigh_modify every 1 delay 0 check yes\n# Read model\nread_data cu.data\n# Set laser heating area\nregion 2 sphere 36 18 30 10 units box\ngroup sphere type 2\n# Force field settings\npair_style eam/fs\npair_coeff * * Cu1.eam.fs Cu Cu\nthermo 100\n# Temperature initialization\nvelocity all create 300 989\n# Laser heating\ndump     1   all    custom 100 cu.xyz  id  type x y z\nfix 1 all nve \nfix 2 sphere heat 10 2.0 region 2\nrun 10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the shot peening process using LAMMPS.",
        "input": "There are many methods for simulating the shot peening process in LAMMPS, such as the velocity impact method, fix deposit deposition method, etc. The principle is basically the same, giving the ball a specific speed to impact the base. Using the velocity impact method, the diamond ball impacts the Si substrate at high speed, leaving an impact pit on the Si surface after impact.",
        "output": "units metal\natom_style atomic\nboundary p p f\nneighbor 2 bin\nneigh_modify every 1 delay 0\ntimestep 0.001\nlattice diamond 5.43\nregion box block 0 15 0 15 0 16 \ncreate_box 2 box\nregion si block INF INF INF INF INF 5\ncreate_atoms 1 region si\nlattice diamond 3.57\nregion c sphere 40 40 50 10 units box\ncreate_atoms 2 region c\nmass 1 28\nmass 2 12\npair_style hybrid tersoff lj/cut 10\npair_coeff * * tersoff SiC_1990.tersoff Si C\npair_coeff 1 2 lj/cut 0.00891 3.33\nregion bot block INF INF INF INF INF 5 units box\ngroup bot region bot\ngroup ball type 2\n\nfix 001 bot setforce 0 0 0\nvelocity all create 300 9899 \nvelocity bot set 0 0 0\n\ndump 1 all atom 100 dump.xyz\nfix 1 all nve\nvelocity ball set 0 0 -25 units box\nrun 4000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the thermal conductivity of water molecules using the NEMD algorithm in LAMMPS.",
        "input": "Set up a heat source and a cold source in the heat transfer direction, continuously input heat at the heat source, and continuously extract heat at the cold source, thus creating a temperature gradient. After the simulation is completed, the heat flow and temperature gradient and other parameters are substituted into the formula to calculate the thermal conductivity.",
        "output": "# Define heat flux\nvariable F equal 0.075\n# Time step\nvariable dt equal 3.0\n# Total simulation time\nvariable tprod equal 1000000\n# Convert simulation time to number of steps\nvariable Nprod equal floor(${tprod}/${dt})\n# SPC/E parameters\nvariable epsOO equal 0.15535\nvariable sigOO equal 3.166\nvariable theta equal 109.47\n# Define cutoff radii\nvariable cutC equal (xhi-xlo)/2.\nvariable cutLJ equal 11\n# Model basic settings\nunits real\ndimension 3\nboundary p p p\natom_style full\n# Read model file\nread_data \"data.spce\"\n# Atom grouping\ngroup O type 2\ngroup H type 1\ngroup water type 1 2\n\n# Force field parameter settings\npair_style lj/cut/coul/long ${cutLJ} ${cutC}\npair_coeff 2 2 ${epsOO} ${sigOO}\npair_coeff 1 2 0 0\npair_coeff 1 1 0 0\nkspace_style ewald 1.e-5\nbond_style harmonic\nangle_style harmonic\nbond_coeff 1 1000.00 1.000\nangle_coeff 1 100.0 ${theta}\n\n# Neighbor parameter definition, set a large parameter due to the short simulation time\nneighbor 4.5 bin\npair_modify tail yes\n\n# Define simulation result sampling frequency parameters\nvariable Nsamp equal 10\nvariable Nrepeat equal floor(${Nprod}/${Nsamp})\nvariable Nevery equal ${Nsamp}*${Nrepeat}\n\n# Calculate the velocity of the box's center of mass (vcmx, vcmy, vcmz)\nvariable vcmx equal \"vcm(all,x)\"\nvariable vcmy equal \"vcm(all,y)\"\nvariable vcmz equal \"vcm(all,z)\"\nvariable vcm2 equal v_vcmx*v_vcmx+v_vcmy*v_vcmy+v_vcmz*v_vcmz\n\n# Calculate temperature, pressure, energy, etc.\ncompute cT all temp\ncompute cP all pressure thermo_temp\ncompute cPe all pe\ncompute cKe all ke\nvariable vE equal c_cKe+c_cPe\n\n# Set partition coordinate points, conduct heat along the z-direction, only calculate key coordinate points in the z-direction\nvariable Lz equal zhi-zlo\nvariable delta equal 4\nvariable dz equal ${Lz}/60\nvariable zlo_Thi equal -${Lz}/4.-${delta}/2.\nvariable zhi_Thi equal ${zlo_Thi}+${delta}\nvariable zlo_Tlo equal ${Lz}/4.-${delta}/2.\nvariable zhi_Tlo equal ${zlo_Tlo}+${delta}\n\n# Set cold and hot regions\nregion Thi_region block INF INF INF INF ${zlo_Thi} ${zhi_Thi}\nregion Tlo_region block INF INF INF INF ${zlo_Tlo} ${zhi_Tlo}\n\n# Calculate cold and hot temperatures\ncompute cTlo water temp/region Tlo_region\ncompute cThi water temp/region Thi_region\n\n# Correct temperatures\nvariable Tlo_act equal c_cTlo/2*3\nvariable Thi_act equal c_cThi/2*3\n\n# Continuously input heat at the heat source and extract the same amount of heat at the cold source to create a temperature difference\n\nfix fHi all ehex 1 ${F} region Thi_region com constrain\nfix fLo all ehex 1 -${F} region Tlo_region com constrain\n\n# NVE ensemble\nfix fNVE all nve\n\n# Calculate temperature based on kinetic energy\nvariable kB equal 0.001987204\ncompute ke water ke/atom\nvariable T atom c_ke/${kB}\n\n# Fix bond angles\nfix fRattle all rattle 1e-10 400 0 b 1 a 1\n\nreset_timestep 0\ntimestep ${dt}\n# Output temperature, energy, etc. calculation results\nthermo_style custom step temp v_Tlo_act v_Thi_act ke pe etotal press v_vcm2\nthermo_modify flush yes\nthermo 1000\n# Calculate temperature in blocks and output, from which the temperature gradient can be obtained\ncompute cchT all chunk/atom bin/1d z lower ${dz}\nfix fchT all ave/chunk ${Nsamp} ${Nrepeat} ${Nevery} cchT v_T file out.Tspce_ehex\n# Output energy\nfix fE all ave/time 10 500 5000 v_vE file out.Espce_ehex\nrun ${Nprod}",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate fluids using LAMMPS.",
        "input": "",
        "output": "# Model basic parameters, 2D model\ndimension  2\nboundary  p s p\natom_style  atomic\nneighbor  0.3 bin\nneigh_modify  delay 5\n\n# Modeling section, a total of three types of atoms\nlattice    hex 0.7\nregion    box block 0 20 0 10 -0.25 0.25\ncreate_box  3 box\ncreate_atoms  1 box\n# Set atomic molar masses\nmass    1 1.0\nmass    2 1.0\nmass    3 1.0\n\n# Force field settings, simple LJ potential\npair_style  lj/cut 1.12246\npair_coeff  * * 1.0 1.0 1.12246\n\n# Set upper and lower wall and fluid atom groups\nregion       1 block INF INF INF 1.25 INF INF\ngroup       lower region 1\nregion       2 block INF INF 8.75 INF INF INF\ngroup       upper region 2\ngroup       boundary union lower upper\ngroup       flow subtract all boundary\n# Change the atom type of the lower wall to 2, and the upper wall to 3\nset       group lower type 2\nset       group upper type 3\n\n# Calculate the temperature of the fluid\ncompute       mobile flow temp\n# Initialize fluid velocity\nvelocity     flow create 1.0 482748 temp mobile\n# Use the NVE ensemble globally\nfix       1 all nve\n# Control the temperature of the fluid\nfix       2 flow temp/rescale 200 1.0 1.0 0.02 1.0\nfix_modify   2 temp mobile\n\n# Fix the lower wall\nvelocity     boundary set 0.0 0.0 0.0\nfix       3 lower setforce 0.0 0.0 0.0\n# Apply a pressure to the upper wall\nfix       4 upper setforce 0.0 NULL 0.0\nfix       5 upper aveforce 0.0 -1.0 0.0\n# Apply an additional force in the x-direction to the fluid atoms to create flow\nfix       6 flow addforce 0.5 0.0 0.0\nfix       7 all enforce2d\n\n# Time step of 0.003, output information every 500 steps\ntimestep  0.003\nthermo    500\nthermo_modify  temp mobile\n# Save atom trajectory every 500 steps\ndump    1 all atom 500 dump.xyz\n# Start computation, run for 30,000 steps\nrun    30000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of molecular deposition using LAMMPS.",
        "input": "The principle of molecular deposition is basically the same as atomic deposition, treating molecules as atoms.",
        "output": "# Molecular deposition\nunits    lj\natom_style      bond\nboundary        p p f\n# Create box\nlattice    fcc 1.0\nregion          box block 0 20 0 5 0 10\ncreate_box      3 box bond/types 1 extra/bond/per/atom 1\n# Create substrate atoms\nregion    substrate block INF INF INF INF INF 3\ncreate_atoms  1 region substrate\n# Force field settings\npair_style  lj/cut 2.5\npair_coeff  * * 1.0 1.0\npair_coeff  1 2 1.0 1.0 5.0\nmass    * 1.0\n# Deposition molecule bond potential parameters\nbond_style  harmonic\nbond_coeff      1 5.0 1.0\nneigh_modify  delay 0\n# Deposition atom group addatoms\ngroup    addatoms type 2 3\n# Mobile atom group, this part is temperature-controlled separately during simulation\nregion      mobile block 0 20 0 5 2 INF\ngroup    mobile region mobile\n# Calculate the temperature of the deposited atoms\ncompute    add addatoms temp\ncompute_modify  add dynamic/dof yes extra/dof 0\n# Ensemble settings\nfix    1 addatoms nve\nfix    2 mobile langevin 0.1 0.1 0.1 587283\nfix    3 mobile nve\n# Define molecule\nmolecule        dimer molecule.dimer\n# Define deposition region\nregion          slab block 0 20 0 5 8 9\n# Set deposition parameters\nfix    4 addatoms deposit 500 0 100 12345 region slab near 1.0 mol dimer vz -1.0 -1.0\n# Add a reflective wall to prevent atoms from escaping at the top\nfix    5 addatoms wall/reflect zhi EDGE\n# Thermodynamic output\nthermo_style  custom step atoms temp epair etotal press\nthermo          100\nthermo_modify  temp add lost/bond ignore lost warn\n# Save atom trajectory\ndump    1 all atom 50 dump.xyz\n# Run for 50,000 steps\nrun             50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the sintering process of Ag spheres using LAMMPS.",
        "input": "After the model is built, the sintering process can be completed by controlling the temperature rise with the nvt or npt ensemble.",
        "output": "# Variables\nvariable        T   equal 1500 # Sintering temperature of 1500K\n# Model settings\nunits           metal\nboundary        p p p \natom_style      atomic\nneighbor        2 bin\nneigh_modify    every 5 delay 0\ntimestep        0.001\n\n# Create box and Ag spheres\nlattice      fcc 4.09\nregion      box block 0 64 0 40 0 40 units box\ncreate_box  1 box\n# Left sphere\nregion          left_ball sphere 20 20 20 10 units box\ncreate_atoms    1 region left_ball\ngroup           left region left_ball\n# Right sphere\nregion          right_ball sphere 44 20 20 10 units box\ncreate_atoms    1 region right_ball\n# Force field settings\npair_style      eam/alloy\npair_coeff      * * Ag.eam.alloy Ag\n# Information output\nthermo          100\nthermo_style    custom step temp pe etotal press vol\n# Fix the left sphere\nfix 01 left recenter INIT INIT INIT\n# Temperature initialization\nvelocity        all create 300 89898\n# Heating\ndump            1 all atom 100 dump.xyz\nfix             1 all nvt temp 300 ${T} 0.1\nrun             10000\nunfix           1\nreset_timestep  0\n# Holding temperature\nfix             1 all nvt temp ${T} ${T} 0.1\nrun             20000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the angle distribution (ADF) of O-O-O and H-O-H in the water molecule system using LAMMPS.",
        "input": "The data.spce model file is considered known. Similar to the rdf of crystal orientation distribution, LAMMPS provides a command for calculating the angle distribution: compute adf. This command can calculate the distribution data of a certain angle (such as the H-O-H angle of water molecules) in the system.",
        "output": "units    real\natom_style  full\nread_data  data.spce\npair_style      lj/cut/coul/long 12.0 12.0\npair_coeff      * * 0.0     1.0\npair_coeff      1 1 0.15535 3.166\nkspace_style  pppm 1.0e-6\n\nbond_style  harmonic\nangle_style  harmonic\ndihedral_style  none\nimproper_style  none\n\nbond_coeff  1 1000.00 1.000\nangle_coeff  1 100.0 109.47\n\nspecial_bonds   lj/coul 1.0e-100 1.0e-100 1.0\n\nneighbor        2.0 bin\ntimestep        2.0\nneigh_modify    every 1 delay 2 check yes\n\nfix    1 all shake 0.0001 20 0 b 1 a 1\nfix    2 all nvt temp 300.0 300.0 100.0\n\nvelocity all create 300.0 6244325\nthermo 100\nrun 500\nreset_timestep 0\n# Calculate the Angular Distribution Function (ADF)\ncompute gofa all adf  45  1 1 1  2.0 3.5  2.0 3.5 & \n                          2 1 1  0.0 1.2  1.5 2.5   # O-O-O, O-H...O\nfix adf all ave/time 10 100 1000 c_gofa[*] file spce-adf.dat mode vector\nrun 1000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the compression process of hydrogen using LAMMPS.",
        "input": "The H.data model file is considered known. The simulation temperature is 300K, and the pressure is 100GPa. Under this condition, hydrogen should be in a solid state.",
        "output": "# Simulation parameter settings\nvariable  t equal 300\nvariable  p equal 1000000\nunits    metal\nboundary  p p p\natom_style  full\nneighbor        0.2 bin\ntimestep  0.0001\nneigh_modify  every 1 delay 0 check yes\n# Force field settings\npair_style  lj/cut 6\nbond_style  harmonic\n# Read data file\nread_data  H.data\n# Thermodynamic output\nthermo_style  custom step time temp pe ke etotal density press pxx pyy pzz vol lx ly lz\nthermo  100\n# Energy minimization\ndump  1 all atom 100 mini.xyz\nminimize  1e-10 1e-10 10000 10000\nundump  1\nreset_timestep  0\n# Temperature initialization\nvelocity        all  create $t 4981299  dist gaussian\n# NPT ensemble relaxation\ndump  1 all atom 100 npt.xyz\nfix  1 all npt temp 300 300 0.01 iso 0 0 0.1\nrun  30000\nunfix  1\nundump  1\nreset_timestep  0\n# Compression under NPT ensemble\nfix  1 all npt temp $t $t 0.01 iso $p $p 0.1\ndump  1 all atom 100 H2.xyz\nrun  10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the process of random collisions between small spheres using LAMMPS.",
        "input": "Randomly generate 800 red balls (type 1) and 1 blue ball (type 2), and after obtaining the initial speed, the balls collide with each other.",
        "output": "# Number of particles\nvariable npart equal 800\n# System units lj\nunits lj\n# Two-dimensional system\ndimension 2\n# Atom style atomic\natom_style atomic\n# Periodic boundary\nboundary p p p\n# Neighbor parameter\nneighbor 6 bin\n# Neighbor list update frequency\nneigh_modify every 1 delay 0 check yes\n# Box dimensions\nregion box block -20 20 -20 20 -0.1 0.1\n# Generate 2 types of atoms in the box\ncreate_box 2 box\n# Convert to two-dimensional calculation\nfix 2d all enforce2d\n# Randomly generate 800 atoms of type 1 in the box\ncreate_atoms 1 random ${npart} 324523 box\n# Randomly generate 1 atom of type 2\ncreate_atoms 2 random 1 32524523 box\n# Atom masses\nmass 1 1\nmass 2 5\n# Set potential parameters, soft potential\npair_style soft 1.0\npair_coeff 1 1 10.0 1.0\npair_coeff 1 2 10.0 3.0\npair_coeff 2 2 10.0 3.0\n# Temperature initialization\nvelocity all create 2.0 34234123 dist gaussian\n# Energy minimization to prevent atom overlap\nminimize 1e-4 1e-4 1000 1000\n# Initialize step count to 0\nreset_timestep 0\n# Output settings\ndump img all atom 10000 atom.xyz\n# NVE ensemble\nfix integrator all nve\n# Thermodynamic output\nthermo_style custom step temp ke pe\nthermo 100\n# Simulation timestep\ntimestep 0.001\n# Start simulation\nrun 500000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the hindered motion of polymer chains using LAMMPS.",
        "input": "The poly.input model file is considered known. The polymer chain data is in the model file, which is read in by the read_data command. Randomly generate blue balls, and the number can be set arbitrarily. During the simulation process, the polymer chain can move, and the blue balls are fixed. When the number of blue balls is small, the movement of the polymer chain is not affected. When the number of blue balls is large, the movement of the polymer chain is hindered.",
        "output": "# Custom number of blue spheres to add\nvariable npart equal 10\n# Simulation parameters\ndimension 2\nunits    lj\natom_style  molecular\nboundary        p p p\n# Neighbor definition\nneighbor 2.0 bin\nneigh_modify every 1 delay 0 check yes\n# Read polymer chain data\nread_data poly.input\n# Set box region\nregion box block -20 20 -20 20 -0.001 0.001\n# Add a second type of atom in the box region\ncreate_atoms 2 random ${npart} 358723 box\n# Molar mass settings\nmass   *        1\n# Atom 1 is assigned to the mobile group\ngroup mobile type 1\n# Force field settings, lj/cut potential\npair_style         lj/cut 1.12246204830937\npair_coeff         * * 1.0 1.0 1.12246204830937\npair_modify        shift yes\n# Bond force field settings\nbond_style fene\nbond_coeff 1 30.0 1.5 1.0 1.0\nspecial_bonds fene\n# Energy minimization to prevent atom overlap\nminimize 1e-5 1e-5 100 100\nreset_timestep 0\n# Output settings\ndump  1 all atom 100 poly.xyz\n# Integration for the mobile group, NVE ensemble\nfix integrator mobile nve\n# Temperature control for the mobile group\nfix dynamics   mobile langevin 3 3 0.5 252352\n# Two-dimensional calculation\nfix run2d      all enforce2d\n# Simulation timestep\ntimestep  0.01\n# Output thermodynamic information every 100 steps\nthermo    100\n# Start running\nrun 100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate gas diffusion phenomena using LAMMPS.",
        "input": "In three-dimensional space, randomly fill 100 gas atoms, and after initializing the temperature, the atoms obtain their initial velocities. Under the NVE ensemble, the potential and kinetic energy of the atoms convert into each other under the Lennard-Jones (LJ) potential, resulting in diffusion. The higher the temperature, the faster the diffusion rate.",
        "output": "# Number of gas particles\nvariable npart equal 100\n# Basic simulation parameters settings\nunits    lj\ndimension 3\natom_style  atomic\nboundary        p p p\nneighbor        0.5   bin\nneigh_modify    every 1 delay 0 check yes\n# 3D box dimensions\nregion box block -10 10 -10 10 -10 10\n# Create box\ncreate_box 1 box\n# Randomly generate 100 gas atoms\ncreate_atoms 1 random ${npart} 324523 box\n# Set molar mass to 1\nmass   1  1\n# Force field settings, soft potential\npair_style soft  1.0\npair_coeff * * 10.0\n# Temperature initialization\nvelocity all create 2.0  34234123 dist gaussian\n# Energy minimization\nminimize 1e-4 1e-4 1000 1000\nreset_timestep 0\n# Save trajectory file\ndump        img all  atom  1000 gas.xyz\n# Set NVE ensemble\nfix 1 all nve\n# Thermodynamic output\nthermo_style custom step temp  ke pe\nthermo    100\n# Simulation timestep\ntimestep  0.001\n# Run for 100,000 steps\nrun    100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the radial distribution function (RDF) of a two-dimensional liquid in equilibrium using LAMMPS.",
        "input": "Randomly generate 400 * 0.8 atoms and initialize the temperature. The atoms move to a certain position under the influence of the Lennard-Jones (LJ) potential and reach equilibrium, then output the radial distribution function (RDF) data.",
        "output": "# Set the number of atoms\nvariable afrac  equal 0.80\nvariable npart  equal ${afrac}*400\n# Temperature settings\nvariable temp   equal 1.0\n# Basic model parameters\nunits    lj\ndimension 2\natom_style  atomic\nboundary        p p p\nneighbor        0.5   bin\nneigh_modify    every 1 delay 0 check yes\n# Generate a 2D box\nregion box block -10 10 -10 10 -0.1 0.1\ncreate_box 1 box\n# Convert to 2D calculation\nfix 2d  all enforce2d\n# Generate atoms\ncreate_atoms 1 random ${npart} 324523 box\n# Set molar mass\nmass   1  1\n# LJ potential settings\npair_style lj/cut 5.0\npair_coeff * * 1.0 1.0\n# Energy minimization\nminimize 1e-4 1e-4 1000 1000\n# Initialize step count to 0\nreset_timestep 0\n# Output trajectory every 1000 steps\ndump  1 all atom  1000 lj.xyz\n# NVE ensemble\nfix integrator all nve\n# Langevin thermostat\nfix dynamics   all langevin ${temp} ${temp} 1.0 2352325\n# Output RDF\ncompute rdf all rdf 200 \nfix saverdf all ave/time 100 100 10000 c_rdf[1] c_rdf[2] file lj.rdf mode vector\n# Output step count, temperature, kinetic energy, potential energy every 100 steps\nthermo_style custom step temp  ke pe\nthermo    100\n# Time step length 0.01\ntimestep  0.01\n# Total number of steps 10000\nrun    10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of gold spheres using LAMMPS.",
        "input": "Set up a crystal lattice and establish a 151515 crystal lattice box, and fill the box with Au atoms. Set a spherical region (region) in the box, and use the delete_atoms command to delete the Au atoms outside the spherical region to achieve the modeling of the gold ball. The temperature is increased from 298K to 2400K.",
        "output": "# Gold sphere melting simulation\n# Basic simulation parameters\ndimension 3\nunits    metal  \natom_style  atomic                      \nboundary        p p p                       \n# Set lattice parameters\nlattice    fcc 4.0782                     \nregion    box block 0 15 0 15 0 15\ncreate_box  1 box         \n# Fill the box with Au atoms             \ncreate_atoms  1 box                       \nmass    1 196.97                       \n# Set a spherical region, take the outside of the sphere\nregion sph sphere 7.0 7.0 7.0 4.0 side out\n# Delete atoms in the outer spherical region, leaving only atoms inside the sphere\ndelete_atoms region sph       \n# Set EAM potential              \npair_style eam                             \npair_coeff * * Au_u3.eam                   \n# Neighbor list parameter definition\nneighbor  3.0 bin  \n# Update the neighbor list every 20 steps                  \nneigh_modify  every 20 delay 0 check no  \n# Energy minimization\nminimize 1.0e-8 1.0e-8 10000 100000             \nmin_style cg                                  \n# Simulation timestep\ntimestep 0.001                            \nreset_timestep 0\n# Thermodynamic information output\nthermo    5000         \n# Custom output: step, potential energy, kinetic energy, temperature, volume, pressure                                \nthermo_style custom step pe ke temp vol press          \n# Initialize temperature to 298K\nvelocity all create 298 39849 mom yes rot yes dist gaussian\n# Save simulation results every 1000 steps\ndump 1d all custom 1000 dump.melt id type x y z  \n# NVT ensemble from 298K to 2400K, achieving melting\nfix             2 all nvt temp 298 2400 0.1\n# Run for 150,000 steps            \nrun  150000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the melting process of clusters using LAMMPS.",
        "input": "The simulation unit is LJ, 2D simulation system, periodic boundary conditions, and the force field is the most common LJ force field. Simulation idea:\n(1)Set up a 4040 simulation box, set a 2020 area in the center of the box, and randomly fill atoms in the middle area.\n(2)Minimize energy to eliminate the overlap of random atoms.\n(3)Set the LJ force field.\n(4)Set the nve ensemble, and use the langevin temperature control method for temperature control. This step can also be directly replaced with the nvt ensemble.\n(5)Run and output the trajectory file.",
        "output": "# Number of atoms\nvariable npart equal 500\n# LJ unit temperature\nvariable tempstart equal 0.5\nvariable tempstop equal 0.5\n# Basic model settings\nunits lj\ndimension 2\natom_style atomic\nboundary p p p\nneighbor 0.5 bin\nneigh_modify every 1 delay 0 check yes\n# Simulation box settings\nregion box block -20 20 -20 20 -0.1 0.1\ncreate_box 1 box\n# 2D calculation settings\nfix 2d all enforce2d\n# Set box2 in the center of the box\nregion box2 block -10 10 -10 10 -0.1 0.1\n# Randomly generate atoms in box2\ncreate_atoms 1 random ${npart} 324523 box2\n# Molar mass\nmass * 1\n# LJ potential settings\npair_style lj/cut 2.5\npair_coeff * * 1.0 1.0\n# Energy minimization\nminimize 1e-4 1e-4 1000 1000\nreset_timestep 0\n# Save atom trajectory\ndump img all atom 1000 dump.xyz\n# NVE ensemble, Langevin thermostat\nfix integrator all nve\nfix dynamics all langevin ${tempstart} ${tempstop} 1.0 2352325\n# Set thermodynamic output to screen\nthermo_style custom step temp ke pe\nthermo 100\n# Simulation timestep settings\ntimestep 0.01\n# Run for 20,000 steps\nrun 20000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the deposition process of C atoms on a Si substrate using LAMMPS.",
        "input": "The substrate is Si, and C atoms are deposited on the Si surface at a certain speed.",
        "output": "dimension 3\nunits    metal                       # Energy: eV Distance: Angstrom Mass: Kg Times: picosecond\natom_style  atomic                      # Classical particles\nboundary        p p f                       # p = periodic, f = fixed\n# Define the lattice constant for Si\nvariable lat_a equal 5.43 # SiC:4.3210\n# Define the box dimensions\nvariable len_x equal 6*${lat_a}\nvariable len_y equal 6*${lat_a}\nvariable len_z equal 12*${lat_a}\nvariable len_z2 equal ${len_z}/2\n# Create the box\nregion bbox block 0 ${len_x} 0 ${len_y} 0 ${len_z} units box\ncreate_box 2 bbox\n# Create the bottom Si model\nlattice diamond ${lat_a}\nregion lbox block  0 ${len_x} 0 ${len_y} 0 ${len_z2} units box  \ncreate_atoms 1 region lbox \n# Create the upper C atom generation region\nregion sput block  2.0 23.0 2.0 23.0 54.3 60.0 units box\n# Atom grouping: bottom fixed part and upper atom part\nregion bot block INF INF INF INF 0.0 2.72 units box \ngroup fbot region bot\ngroup other subtract all fbot\n# Set molar masses\nmass 1 28.09\nmass 2 12.01\n# Potential settings, Tersoff potential, LAMMPS has its own SiC_1989.tersoff file, which can replace this file\npair_style tersoff\npair_coeff * *  SiC_1989.tersoff Si C \n# Neighbor list parameter settings\nneighbor 0.5 bin \nneigh_modify delay 1 check yes  \n# Trajectory file output settings\ndump 1d all custom 1000 dump.sputter id type x y z  \n# Screen output information settings\nreset_timestep 0 \nthermo 5000 \nthermo_style custom step pe ke etotal temp vol press \n# Fix the bottom atoms to prevent movement during deposition\nfix s1 fbot setforce 0.0 0.0 0.0 \n# Energy minimization\nmin_style cg \nminimize 1e-8 1e-8 10000 10000                                \n# Temperature initialization\nvelocity other create 298 39849 mom yes rot yes dist gaussian \n# Relaxation under NVT ensemble  \nfix 1 all nvt temp 298.00 298.0 10.0 \nrun 20000 \n# Deposition process\n# Deposit 500 atoms of type 2\nfix 4 all deposit 500 2 500 95485 region sput near 1.2 vz -0.5 -1.5 target 12.0 12.0 28.0 units box \n# Remove atoms that fly out of the box\nthermo_modify lost ignore flush yes\nrun 100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Implement chain stretching using the addforce method in LAMMPS.",
        "input": "The poly.txt model file is considered known. The simulation uses the LJ unit, and the initial structure is a chain composed of 40 atoms. Bonds are set between the atoms, with a total of 39 bonds. When setting the force field, ignore the pair potential and only calculate the force of the bond. The potential function of the bond is the fene potential. During the simulation process, an external force that changes with time is applied to the rightmost atom.",
        "output": "# Define temperature\nvariable temp equal 1.0\n# Set maximum force\nvariable maxforce equal 200\n# Basic model parameters\ndimension 2\nunits lj\natom_style molecular\natom_modify sort 1000 2.0\ncomm_modify cutoff 2.0\nboundary p p p\n# Neighbor list\nneighbor 2.0 bin\nneigh_modify every 1 delay 0 check yes\n# Read data file\nread_data poly.txt\n# Set molar mass\nmass * 1\n# Group atoms\ngroup mobile type 1 3\ngroup fixed type 2\ngroup force type 3\n# Do not calculate interactions between non-bonded atoms\npair_style none\n# Set bond potential function to fene\nbond_style fene\nbond_coeff 1 50.0 1.5 0.0 0.0\nspecial_bonds fene\n# Time step\nvariable tstep equal 0.01\ntimestep ${tstep}\nthermo 100\n# Output atom trajectory\ndump 1 all atom 50000 dump.xyz\n# Set ensemble + langevin thermostat\nfix integrator mobile nve\nfix dynamics mobile langevin ${temp} ${temp} 10.0 252111\nfix run2d all enforce2d\n# Define the number of running steps\nvariable eqrun equal 50000\nvariable samplerun equal 10000000\n# Relax for 50000 steps\nrun ${eqrun}\nreset_timestep 0\n# Define the magnitude of the force, which varies with time\nvariable extforce equal ${maxforce}*step/${samplerun}\n# Apply force to the atom on the far right (force group)\nfix externforce force addforce v_extforce 0 0\n# Calculate the extension in the x-direction\nvariable dist equal (x[40]-x[1])\n# Save force and x-direction extension to a file\nfix avg all ave/time 1 500000 500000 v_dist v_extforce file dist_vs_force ave one\n# Output results\nthermo 500000\nthermo_style custom step f_avg[1] v_extforce\n# Start computation\nrun ${samplerun}",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Analyze the generation process of clusters during the melting of Cu using LAMMPS.",
        "input": "In a group, when the distance between atoms is less than a certain distance, this group of atoms can be considered as a cluster. Use the LAMMPS cluster calculation command compute ID group-ID cluster/atom cutoff, where cutoff is the cutoff radius.",
        "output": "units           metal\nboundary        p p p\natom_style      atomic\nneighbor        2 bin\nneigh_modify    every 1 delay 0 check yes\ntimestep        0.001\nlattice         fcc 3.61\nregion          box block 0 60 0 60 0 60  units box\ncreate_box      1 box\nregion          cu sphere 30 30 30 6 units box\ngroup           cu type 1\ncreate_atoms    1 region cu\npair_style      eam/fs\npair_coeff      * * Cu1.eam.fs Cu\n# Thermodynamic output\nthermo      100\nthermo_style  custom step temp pe ke press\nvelocity   all create 300 88989\n# Cluster computation\ncompute 1 all cluster/atom 3.5\n# Melting\ndump      1 all custom 1000 dump.xyz id type x y z c_1\nfix       1 all nvt temp 300 4000 0.1\nrun       50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the rotation of a sphere around a fixed axis using LAMMPS.",
        "input": "Use the fix move rotate command.",
        "output": "units           metal\nboundary        p p p\ndimension       3\natom_style      atomic\nneighbor        2 bin\nneigh_modify    every 5 delay 0\ntimestep        0.001\n# Modeling\nlattice         fcc 3.61\nregion          box block -35 35 -35 35 0 40 units box\ncreate_box      3 box\nregion          bot block INF INF INF INF INF 8 units box\ncreate_atoms    1 region bot\nregion          ball sphere -22 0 18 8 units box\ncreate_atoms    2 region ball\nregion          s1 cylinder z 0 0 20 5 8 units box side out\nregion          s2 cylinder z 0 0 24 5 8 units box side in\nregion          s intersect 2 s1 s2\n# Grouping\ngroup           bot type 1 \ngroup           ball type 2\ngroup           s region s\nset             group s type 3\n# Force field settings\npair_style      eam\npair_coeff      * * Cu_u3.eam\n# Velocity initialization\nvelocity        ball create 300 9090\nvelocity        bot set 0 0 0\nfix             001 bot setforce 0 0 0\nfix             002 ball move rotate 0.0 0.0 20 0.0 0.0 1.0 5.0\ndump            1 all atom 100 cu.xyz\nrun             5000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Set up simulation parameters for the NaCl core-shell model in LAMMPS.",
        "input": "In the model, an atom is divided into two parts: the core and the shell. When building the model, the core and shell of an atom are built as two atomic models. The core and shell atoms can be located at the same position or have a slight deviation, and there is a bond connection between the core and the shell.",
        "output": "units     metal\ndimension  3\nboundary  p  p  p\natom_style  full\n\nfix csinfo all property/atom i_CSID\nread_data data.coreshell fix csinfo NULL CS-Info\n\ngroup cores type 1 2\ngroup shells type 3 4\n\nneighbor 2.0 bin\ncomm_modify vel yes\n\nkspace_style ewald 1.0e-6\npair_style   born/coul/long/cs 20.0 20.0    # A, rho, sigma=0, C, D \npair_coeff   * *      0.0 1.000   0.00  0.00   0.00\npair_coeff   3 3    487.0 0.23768 0.00  1.05   0.50 #Na-Na\npair_coeff   3 4 145134.0 0.23768 0.00  6.99   8.70 #Na-Cl\npair_coeff   4 4 405774.0 0.23768 0.00 72.40 145.40 #Cl-Cl\n\nbond_style harmonic\nbond_coeff 1 63.014 0.0\nbond_coeff 2 25.724 0.0\n\n# Equilibration Run\n\nreset_timestep 0\n\nthermo 50\nthermo_style custom step etotal pe ke temp press &\n             epair evdwl ecoul elong ebond fnorm fmax vol\n\ncompute CStemp all temp/cs cores shells \ncompute thermo_press_lmp all pressure thermo_temp # press for correct kinetic scalar\n\nthermo_modify temp CStemp press thermo_press_lmp\n\nvelocity all create 1427 134 dist gaussian mom yes rot no bias yes temp CStemp\nvelocity all scale 1427 temp CStemp\n\ndump 1 all atom 100 dump.xyz\nfix thermoberendsen all temp/berendsen 1427 1427 0.4\nfix nve all nve\nfix_modify thermoberendsen temp CStemp\ntimestep 0.002\nrun 500\n\nunfix thermoberendsen\nrun 1000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the twisting process using LAMMPS.",
        "input": "There are two ways to twist, one is to fix one end and rotate the other end, and the other is to rotate both ends in opposite directions. The rotation command is the fix move rotate command. The method of rotation on both sides is adopted.",
        "output": "# Model basic settings\nunits metal\nboundary p s s \natom_style atomic\ntimestep 0.001\nneighbor 2 bin\nneigh_modify every 1 delay 0 check yes\n# Modeling\nlattice fcc 4.05\nregion box block -10 10 -5 5 -5 5\ncreate_box 1 box\nregion 1 block INF INF -2 2 -2 2 \ncreate_atoms 1 region 1\nmass * 27\n# Force field settings\npair_style eam/fs\npair_coeff * * Al1.eam.fs Al\n# Grouping\nregion left block INF -36 INF INF INF INF units box\nregion right block 36 INF INF INF INF INF units box\ngroup left region left\ngroup right region right\ngroup mobile subtract all left right\n# Temperature initialization\nvelocity mobile create 300 90877\n# Output settings\ndump 1 all atom 100 dump.xyz\n# Twisting\nfix 1 left move rotate 0 0 0 -1 0 0 100 units box \nfix 2 right move rotate 0 0 0 1 0 0 100 units box\n# Ensemble\nfix 3 all nvt temp 300 300 0.1\nrun 6000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the stretching process of polyethylene glycol (PEG) in an aqueous solution using LAMMPS.",
        "input": "The mix.data model file is considered known. LAMMPS simulation of stretching usually has two methods: fix deform stretching and velocity stretching, which are mostly used for the overall deformation of the box. In this simulation, PEG is in the middle position of the box, surrounded by an aqueous solution environment. During the stretching process of PEG, the size of the entire box remains relatively stable. Therefore, the fix addforce command is used to apply forces in opposite directions to the atoms at both ends of the PEG chain, achieving the effect of stretching PEG in water.",
        "output": "# Set pulling force\nvariable f0 equal 5 # kcal/mol/A # 1 kcal/mol/A = 67.2 pN\n# Model basic parameter settings\nunits real\natom_style full\nbond_style harmonic\nangle_style charmm\ndihedral_style charmm\npair_style lj/cut/tip4p/long 1 2 1 1 0.1546 12.0\nkspace_style pppm/tip4p 1.0e-4\nspecial_bonds lj 0.0 0.0 0.5\n# Read data file\nread_data mix.data\n# Read potential function parameter file\ninclude PARM.lammps\n# Set groups\ngroup H2O type 1 2\ngroup PEG type 3 4 5 6 7\n# oxygen_end1 and oxygen_end2 are the two atoms at the ends of the PEG chain\n# Use id to set these two atoms as two atom groups\n# The purpose of grouping is to facilitate the use of the fix addforce command to apply forces\ngroup oxygen_end1 id 65\ngroup oxygen_end2 id 4\n# Simulation result output\ndump mydmp all atom 1000 dump.lammpstrj\n# Time step of 1fs\ntimestep 1\n# Fix water molecule bonds and angles\nfix myshk H2O shake 1.0e-4 200 0 b 1 a 1\n# Set NVT ensemble\nfix mynvt all nvt temp 300 300 100\n# Output temperature\nvariable mytemp equal temp\nfix myat1 all ave/time 10 10 100 v_mytemp file temperature.dat\n# xcm returns the x-coordinate of the PEG end atoms\nvariable x1 equal xcm(oxygen_end1,x)\nvariable x2 equal xcm(oxygen_end2,x)\n# delta_x is the distance between the two atoms in the x direction\nvariable delta_x equal abs(v_x1-v_x2)\n# Real-time output of the distance between the two atoms in the x direction, used to calibrate the stretching length\nfix myat2 all ave/time 10 10 100 v_delta_x file end-to-end-distance.dat\nthermo 1000\n# Run 10,000 steps, relaxation\nrun 10000\n# Set the force in the x direction on the two atoms\nfix myaf1 oxygen_end1 addforce ${f0} 0 0\nfix myaf2 oxygen_end2 addforce -${f0} 0 0\n# Start stretching\nrun 50000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the binding energy of SiC using LAMMPS.",
        "input": "The sic.data model file is considered known. The energy released when atoms combine into a stable crystal is called the binding energy (binding energy) of the crystal, also known as the cohesive energy. Calculate the total potential energy of the system and divide it by the number of atoms.",
        "output": "units        metal\nboundary     p p p \natom_style   full\nread_data   sic.data   \npair_style    tersoff\npair_coeff    * * SiC.tersoff  C  Si \nthermo  10\ndump  1  all  atom 10  dump.xyz \nfix 1 all box/relax aniso 0.0       \nrun 100                              \nminimize  1e-10 1e-10 100000  100000\nvariable  N   equal  count(all)\nvariable  E0  equal  -pe/${N}    \nprint \"Cohesive energy = ${E0}(ev);\"",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Simulate the shear flow process of a solution using LAMMPS.",
        "input": "The system.data model file is considered known. Set the force on the wall atoms in the x direction to 0, and then use the velocity command to set the upper and lower walls to move in opposite directions to produce shear flow. Divide the system in a certain direction, and then calculate the velocity of the atoms in the block, and combine the output to obtain the distribution of the velocity in a certain direction.",
        "output": "# Model basic settings\nboundary p p p\nunits real\natom_style full\nbond_style harmonic\nangle_style harmonic\npair_style lj/cut/tip4p/long 1 2 1 1 0.1546 12.0\nkspace_style pppm/tip4p 1.0e-4\n# Read data file\nread_data system.data\nchange_box all z final -40 40\n# Read potential function parameters\ninclude PARM.lammps\n# Group settings\ngroup gH2O type 1 2\ngroup gNa type 3\ngroup gCl type 4\ngroup gliquid type 1 2 3 4\ngroup gwall type 5\nregion rtop block INF INF INF INF 0 INF\nregion rbot block INF INF INF INF INF 0\ngroup gtop region rtop\ngroup gbot region rbot\ngroup gwalltop intersect gwall gtop\ngroup gwallbot intersect gwall gbot\n# Group relaxation\nfix mynve all nve\ncompute tliq gliquid temp/partial 0 1 1\nfix myber1 gliquid temp/berendsen 300 300 100\nfix_modify myber1 temp tliq\ncompute twall gwall temp/partial 0 1 1\nfix myber2 gwall temp/berendsen 300 300 100\nfix_modify myber2 temp twall\nfix myshk gH2O shake 1.0e-4 200 0 b 1 a 1\nfix myrct all recenter NULL NULL INIT\n# Set forces on upper and lower walls\nfix mysf1 gwalltop setforce 0 NULL NULL\nfix mysf2 gwallbot setforce 0 NULL NULL\n# Set bidirectional movement of the lower wall along the x direction\nvelocity gwallbot set -20e-5 NULL NULL\nvelocity gwalltop set 20e-5 NULL NULL\n# Output simulation results\ndump mydmp all atom 5000 dump.lammpstrj\nthermo 500\nthermo_modify temp tliq\n# Calculate the velocity profile of the solution\ncompute cc1 gliquid chunk/atom bin/1d z 0.0 1.0\nfix myac1 gliquid ave/chunk 10 15000 200000 cc1 vx file vel.profile.dat  \n# Calculate the velocity profile of the wall\ncompute cc2 gwall chunk/atom bin/1d z 0.0 1.0\nfix myac2 gwall ave/chunk 10 15000 200000 cc2 vx file vel.solid.dat # tag:200ps\n# Output the forces on the wall\nfix myat1 all ave/time 10 100 1000 f_mysf1[1] f_mysf2[1] file forces.dat\n# Time step of 1fs\ntimestep 1.0\n# Start computation\nrun 200000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Dynamically add atoms to the system using LAMMPS.",
        "input": "Use the fix pour command to simulate the process of inserting 3000 atoms into the system, and the atoms deposit at the bottom under the action of gravity.",
        "output": "atom_style  sphere\nboundary    p p fm\nnewton      off\ncomm_modify vel yes\n\nregion      reg block -10 10 -10 10 -0.5 16 units box\ncreate_box  1 reg\n\nneighbor    0.2 bin\nneigh_modify    delay 0\n\npair_style      gran/hooke/history 2000.0 NULL 50.0 NULL 0.5 0\npair_coeff  * *\n\ntimestep    0.001\n\nfix     1 all nve/sphere\nfix     2 all gravity 1.0 spherical 0.0 -180.0\nfix     zlower all wall/gran hooke/history 2000.0 NULL 50.0 NULL 0.5 0 &\nzplane 0.0 2000.0 \n\nregion      slab block -9.0 9.0 -9.0 9.0 10.0 15.0 units box\nfix     ins all pour 3000 1 300719 vol 0.13 50 region slab\n\ndump        id all atom 1000 dump.xyz\n\nrun     25000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Dynamically remove atoms from the system using LAMMPS.",
        "input": "Use the fix evaporate command, taking gas evaporation diffusion as an example, set a top area in the box, and delete 10 atoms every 100 steps when the atoms enter the top area.",
        "output": "# Number of gas particles\nvariable npart equal 300\n# Basic simulation parameter settings\nunits lj\ndimension 3\natom_style atomic\nboundary p p p\nneighbor 0.5 bin\nneigh_modify every 1 delay 0 check yes\n# 3D box dimensions\nregion box block -10 10 -10 10 -10 10\n# Create box\ncreate_box 1 box\n# Set the top evaporation region \"top\"\nregion top block INF INF INF INF 3 INF\n# Bottom atom region \"bot\"\nregion bot block INF INF INF INF INF 3\n# Randomly create 100 gas atoms\ncreate_atoms 1 random ${npart} 324523 bot\n# Set molar mass to 1\nmass 1 1\n# Force field setting, soft potential\npair_style soft 1.0\npair_coeff * * 10.0\n\n# Temperature initialization\nvelocity all create 2.0 34234123 dist gaussian\n# Energy minimization\nminimize 1e-4 1e-4 1000 1000\nreset_timestep 0\n# Save trajectory file\ndump img all atom 1000 gas.xyz\n# Set NVE ensemble\nfix 1 all nve\nfix 2 all evaporate 100 10 top 49892\n# Thermodynamic output\nthermo_style custom step temp ke pe\nthermo 100\n# Simulation timestep\ntimestep 0.001\n# Run for 100,000 steps\nrun 100000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Implement Monte Carlo (MC) modeling of FeCu alloy using LAMMPS.",
        "input": "The MC running interval is 100 steps, and the final concentration ratio is 0.02, that is, 2% of the Fe atoms are exchanged for Cu atoms.",
        "output": "# general variables\nvariable        temperature equal 700\nvariable        size equal 20\n# variables for 'fix sgcmc'\nvariable        nsteps_mc     equal 100\nvariable        swap_fraction equal 0.2\nvariable        temperature_mc equal ${temperature}\nvariable        deltamu equal -0.70\nvariable        target_concentration equal 0.02\nvariable        kappa equal 1e3\n# general settings\nunits           metal\natom_style      atomic\n# set up structure\nboundary        p p p\nlattice         bcc 2.88\nregion          box block 0 ${size}  0 ${size}  0 ${size}\ncreate_box      2 box\ncreate_atoms    1 box\nreset_timestep  0\ntimestep        0.0025\n# set up interaction\npair_style      eam/fs\npair_coeff      * * FeCu.pasianot.eamfs Fe Cu\n# initialize velocities\nvariable        double_temp equal ${temperature}*2\nvelocity        all create ${double_temp} 428459 dist gaussian\n# what and how to run\nfix             integrate all npt &\n                temp ${temperature} ${temperature} 1.7 &\n                aniso 0.0 0.0 1.5\nfix             mc all sgcmc ${nsteps_mc} ${swap_fraction} ${temperature_mc} ${deltamu} &\n                randseed 324234 &\n                variance ${kappa} ${target_concentration}\n\n# set up output\nthermo          100\nthermo_style    custom step temp atoms pe press &\n                lx ly lz f_mc[1] f_mc[2] f_mc[3] f_mc[4]\ndump            1 all custom 100 mc.dump id type x y z\n\nrun             10000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the volumetric heat capacity of Cu using LAMMPS.",
        "input": "Calculate the total energy of the system at different temperatures while keeping the system volume constant.",
        "output": "# Initialization section\nunits           metal\nboundary        p p p\natom_style      atomic\n# x is a variable, later used to represent temperature\nvariable        x equal 2.5\n\n# Material modeling\n# Lattice type\nlattice         fcc 3.62\nregion          box block 0 8 0 8 0 8\ncreate_box      1 box\ncreate_atoms    1 box\n\n# Potential function\npair_style      eam\npair_coeff      1 1 Cu_u3.eam\n\n# Calculation process\n# Increase the system temperature from 2.5 K to 2000 K, and at certain intervals, record the temperature and energy\nvariable        N equal step\nvariable        Etotal equal etotal\nvariable        T equal temp\nvariable        V equal vol\nvelocity        all create $x 825577 dist gaussian\nfix             extra all print 100 \"${N} ${V}  ${T}  ${Etotal} \" file data\n# Every 100 steps, print the values of variable N (step number), V (volume), T (temperature), and Etotal (total energy) to the file data\ntimestep        0.002\nthermo          1000\nfix             1 all nvt temp $x 2000 0.2\n# Apply the NVT ensemble to all atoms, heating the system from the value of variable x (2.5 K) to 2000 K, with a temperature coupling constant of 0.2 ps\nrun             120000",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the bulk modulus of diamond using LAMMPS.",
        "input": "Obtain the relationship between the energy of individual atoms and the lattice constant.",
        "output": "# Initialization section\nunits metal\nboundary p p p\natom_style atomic\nvariable i loop 20\nvariable x equal 3.5+0.01*$i\n\n# Material modeling\n# Lattice type\nlattice diamond $x\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\n\n# Potential function\npair_style tersoff\npair_coeff * * SiC.tersoff C\nmass 1 12\nvariable n equal count(all)\nvariable P equal pe/$n\n#variable v equal vol\ntimestep 0.005\nthermo 10\n\n# Energy minimization\nmin_style cg\nminimize 1.0e-12 1.0e-12 1000 1000\nprint \"@ $x $P\"\nrun 1000\nthermo 10\n\n# Loop\nclear\nnext i\njump in.diamond",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the equilibrium lattice constant of diamond crystals using LAMMPS.",
        "input": "Obtain the relationship between the energy of individual atoms and the lattice constant.",
        "output": "# Initialization section\nunits metal\nboundary p p p\natom_style atomic\nvariable i loop 20\nvariable x equal 3.5+0.01*$i\n\n# Material modeling\n# Lattice type\nlattice diamond $x\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\n\n# Potential function\npair_style tersoff\npair_coeff * * SiC.tersoff C\nmass 1 12\nvariable n equal count(all)\nvariable P equal pe/$n\ntimestep 0.005\nthermo 10\n\n# Energy minimization\nmin_style cg\nminimize 1.0e-12 1.0e-12 1000 1000\nprint \"@ $x $P\"\nrun 1000\nthermo 10\n\n# Loop\nclear\nnext i\njump in.diamond",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the equilibrium lattice constant of Al using LAMMPS.",
        "input": "Obtain the relationship between the energy of individual atoms and the lattice constant. Use the conjugate gradient (cg) method to minimize the total energy of the system to find the stable state of the system at each lattice constant, and output different lattice constants and the corresponding average potential energy.",
        "output": "# Initialization section\nunits metal\nboundary p p p\natom_style atomic\nvariable i loop 20\nvariable x equal 4.0+0.01*$i  # Adjust according to the expected lattice constant range of aluminum\n\n# Lattice type\n# Since we are calculating the energy of the system for a series of different lattice constants, the lattice constant here is variable, represented by X\nlattice fcc $x\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\n\n# Potential function\npair_style eam/alloy  # Use a potential function suitable for aluminum\npair_coeff * * ./Al-2009.eam Al  \nmass 1 26.98  # Atomic mass of aluminum\nvariable n equal count(all)\nvariable P equal pe/$n\ntimestep 0.005\nthermo 10\n\n# Energy minimization\nmin_style cg\nminimize 1.0e-12 1.0e-12 1000 1000\nprint \"@ $x $P\"\n\n# Loop\nclear\nnext i\njump in.aluminum",
        "system": "",
        "history": [
            [],
            []
        ]
    },
    {
        "instruction": "Calculate the binding energy of diamond crystals using LAMMPS.",
        "input": "Obtain the relationship between the energy of individual atoms and the lattice constant.",
        "output": "# Initialization section\nunits metal\nboundary p p p\natom_style atomic\nvariable i loop 20\nvariable x equal 3.5+0.01*$i\n\n# Lattice type\nlattice diamond $x\nregion box block 0 10 0 10 0 10\ncreate_box 1 box\ncreate_atoms 1 box\n\n# Potential function\npair_style tersoff\npair_coeff * * SiC.tersoff C\nmass 1 12\nvariable n equal count(all)\nvariable P equal pe/$n\ntimestep 0.005\nthermo 10\n\n# Energy minimization\nmin_style cg\nminimize 1.0e-12 1.0e-12 1000 1000\nprint \"@ $x $P\"\nrun 1000\nthermo 10\n\n# Loop\nclear\nnext i\njump in.diamond",
        "system": "",
        "history": [
            [],
            []
        ]
    }
]